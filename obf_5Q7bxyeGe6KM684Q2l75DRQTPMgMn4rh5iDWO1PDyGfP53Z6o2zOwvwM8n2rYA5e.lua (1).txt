--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 81) then
			v19 = v0(v3(v30, 1, 1));
			return "";
		else
			local v82 = 0;
			local v83;
			while true do
				if (v82 == 0) then
					v83 = v2(v0(v30, 16));
					if v19 then
						local v98 = v5(v83, v19);
						v19 = nil;
						return v98;
					else
						return v83;
					end
					break;
				end
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v84 = (v31 / (2 ^ (v32 - (2 - (1 + 0))))) % ((5 - (880 - (282 + 595))) ^ (((v33 - (1 - 0)) - (v32 - (2 - 1))) + (620 - (555 + 64))));
			return v84 - (v84 % 1);
		else
			local v85 = (933 - (857 + 74)) ^ (v32 - (569 - (367 + 201)));
			return (((v31 % (v85 + v85)) >= v85) and ((2565 - (1523 + 114)) - (214 + 713))) or (0 + 0);
		end
	end
	local function v21()
		local v34 = v1(v16, v18, v18);
		v18 = v18 + 1;
		return v34;
	end
	local function v22()
		local v35, v36 = v1(v16, v18, v18 + 2 + 0);
		v18 = v18 + 2;
		return (v36 * (364 - 108)) + v35;
	end
	local function v23()
		local v37 = 1065 - (68 + 997);
		local v38;
		local v39;
		local v40;
		local v41;
		while true do
			if (v37 == (1271 - (226 + 1044))) then
				return (v41 * (73054774 - 56277558)) + (v40 * ((121355 - 55702) - ((58 - 26) + 85))) + (v39 * 256) + v38;
			end
			if (v37 == (0 + 0)) then
				v38, v39, v40, v41 = v1(v16, v18, v18 + 1 + 2);
				v18 = v18 + (961 - (892 + 65));
				v37 = 2 - 1;
			end
		end
	end
	local function v24()
		local v42 = v23();
		local v43 = v23();
		local v44 = 1 - 0;
		local v45 = (v20(v43, 351 - (87 + 263), 20) * (2 ^ (212 - (67 + 113)))) + v42;
		local v46 = v20(v43, 16 + 5, 75 - (138 - 94));
		local v47 = ((v20(v43, 24 + 8) == (3 - 2)) and -1) or 1;
		if (v46 == (952 - ((820 - (10 + 8)) + 150))) then
			if (v45 == (0 - 0)) then
				return v47 * (0 - 0);
			else
				local v89 = 0 + (0 - 0);
				while true do
					if (v89 == (997 - (915 + 82))) then
						v46 = 2 - 1;
						v44 = 0 + 0 + 0;
						break;
					end
				end
			end
		elseif (v46 == 2047) then
			return ((v45 == (0 - (442 - (416 + 26)))) and (v47 * ((1188 - (1069 + 118)) / (0 - 0)))) or (v47 * NaN);
		end
		return v8(v47, v46 - ((7142 - 4905) - 1214)) * (v44 + (v45 / (2 ^ (10 + (833 - (368 + 423))))));
	end
	local function v25(v48)
		local v49;
		if not v48 then
			v48 = v23();
			if (v48 == (0 - 0)) then
				return "";
			end
		end
		v49 = v3(v16, v18, (v18 + v48) - (439 - (145 + 293)));
		v18 = v18 + v48;
		local v50 = {};
		for v65 = 1, #v49 do
			v50[v65] = v2(v1(v3(v49, v65, v65)));
		end
		return v6(v50);
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v51 = (function()
			return 0;
		end)();
		local v52 = (function()
			return;
		end)();
		local v53 = (function()
			return;
		end)();
		local v54 = (function()
			return;
		end)();
		local v55 = (function()
			return;
		end)();
		local v56 = (function()
			return;
		end)();
		local v57 = (function()
			return;
		end)();
		local v58 = (function()
			return;
		end)();
		while true do
			local v67 = (function()
				return 374 - (123 + 251);
			end)();
			while true do
				if (v67 == (0 - 0)) then
					if (v51 == (699 - (208 + 490))) then
						local v94 = (function()
							return 0 + 0;
						end)();
						while true do
							if (v94 ~= (1 + 0)) then
							else
								v57 = (function()
									return v23();
								end)();
								v51 = (function()
									return 838 - (660 + 176);
								end)();
								break;
							end
							if (v94 == (0 + 0)) then
								v55 = (function()
									return {};
								end)();
								v56 = (function()
									return {v53,v54,nil,v55};
								end)();
								v94 = (function()
									return 1;
								end)();
							end
						end
					end
					if (v51 ~= 2) then
					else
						local v95 = (function()
							return 202 - (14 + 188);
						end)();
						local v96 = (function()
							return;
						end)();
						while true do
							if (v95 == 0) then
								v96 = (function()
									return 675 - (534 + 141);
								end)();
								while true do
									if (1 == v96) then
										v56[#"91("] = (function()
											return v21();
										end)();
										v51 = (function()
											return 2 + 1;
										end)();
										break;
									end
									if (v96 == (0 + 0)) then
										v58 = (function()
											return {};
										end)();
										for v113 = #"]", v57 do
											local v114 = (function()
												return 0;
											end)();
											local v115 = (function()
												return;
											end)();
											local v116 = (function()
												return;
											end)();
											local v117 = (function()
												return;
											end)();
											while true do
												if (v114 == (0 + 0)) then
													local v131 = (function()
														return 0;
													end)();
													while true do
														if (v131 ~= 0) then
														else
															v115 = (function()
																return 0 - 0;
															end)();
															v116 = (function()
																return nil;
															end)();
															v131 = (function()
																return 1;
															end)();
														end
														if (1 ~= v131) then
														else
															v114 = (function()
																return 1;
															end)();
															break;
														end
													end
												end
												if (v114 ~= (1 - 0)) then
												else
													v117 = (function()
														return nil;
													end)();
													while true do
														if (v115 ~= (0 - 0)) then
														else
															v116 = (function()
																return v21();
															end)();
															v117 = (function()
																return nil;
															end)();
															v115 = (function()
																return 1 + 0;
															end)();
														end
														if (1 == v115) then
															if (v116 == #"[") then
																v117 = (function()
																	return v21() ~= 0;
																end)();
															elseif (v116 == 2) then
																v117 = (function()
																	return v24();
																end)();
															elseif (v116 == #"xnx") then
																v117 = (function()
																	return v25();
																end)();
															end
															v58[v113] = (function()
																return v117;
															end)();
															break;
														end
													end
													break;
												end
											end
										end
										v96 = (function()
											return 1;
										end)();
									end
								end
								break;
							end
						end
					end
					v67 = (function()
						return 1;
					end)();
				end
				if (v67 == 1) then
					if (v51 == 3) then
						for v99 = #",", v23() do
							local v100 = (function()
								return 0 + 0;
							end)();
							local v101 = (function()
								return;
							end)();
							while true do
								if (v100 == (396 - (115 + 281))) then
									v101 = (function()
										return v21();
									end)();
									if (v20(v101, #".", #"!") == 0) then
										local v109 = (function()
											return 0 - 0;
										end)();
										local v110 = (function()
											return;
										end)();
										local v111 = (function()
											return;
										end)();
										local v112 = (function()
											return;
										end)();
										while true do
											if (v109 == (3 + 0)) then
												if (v20(v111, #"asd", #"xxx") ~= #"|") then
												else
													v112[#"asd1"] = (function()
														return v58[v112[#".com"]];
													end)();
												end
												v53[v99] = (function()
													return v112;
												end)();
												break;
											end
											if (v109 == (4 - 2)) then
												if (v20(v111, #"~", #"}") == #"{") then
													v112[7 - 5] = (function()
														return v58[v112[2]];
													end)();
												end
												if (v20(v111, 2, 869 - (550 + 317)) == #"\\") then
													v112[#"asd"] = (function()
														return v58[v112[#"19("]];
													end)();
												end
												v109 = (function()
													return 3 - 0;
												end)();
											end
											if ((1 - 0) == v109) then
												local v128 = (function()
													return 0;
												end)();
												local v129 = (function()
													return;
												end)();
												while true do
													if ((0 - 0) == v128) then
														v129 = (function()
															return 285 - (134 + 151);
														end)();
														while true do
															if (v129 == (1665 - (970 + 695))) then
																local v464 = (function()
																	return 0 - 0;
																end)();
																while true do
																	if (v464 ~= (1991 - (582 + 1408))) then
																	else
																		v129 = (function()
																			return 3 - 2;
																		end)();
																		break;
																	end
																	if (v464 ~= (0 - 0)) then
																	else
																		v112 = (function()
																			return {v22(),v22(),nil,nil};
																		end)();
																		if (v110 == 0) then
																			local v494 = (function()
																				return 0;
																			end)();
																			local v495 = (function()
																				return;
																			end)();
																			while true do
																				if (v494 == 0) then
																					v495 = (function()
																						return 0;
																					end)();
																					while true do
																						if (v495 == (0 - 0)) then
																							v112[#"91("] = (function()
																								return v22();
																							end)();
																							v112[#"0313"] = (function()
																								return v22();
																							end)();
																							break;
																						end
																					end
																					break;
																				end
																			end
																		elseif (v110 == #">") then
																			v112[#"19("] = (function()
																				return v23();
																			end)();
																		elseif (v110 == (1826 - (1195 + 629))) then
																			v112[#"91("] = (function()
																				return v23() - ((2 - 0) ^ 16);
																			end)();
																		elseif (v110 ~= #"xxx") then
																		else
																			local v500 = (function()
																				return 0;
																			end)();
																			local v501 = (function()
																				return;
																			end)();
																			while true do
																				if (v500 ~= 0) then
																				else
																					v501 = (function()
																						return 0;
																					end)();
																					while true do
																						if ((241 - (187 + 54)) == v501) then
																							v112[#"91("] = (function()
																								return v23() - ((782 - (162 + 618)) ^ (12 + 4));
																							end)();
																							v112[#"xnxx"] = (function()
																								return v22();
																							end)();
																							break;
																						end
																					end
																					break;
																				end
																			end
																		end
																		v464 = (function()
																			return 1 + 0;
																		end)();
																	end
																end
															end
															if (v129 == 1) then
																v109 = (function()
																	return 3 - 1;
																end)();
																break;
															end
														end
														break;
													end
												end
											end
											if (v109 ~= (0 - 0)) then
											else
												local v130 = (function()
													return 0;
												end)();
												while true do
													if (v130 == 1) then
														v109 = (function()
															return 1 + 0;
														end)();
														break;
													end
													if (v130 == 0) then
														v110 = (function()
															return v20(v101, 1638 - (1373 + 263), #"xxx");
														end)();
														v111 = (function()
															return v20(v101, #".dev", 1006 - (451 + 549));
														end)();
														v130 = (function()
															return 1 + 0;
														end)();
													end
												end
											end
										end
									end
									break;
								end
							end
						end
						for v102 = #"[", v23() do
							v54, v102, v28 = (function()
								return v52(v54, v102, v28);
							end)();
						end
						return v56;
					end
					if (v51 == 0) then
						local v97 = (function()
							return 0;
						end)();
						while true do
							if (0 == v97) then
								v52 = (function()
									return function(v103, v104, v105)
										local v106 = (function()
											return 0;
										end)();
										local v107 = (function()
											return;
										end)();
										while true do
											if (v106 ~= 0) then
											else
												v107 = (function()
													return 0 - 0;
												end)();
												while true do
													if (v107 ~= (0 - 0)) then
													else
														v103[v104 - #"!"] = (function()
															return v105();
														end)();
														return v103, v104, v105;
													end
												end
												break;
											end
										end
									end;
								end)();
								v53 = (function()
									return {};
								end)();
								v97 = (function()
									return 1;
								end)();
							end
							if (v97 == (1385 - (746 + 638))) then
								v54 = (function()
									return {};
								end)();
								v51 = (function()
									return 1;
								end)();
								break;
							end
						end
					end
					break;
				end
			end
		end
	end
	local function v29(v59, v60, v61)
		local v62 = v59[1 + (819 - (599 + 220))];
		local v63 = v59[2];
		local v64 = v59[(7 - 3) - 1];
		return function(...)
			local v68 = v62;
			local v69 = v63;
			local v70 = v64;
			local v71 = v27;
			local v72 = 342 - (218 + 123);
			local v73 = -(1582 - (1535 + (1977 - (1813 + 118))));
			local v74 = {};
			local v75 = {...};
			local v76 = v12("#", ...) - (1 + 0);
			local v77 = {};
			local v78 = {};
			for v86 = 0 + 0, v76 do
				if (v86 >= v70) then
					v74[v86 - v70] = v75[v86 + 1 + 0];
				else
					v78[v86] = v75[v86 + (561 - (306 + 254))];
				end
			end
			local v79 = (v76 - v70) + 1 + 0 + 0;
			local v80;
			local v81;
			while true do
				v80 = v68[v72];
				v81 = v80[1 - 0];
				if (v81 <= (1524 - (899 + (1785 - (841 + 376))))) then
					if (v81 <= ((25 - 6) + 9)) then
						if ((v81 <= (12 + 1)) or (4108 < 3934)) then
							if (v81 <= (14 - (2 + 6))) then
								if ((3499 >= 3439) and (v81 <= (605 - (268 + 335)))) then
									if ((876 < 3303) and (v81 <= (0 - 0))) then
										if (v78[v80[292 - ((163 - 103) + 230)]] ~= v78[v80[576 - (426 + 146)]]) then
											v72 = v72 + 1 + 0;
										else
											v72 = v80[(2318 - (464 + 395)) - (282 + 1174)];
										end
									elseif ((2922 <= 3562) and (v81 > 1)) then
										if (v78[v80[2]] == v80[815 - (569 + 242)]) then
											v72 = v72 + (2 - (2 - 1));
										else
											v72 = v80[1 + 2];
										end
									else
										local v133 = v80[1026 - (706 + 318)];
										local v134 = {v78[v133](v78[v133 + (87 - (84 + 2))])};
										local v135 = 0 - 0;
										for v320 = v133, v80[3 + 1] do
											v135 = v135 + (1252 - (721 + 530));
											v78[v320] = v134[v135];
										end
									end
								elseif (v81 <= (1275 - (945 + (1163 - (467 + 370))))) then
									if (v81 == (7 - 4)) then
										local v136 = v80[2 + 0];
										local v137, v138 = v71(v78[v136](v78[v136 + (701 - (271 + 429))]));
										v73 = (v138 + v136) - (1 + 0);
										local v139 = 0;
										for v323 = v136, v73 do
											local v324 = 1500 - ((2909 - 1501) + 92);
											while true do
												if (v324 == (1086 - (461 + 459 + 166))) then
													v139 = v139 + (1289 - (993 + 295));
													v78[v323] = v137[v139];
													break;
												end
											end
										end
									elseif (v80[1 + 1] < v78[v80[10 - 6]]) then
										v72 = v72 + (1172 - (418 + 753));
									else
										v72 = v80[3];
									end
								elseif (v81 == (2 + (10 - 7))) then
									local v140 = 0 + 0;
									local v141;
									local v142;
									local v143;
									while true do
										if (v140 == (1 + 0)) then
											v143 = 0 + 0;
											for v428 = v141, v80[2 + 2] do
												v143 = v143 + (530 - (406 + 123));
												v78[v428] = v142[v143];
											end
											break;
										end
										if (v140 == (0 + 0)) then
											v141 = v80[798 - (588 + 208)];
											v142 = {v78[v141](v13(v78, v141 + 1 + 0, v80[1325 - (1249 + 73)]))};
											v140 = 1 + 0;
										end
									end
								else
									local v144 = v80[1147 - (466 + (1579 - 900))];
									v78[v144](v13(v78, v144 + (2 - 1), v73));
								end
							elseif (v81 <= 9) then
								if ((2619 >= 1322) and (v81 <= (19 - 12))) then
									if (v78[v80[2]] == v80[1904 - (106 + 1794)]) then
										v72 = v72 + 1 + 0;
									else
										v72 = v80[1 + 2];
									end
								elseif ((4133 >= 2404) and (v81 == ((523 - (150 + 370)) + 5))) then
									v78[v80[5 - 3]] = v78[v80[7 - 4]][v78[v80[118 - ((1286 - (74 + 1208)) + 110)]]];
								else
									local v148 = v80[427 - (360 + 65)];
									local v149, v150 = v71(v78[v148](v13(v78, v148 + (585 - (57 + 527)), v73)));
									v73 = (v150 + v148) - (255 - (79 + 175));
									local v151 = 0 - 0;
									for v325 = v148, v73 do
										v151 = v151 + (1428 - ((100 - 59) + 1386));
										v78[v325] = v149[v151];
									end
								end
							elseif ((v81 <= (33 - 22)) or (1433 == 2686)) then
								if ((v81 == (19 - 9)) or (4123 == 4457)) then
									if (v78[v80[901 - (503 + 396)]] < v78[v80[185 - (92 + 89)]]) then
										v72 = v72 + (104 - (17 + (407 - 321)));
									else
										v72 = v80[3 + 0];
									end
								else
									v61[v80[2 + 1]] = v78[v80[3 - 1]];
								end
							elseif (v81 == (34 - 22)) then
								v78[v80[168 - (122 + 44)]] = v78[v80[3 + 0]] + v80[6 - 2];
							else
								for v328 = v80[2 + 0], v80[8 - 5] do
									v78[v328] = nil;
								end
							end
						elseif (v81 <= (3 + 17)) then
							if ((v81 <= (24 - 8)) or (3972 <= 205)) then
								if (v81 <= (46 - 32)) then
									if ((v78[v80[2 + 0]] ~= v78[v80[8 - 4]]) or (3766 < 1004)) then
										v72 = v72 + 1 + 0;
									else
										v72 = v80[1138 - (832 + 303)];
									end
								elseif (v81 == (30 - 15)) then
									local v156 = 65 - ((420 - (14 + 376)) + 35);
									local v157;
									while true do
										if (v156 == (0 + 0)) then
											v157 = v80[1 + 1];
											v78[v157] = v78[v157](v13(v78, v157 + (790 - (766 + 23)), v73));
											break;
										end
									end
								elseif (v78[v80[9 - 7]] < v80[(2187 - 926) - (1043 + 214)]) then
									v72 = v72 + ((2 + 1) - (2 + 0));
								else
									v72 = v80[1215 - (323 + 889)];
								end
							elseif (v81 <= (48 - 30)) then
								if ((1784 < 2184) and (v81 > (597 - (361 + 219)))) then
									v78[v80[322 - (51 + 2 + 267)]][v80[3 + 0]] = v80[1 + 3];
								else
									v78[v80[(1215 - 800) - (15 + 398)]] = v78[v80[985 - (18 + 726 + 238)]] + v78[v80[(1766 - (23 + 55)) - (1466 + 218)]];
								end
							elseif (v81 > (71 - 52)) then
								local v161 = v80[2 + 0];
								do
									return v13(v78, v161, v161 + v80[2 + 1]);
								end
							elseif ((v78[v80[1 + 1]] < v78[v80[854 - (20 + 830)]]) or (1649 > 4231)) then
								v72 = v72 + 1 + 0;
							else
								v72 = v80[129 - (116 + 10)];
							end
						elseif (v81 <= (49 - (59 - 34))) then
							if ((3193 == 3193) and (v81 <= (2 + 14 + 6))) then
								if (v81 == (760 - (356 + 40 + 343))) then
									v78[v80[740 - (542 + (303 - 107))]] = v78[v80[6 - 3]];
								else
									local v164 = 0;
									local v165;
									local v166;
									while true do
										if ((v164 == (1390 - (135 + 1254))) or (3495 > 4306)) then
											for v431 = 1 + 0 + (901 - (652 + 249)), #v77 do
												local v432 = v77[v431];
												for v465 = 0 + (0 - 0), #v432 do
													local v466 = v432[v465];
													local v467 = v466[1 + 0];
													local v468 = v466[4 - 2];
													if ((v467 == v78) and (v468 >= v165)) then
														v166[v468] = v467[v468];
														v466[2 - (1869 - (708 + 1160))] = v166;
													end
												end
											end
											break;
										end
										if (v164 == (1551 - (1126 + (1153 - 728)))) then
											v165 = v80[2 + 0];
											v166 = {};
											v164 = 406 - (118 + (522 - 235));
										end
									end
								end
							elseif (v81 == (89 - 66)) then
								v78[v80[1123 - (118 + 1003)]] = v61[v80[8 - 5]];
							elseif v78[v80[2 + 0]] then
								v72 = v72 + 1;
							else
								v72 = v80[380 - (142 + 235)];
							end
						elseif ((4001 > 3798) and (v81 <= (1885 - (821 + 1038)))) then
							if (v81 == (113 - 88)) then
								if v78[v80[1 + 1]] then
									v72 = v72 + 1 + 0;
								else
									v72 = v80[980 - (553 + (451 - (10 + 17)))];
								end
							else
								local v169 = 0 - (0 + 0);
								local v170;
								while true do
									if ((0 - 0) == v169) then
										v170 = v78[v80[1 + 3]];
										if not v170 then
											v72 = v72 + 1 + 0;
										else
											v78[v80[2 + 0]] = v170;
											v72 = v80[(1735 - (1400 + 332)) + 0];
										end
										break;
									end
								end
							end
						elseif ((v81 > (16 + 11)) or (4688 <= 4499)) then
							local v171 = v80[1 + 1];
							v78[v171](v13(v78, v171 + 1 + 0, v73));
						else
							local v172 = 0 - 0;
							local v173;
							local v174;
							local v175;
							while true do
								if ((v172 == (0 - 0)) or (1567 <= 319)) then
									v173 = v80[1 + 1];
									v174 = {v78[v173](v13(v78, v173 + (2 - 1), v73))};
									v172 = 2 - 1;
								end
								if (v172 == (1 + 0)) then
									v175 = 0;
									for v433 = v173, v80[(36 - 17) - 15] do
										local v434 = 753 - (239 + 514);
										while true do
											if ((0 + 0) == v434) then
												v175 = v175 + (1330 - (797 + 532));
												v78[v433] = v174[v175];
												break;
											end
										end
									end
									break;
								end
							end
						end
					elseif ((v81 <= (31 + 11)) or (4583 == 3761)) then
						if (v81 <= (12 + 23)) then
							if (v81 <= (72 - 41)) then
								if ((3454 > 1580) and (v81 <= 29)) then
									v60[v80[1205 - (373 + 829)]] = v78[v80[733 - ((2384 - (242 + 1666)) + 255)]];
								elseif (v81 == (1160 - (369 + 761))) then
									v78[v80[2 + 0]] = v78[v80[5 - 2]][v80[7 - 3]];
								else
									v78[v80[240 - (64 + 174)]] = v80[1 + 2];
								end
							elseif ((v81 <= (726 - (269 + 358 + 66))) or (1607 == 20)) then
								if ((v81 > (95 - 63)) or (962 >= 4666)) then
									v78[v80[2 - 0]] = v60[v80[339 - (144 + 192)]];
								else
									local v182 = v80[218 - (42 + 174)];
									local v183 = v78[v182];
									local v184 = v80[2 + 1 + 0];
									for v330 = 1 + 0, v184 do
										v183[v330] = v78[v182 + v330];
									end
								end
							elseif (v81 == (15 + 17 + 2)) then
								v72 = v80[1507 - (363 + 1141)];
							else
								v78[v80[(2522 - (850 + 90)) - (1183 + 397)]] = {};
							end
						elseif (v81 <= (115 - 77)) then
							if ((v81 <= (1135 - (35 + 1064))) or (1896 == 1708)) then
								v78[v80[2 + 0]]();
							elseif ((3985 >= 1284) and (v81 == (28 + 9))) then
								local v187 = 1975 - (1913 + 62);
								local v188;
								local v189;
								while true do
									if (v187 == ((1 - 0) + 0)) then
										for v435 = v188 + (1237 - ((1688 - (360 + 1030)) + 938)), v80[3 + 1] do
											v189 = v189 .. v78[v435];
										end
										v78[v80[5 - 3]] = v189;
										break;
									end
									if (((1666 - (636 + 1030)) == v187) or (1987 == 545)) then
										v188 = v80[1936 - (565 + 1368)];
										v189 = v78[v188];
										v187 = 1;
									end
								end
							else
								local v190 = 0 - 0;
								local v191;
								while true do
									if (v190 == (1661 - (1477 + 184))) then
										v191 = v80[2 - (0 + 0)];
										v78[v191] = v78[v191](v78[v191 + 1 + (0 - 0)]);
										break;
									end
								end
							end
						elseif ((v81 <= (896 - ((775 - 211) + 292))) or (4896 < 1261)) then
							if ((23 < 3610) and (v81 == (66 - 27))) then
								local v192 = v80[5 - 3];
								local v193 = {v78[v192](v78[v192 + (305 - (244 + 60))])};
								local v194 = 0 + (0 - 0);
								for v333 = v192, v80[480 - (41 + 435)] do
									v194 = v194 + (1002 - (938 + 25 + 38));
									v78[v333] = v193[v194];
								end
							else
								v78[v80[2 + 0]] = v78[v80[1128 - (936 + 189)]] - v80[1372 - (34 + 1334)];
							end
						elseif ((v81 > (14 + 27)) or (3911 < 2578)) then
							v78[v80[2]] = v60[v80[1616 - (1565 + 48)]];
						else
							v78[v80[2 + 0]] = v78[v80[1141 - ((1024 - (6 + 236)) + 356)]] * v80[4];
						end
					elseif (v81 <= 49) then
						if ((v81 <= (312 - (176 + 91))) or (4238 < 87)) then
							if (v81 <= (111 - 68)) then
								v78[v80[2 - 0]] = v78[v80[1095 - (975 + 117)]] + v78[v80[1879 - (157 + 1718)]];
							elseif ((2538 == 2538) and (v81 > ((96 + 55) - 107))) then
								v78[v80[2 + 0]][v78[v80[2 + 0 + 1]]] = v78[v80[1176 - ((1853 - 1067) + 386)]];
							elseif (v78[v80[6 - 4]] > v80[14 - (17 - 7)]) then
								v72 = v72 + (3 - 2);
							else
								v72 = v80[1021 - (697 + 321)];
							end
						elseif ((4122 == 4122) and (v81 <= (1387 - ((2226 - (1076 + 57)) + 247)))) then
							if ((v81 == (125 - 79)) or (2371 > 2654)) then
								if (v78[v80[3 - 1]] == v78[v80[15 - 11]]) then
									v72 = v72 + (2 - (1 + 0));
								else
									v72 = v80[(691 - (579 + 110)) + 1];
								end
							else
								do
									return v78[v80[3 - 1]];
								end
							end
						elseif (v81 > (18 + 30)) then
							v61[v80[7 - (1 + 3)]] = v78[v80[1229 - (322 + 801 + 104)]];
						else
							local v203 = v80[613 - (602 + 9)];
							v78[v203](v78[v203 + (1190 - (449 + 740))]);
						end
					elseif (v81 <= (925 - (439 + 387 + 46))) then
						if (v81 <= (130 - 79)) then
							if ((v81 > (997 - ((652 - (174 + 233)) + 702))) or (3466 > 4520)) then
								local v204 = v80[6 - 4];
								local v205 = {};
								for v336 = 1 + 0, #v77 do
									local v337 = 1898 - (260 + (4575 - 2937));
									local v338;
									while true do
										if (v337 == (440 - (382 + (101 - 43)))) then
											v338 = v77[v336];
											for v471 = 0 - 0, #v338 do
												local v472 = v338[v471];
												local v473 = v472[1 + 0];
												local v474 = v472[3 - 1];
												if ((v473 == v78) and (v474 >= v204)) then
													v205[v474] = v473[v474];
													v472[2 - (1 + 0)] = v205;
												end
											end
											break;
										end
									end
								end
							else
								v78[v80[2 + 0]] = v61[v80[1208 - (902 + 303)]];
							end
						elseif ((v81 == (1138 - (686 + 400))) or (951 >= 1027)) then
							local v208 = v80[2];
							local v209 = v80[8 - 4];
							local v210 = v208 + (4 - 2);
							local v211 = {v78[v208](v78[v208 + 1], v78[v210])};
							for v339 = 1691 - (1121 + 569), v209 do
								v78[v210 + v339] = v211[v339];
							end
							local v212 = v211[812 - (721 + 90)];
							if v212 then
								local v381 = 214 - (22 + 192);
								while true do
									if (v381 == (683 - (483 + 200))) then
										v78[v210] = v212;
										v72 = v80[1466 - (1404 + 59)];
										break;
									end
								end
							else
								v72 = v72 + (2 - 1);
							end
						elseif ((v78[v80[2 - 0]] == v78[v80[474 - (224 + 246)]]) or (1369 > 2250)) then
							v72 = v72 + (766 - (418 + 50 + 297));
						else
							v72 = v80[565 - (334 + 228)];
						end
					elseif (v81 <= (185 - 130)) then
						if (v81 > (124 - 70)) then
							local v213 = v80[2 - 0];
							v78[v213](v13(v78, v213 + 1 + 0, v80[239 - (141 + 95)]));
						else
							for v342 = v80[1 + 1 + 0], v80[7 - 4] do
								v78[v342] = nil;
							end
						end
					elseif (v81 == (2049 - (1238 + 755))) then
						local v214 = v80[2];
						local v215 = v78[v80[6 - 3]];
						v78[v214 + 1 + 0] = v215;
						v78[v214] = v215[v80[10 - 6]];
					else
						v78[v80[2 + 0]] = v80[2 + 1];
					end
				elseif (v81 <= (120 - 34)) then
					if ((v81 <= 71) or (937 > 3786)) then
						if (v81 <= (38 + 26)) then
							if (v81 <= ((687 - 464) - (92 + 71))) then
								if (v81 <= (29 + 18 + 11)) then
									if ((v80[2 - 0] == v78[v80[769 - (574 + 191)]]) or (901 > 4218)) then
										v72 = v72 + (2 - 1) + 0;
									else
										v72 = v80[7 - 4];
									end
								elseif (v81 == (31 + 28)) then
									local v222 = v80[(2059 - 1208) - (254 + 284 + 311)];
									v78[v222] = v78[v222]();
								else
									local v224 = (2892 - 1406) - (35 + 1451);
									local v225;
									local v226;
									local v227;
									local v228;
									while true do
										if (v224 == (128 - (55 + 71))) then
											for v437 = v225, v73 do
												v228 = v228 + (1 - 0);
												v78[v437] = v226[v228];
											end
											break;
										end
										if (v224 == (1791 - (573 + 1217))) then
											v73 = (v227 + v225) - (2 - 1);
											v228 = 0 + 0;
											v224 = 2 - 0;
										end
										if (v224 == (0 + 0 + 0)) then
											v225 = v80[941 - (714 + 225)];
											v226, v227 = v71(v78[v225](v13(v78, v225 + (2 - 1), v80[3 - 0])));
											v224 = 1 + 0;
										end
									end
								end
							elseif ((4779 > 4047) and (v81 <= (89 - (3 + 24)))) then
								if (v81 == (867 - (118 + 688))) then
									local v229 = v80[50 - (25 + 23)];
									local v230, v231 = v71(v78[v229](v13(v78, v229 + 1 + 0, v80[1 + 2])));
									v73 = (v231 + v229) - (1887 - (927 + 959));
									local v232 = (722 - (478 + 244)) - 0;
									for v344 = v229, v73 do
										v232 = v232 + (3 - 2);
										v78[v344] = v230[v232];
									end
								else
									v78[v80[734 - (16 + 716)]] = v78[v80[5 - 2]][v78[v80[101 - (11 + 86)]]];
								end
							elseif (v81 > (153 - 90)) then
								local v235 = v80[287 - (175 + 110)];
								local v236 = v78[v235];
								local v237 = v80[6 - 3];
								for v347 = 4 - 3, v237 do
									v236[v347] = v78[v235 + v347];
								end
							else
								v78[v80[1798 - (503 + 1293)]] = v78[v80[8 - 5]] - v78[v80[3 + 1]];
							end
						elseif (v81 <= (1128 - (810 + 251))) then
							if ((4050 > 1373) and (v81 <= (46 + 19))) then
								v78[v80[1 + 1]] = v80[1 + 2] ~= ((517 - (440 + 77)) + 0);
							elseif (v81 > (599 - (20 + 23 + 490))) then
								v78[v80[735 - (711 + 22)]][v80[11 - 8]] = v78[v80[863 - (240 + 619)]];
							else
								local v241 = v80[1 + 1];
								local v242 = {v78[v241](v13(v78, v241 + 1 + 0, v73))};
								local v243 = 1744 - (1344 + (1464 - 1064));
								for v350 = v241, v80[409 - (255 + 150)] do
									local v351 = 0 + (1556 - (655 + 901));
									while true do
										if ((v351 == (951 - (783 + 168))) or (1037 > 4390)) then
											v243 = v243 + 1 + 0;
											v78[v350] = v242[v243];
											break;
										end
									end
								end
							end
						elseif (v81 <= (294 - 225)) then
							if (v81 == (67 + 1)) then
								if ((1407 <= 1919) and not v78[v80[6 - 4]]) then
									v72 = v72 + ((323 + 1417) - (404 + 1023 + 312));
								else
									v72 = v80[409 - (183 + 223)];
								end
							else
								v78[v80[1 + 1]][v80[3 - 0]] = v80[3 + 1];
							end
						elseif (v81 == (26 + 44)) then
							v78[v80[1 + 1]] = v78[v80[340 - (10 + 327)]];
						elseif ((2526 >= 1717) and (v78[v80[2 + 0]] > v80[342 - (118 + 220)])) then
							v72 = v72 + 1 + 0;
						else
							v72 = v80[452 - (108 + 341)];
						end
					elseif ((v81 <= (36 + 29 + 13)) or (3620 <= 2094)) then
						if (v81 <= (312 - 238)) then
							if (v81 <= (1565 - (711 + 782))) then
								v72 = v80[5 - 2];
							elseif (v81 == (542 - (270 + 199))) then
								v78[v80[1 + 1]] = v78[v80[1822 - (580 + 1239)]] * v80[1 + 3];
							else
								v78[v80[5 - 3]] = not v78[v80[18 - (6 + 9)]];
							end
						elseif (v81 <= (73 + 3)) then
							if (v81 > (3 + 72)) then
								v78[v80[1 + 1]] = v78[v80[7 - 4]] + v80[3 + 1];
							elseif (v80[1169 - (645 + 522)] == v78[v80[(7227 - 5433) - (1010 + 780)]]) then
								v72 = v72 + 1 + 0;
							else
								v72 = v80[3 + 0];
							end
						elseif (v81 > (1522 - (695 + 750))) then
							local v251 = (4497 - 3180) - (486 + 831);
							local v252;
							while true do
								if ((v251 == (0 - 0)) or (1723 >= 2447)) then
									v252 = v78[v80[11 - (10 - 3)]];
									if (not v252 or (1199 > 3543)) then
										v72 = v72 + ((7387 - 5550) - (1045 + 791));
									else
										v78[v80[4 - 2]] = v252;
										v72 = v80[3];
									end
									break;
								end
							end
						elseif (v80[2 - 0] <= v78[v80[509 - (351 + (505 - (285 + 66)))]]) then
							v72 = v72 + (1575 - (1281 + 293));
						else
							v72 = v80[269 - ((65 - 37) + 238)];
						end
					elseif (v81 <= (182 - 100)) then
						if (v81 <= (1639 - (1381 + 178))) then
							if (v81 == (2023 - ((2439 - (682 + 628)) + 815))) then
								if (v78[v80[2 + 0 + 0]] < v80[4 + 0]) then
									v72 = v72 + 1 + 0;
								else
									v72 = v80[5 - 2];
								end
							else
								local v253 = v80[6 - 4];
								v78[v253] = v78[v253](v13(v78, v253 + 1 + 0, v80[774 - (720 + 51)]));
							end
						elseif ((1617 < 3271) and (v81 == (551 - (381 + 89)))) then
							local v255 = 0 + 0;
							local v256;
							local v257;
							while true do
								if ((3085 > 1166) and (v255 == (1776 - ((720 - (176 + 123)) + 1355)))) then
									v256 = v80[2 - 0];
									v257 = v78[v256];
									v255 = 1 + 0;
								end
								if ((4493 >= 3603) and (v255 == (1 + 0))) then
									for v442 = v256 + (1084 - (286 + 797)), v80[(2 + 2) - 1] do
										v7(v257, v78[v442]);
									end
									break;
								end
							end
						else
							local v258 = v80[2 - 0];
							local v259 = v80[1160 - (1074 + 82)];
							local v260 = v258 + (3 - 1);
							local v261 = {v78[v258](v78[v258 + (1 - 0)], v78[v260])};
							for v352 = 786 - (222 + 563), v259 do
								v78[v260 + v352] = v261[v352];
							end
							local v262 = v261[(1 + 0) - 0];
							if v262 then
								v78[v260] = v262;
								v72 = v80[1787 - (214 + 1570)];
							else
								v72 = v72 + 1 + 0;
							end
						end
					elseif (v81 <= (1539 - (990 + 465))) then
						if ((2843 <= 2975) and (v81 > (35 + 48))) then
							do
								return;
							end
						else
							do
								return v78[v80[1 + (1 - 0)]];
							end
						end
					elseif (v81 > (83 + 2)) then
						if ((v80[7 - 5] <= v78[v80[(5397 - 3667) - (1668 + 58)]]) or (1989 <= 174)) then
							v72 = v72 + 1 + 0;
						else
							v72 = v80[3 + 0];
						end
					else
						v78[v80[628 - (512 + 114)]] = not v78[v80[7 - (319 - (306 + 9))]];
					end
				elseif (v81 <= (208 - 107)) then
					if (v81 <= (323 - 230)) then
						if (v81 <= (42 + 47)) then
							if (v81 <= (17 + 70)) then
								local v123 = v80[2 + 0];
								v78[v123] = v78[v123](v13(v78, v123 + ((10 - 7) - 2), v80[1997 - (19 + 90 + 1885)]));
							elseif ((v81 > (1557 - (1269 + 200))) or (209 > 2153)) then
								if not v78[v80[2]] then
									v72 = v72 + (1 - 0);
								else
									v72 = v80[(502 + 316) - (98 + 717)];
								end
							else
								local v264 = 826 - (802 + 24);
								local v265;
								while true do
									if (v264 == (0 - 0)) then
										v265 = v80[4 - 2];
										v78[v265](v13(v78, v265 + (1 - 0), v80[(833 + 896) - (1165 + 561)]));
										break;
									end
								end
							end
						elseif ((v81 <= (14 + 77)) or (2020 == 1974)) then
							if (v81 == ((794 - 516) - 188)) then
								v78[v80[1 + 1]] = v29(v69[v80[3]], nil, v61);
							else
								v78[v80[2 + 0]] = v78[v80[1 + 2]] / v80[2 + (1377 - (1140 + 235))];
							end
						elseif ((v81 == (20 + 72)) or (1347 == 1360)) then
							local v268 = v80[5 - 3];
							local v269, v270 = v71(v78[v268](v78[v268 + (3 - 2)]));
							v73 = (v270 + v268) - (1 + 0);
							local v271 = 0 + 0;
							for v355 = v268, v73 do
								local v356 = 0 + 0 + 0;
								while true do
									if (((0 + 0) == v356) or (4461 == 3572)) then
										v271 = v271 + 1 + 0 + 0;
										v78[v355] = v269[v271];
										break;
									end
								end
							end
						else
							v78[v80[1435 - (797 + 636)]] = {};
						end
					elseif (v81 <= (470 - 373)) then
						if ((v81 <= (1315 - (855 + 365))) or (2872 == 318)) then
							if ((568 == 568) and (v81 > ((440 + 1273) - (1427 + 192)))) then
								v78[v80[1 + 1]][v78[v80[2 + 1]]] = v78[v80[4 + 0]];
							else
								v78[v80[4 - (54 - (33 + 19))]] = v29(v69[v80[3 + 0]], nil, v61);
							end
						elseif (v81 == (218 - 122)) then
							v78[v80[1 + 1]][v78[v80[329 - (70 + 122 + 134)]]] = v80[1280 - (316 + 960)];
						else
							do
								return;
							end
						end
					elseif (v81 <= (58 + 41)) then
						if (v81 > (55 + 43)) then
							v78[v80[2]][v78[v80[3 + 0]]] = v80[4 + 0];
						elseif (v80[7 - (14 - 9)] < v78[v80[4]]) then
							v72 = v72 + (552 - (83 + 468));
						else
							v72 = v80[1809 - (530 + 672 + (1184 - 580))];
						end
					elseif ((4200 == 4200) and (v81 > (466 - 366))) then
						v78[v80[2 + 0]] = v78[v80[4 - 1]] / v80[2 + 2];
					else
						local v281 = v80[5 - 3];
						v78[v281] = v78[v281]();
					end
				elseif (v81 <= (433 - (45 + 280))) then
					if (v81 <= (101 + 3)) then
						if (v81 <= (90 + 12)) then
							v78[v80[1 + 1]] = v78[v80[2 + 1]][v80[4]];
						elseif (v81 > (19 + 84)) then
							v78[v80[3 - 1]]();
						else
							local v283 = 1911 - (340 + 1571);
							local v284;
							local v285;
							local v286;
							while true do
								if (v283 == (0 + 0)) then
									v284 = v69[v80[1775 - (1733 + 39)]];
									v285 = nil;
									v283 = 2 - 1;
								end
								if (((1035 - (125 + 909)) == v283) or (4285 < 1369)) then
									v286 = {};
									v285 = v10({}, {__index=function(v445, v446)
										local v447 = 1948 - (1096 + 852);
										local v448;
										while true do
											if (v447 == (0 + 0)) then
												v448 = v286[v446];
												return v448[1 - 0][v448[2 + 0]];
											end
										end
									end,__newindex=function(v449, v450, v451)
										local v452 = v286[v450];
										v452[177 - (50 + 126)][v452[5 - 3]] = v451;
									end});
									v283 = 514 - (409 + 103);
								end
								if (v283 == (238 - (46 + 190))) then
									for v454 = 96 - (51 + 44), v80[4] do
										local v455 = 0 + 0;
										local v456;
										while true do
											if ((v455 == (1317 - (1114 + 203))) or (3520 > 4910)) then
												v72 = v72 + (727 - (228 + 498));
												v456 = v68[v72];
												v455 = 1 + 0;
											end
											if ((2842 <= 4353) and (v455 == (1 + 0))) then
												if (v456[1] == (1442 - (107 + 1314))) then
													v286[v454 - (664 - (174 + 489))] = {v78,v456[527 - (303 + 221)]};
												else
													v286[v454 - (1270 - ((711 - 480) + 1038))] = {v60,v456[1913 - (716 + 1194)]};
												end
												v77[#v77 + (1163 - (171 + 991))] = v286;
												break;
											end
										end
									end
									v78[v80[8 - 6]] = v29(v284, v285, v61);
									break;
								end
							end
						end
					elseif (v81 <= 106) then
						if ((v81 > 105) or (3751 < 1643)) then
							local v287 = v69[v80[1 + 2]];
							local v288;
							local v289 = {};
							v288 = v10({}, {__index=function(v357, v358)
								local v359 = 0 - 0;
								local v360;
								while true do
									if (((0 - 0) == v359) or (4911 == 3534)) then
										v360 = v289[v358];
										return v360[1 + 0][v360[6 - 4]];
									end
								end
							end,__newindex=function(v361, v362, v363)
								local v364 = v289[v362];
								v364[2 - 1][v364[2 - 0]] = v363;
							end});
							for v366 = 3 - 2, v80[12 - 8] do
								local v367 = 1248 - (111 + 495 + 642);
								local v368;
								while true do
									if ((3001 > 16) and ((158 - (91 + 67)) == v367)) then
										v72 = v72 + (2 - (2 - 1));
										v368 = v68[v72];
										v367 = 1 + 0;
									end
									if (v367 == (524 - (423 + 100))) then
										if (v368[1 + 0] == 21) then
											v289[v366 - 1] = {v78,v368[774 - (326 + 445)]};
										else
											v289[v366 - (4 - 3)] = {v60,v368[6 - 3]};
										end
										v77[#v77 + (2 - 1)] = v289;
										break;
									end
								end
							end
							v78[v80[(1586 - (295 + 314)) - (815 + 160)]] = v29(v287, v288, v61);
						else
							local v291 = v80[713 - (530 + 181)];
							local v292, v293 = v71(v78[v291](v13(v78, v291 + (882 - (614 + 267)), v73)));
							v73 = (v293 + v291) - (1 + 0);
							local v294 = 32 - (19 + 13);
							for v369 = v291, v73 do
								v294 = v294 + 1;
								v78[v369] = v292[v294];
							end
						end
					elseif (v81 == (174 - 67)) then
						local v295 = 0 - (0 - 0);
						local v296;
						while true do
							if ((0 - 0) == v295) then
								v296 = v80[1 + 1];
								v78[v296](v78[v296 + (1 - 0)]);
								break;
							end
						end
					else
						v78[v80[1184 - (229 + 953)]] = v78[v80[4 - 1]] - v80[7 - 3];
					end
				elseif (v81 <= (16 + 96)) then
					if (v81 <= (1922 - (1293 + 519))) then
						if (v81 > (226 - 117)) then
							local v298 = 0 - 0;
							local v299;
							local v300;
							local v301;
							while true do
								if (v298 == (0 - (1962 - (1300 + 662)))) then
									v299 = v80[3 - 1];
									v300 = {v78[v299](v13(v78, v299 + (2 - 1), v80[2 + 1]))};
									v298 = (3 - 2) + 0;
								end
								if (v298 == (455 - (233 + (1976 - (1178 + 577))))) then
									v301 = (0 + 0) - 0;
									for v460 = v299, v80[1 + 3] do
										v301 = v301 + 1 + 0;
										v78[v460] = v300[v301];
									end
									break;
								end
							end
						else
							local v302 = 0 + 0;
							local v303;
							while true do
								if (v302 == (1096 - (709 + 387))) then
									v303 = v80[2 + 0];
									v78[v303] = v78[v303](v78[v303 + (806 - (266 + 539))]);
									break;
								end
							end
						end
					elseif (v81 > (1969 - (673 + 1185))) then
						local v304 = 0 - 0;
						local v305;
						local v306;
						while true do
							if ((2875 <= 3255) and (v304 == 1)) then
								v78[v305 + (2 - 1)] = v306;
								v78[v305] = v306[v80[(35 - 23) - 8]];
								break;
							end
							if ((368 < 4254) and (v304 == (0 - 0))) then
								v305 = v80[2 + 0];
								v306 = v78[v80[3 + 0]];
								v304 = 1;
							end
						end
					else
						v78[v80[2 + 0]] = v80[3 - 0] ~= (0 + 0);
					end
				elseif (v81 <= (226 - (1517 - (851 + 554)))) then
					if (v81 > (221 - 108)) then
						v60[v80[1883 - (446 + 1434)]] = v78[v80[1 + 0 + (2 - 1)]];
					else
						v78[v80[1285 - (1040 + 243)]] = v78[v80[(17 - 9) - 5]] - v78[v80[1836 - (1552 + 280)]];
					end
				elseif (v81 == (1962 - (559 + (1590 - (115 + 187))))) then
					local v311 = 1931 - (609 + 1322);
					local v312;
					local v313;
					while true do
						if (v311 == 0) then
							v312 = v80[457 - (13 + 441)];
							v313 = v78[v312];
							v311 = 3 - 2;
						end
						if ((v311 == (2 - (1 + 0))) or (4841 <= 2203)) then
							for v463 = v312 + (4 - 3), v80[1 + 3] do
								v313 = v313 .. v78[v463];
							end
							v78[v80[7 - 5]] = v313;
							break;
						end
					end
				else
					local v314 = 0 + 0;
					local v315;
					while true do
						if (v314 == (0 + 0)) then
							v315 = v80[2 - 0];
							v78[v315] = v78[v315](v13(v78, v315 + 1, v73));
							break;
						end
					end
				end
				v72 = v72 + (2 - 1);
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
return vv9(), ...);