--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 81) then
			v19 = v0(v3(v30, 1, 1));
			return "";
		else
			local v81 = v2(v0(v30, 16));
			if v19 then
				local v88 = 0;
				local v89;
				while true do
					if (v88 == 1) then
						return v89;
					end
					if (0 == v88) then
						v89 = v5(v81, v19);
						v19 = nil;
						v88 = 1;
					end
				end
			else
				return v81;
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v82 = (v31 / ((5 - 3) ^ (v32 - (2 - 1)))) % ((1 + 1) ^ (((v33 - ((4 - 3) - 0)) - (v32 - (2 - 1))) + 1 + 0));
			return v82 - (v82 % ((737 - (32 + 85)) - (555 + 64)));
		else
			local v83 = (2 - 0) ^ (v32 - (1066 - (68 + 997)));
			return (((v31 % (v83 + v83)) >= v83) and (932 - (857 + 74))) or (568 - (367 + 201));
		end
	end
	local function v21()
		local v34 = v1(v16, v18, v18);
		v18 = v18 + 1;
		return v34;
	end
	local function v22()
		local v35, v36 = v1(v16, v18, v18 + 2 + 0);
		v18 = v18 + 1 + 1;
		return (v36 * (1213 - (892 + 65))) + v35;
	end
	local function v23()
		local v37, v38, v39, v40 = v1(v16, v18, v18 + (7 - 4));
		v18 = v18 + (354 - (87 + 263));
		return (v40 * (16777396 - (50 + 17 + (449 - 336)))) + (v39 * (121138 - 55602)) + (v38 * (628 - 372)) + v37;
	end
	local function v24()
		local v41 = 1486 - (998 + 488);
		local v42;
		local v43;
		local v44;
		local v45;
		local v46;
		local v47;
		while true do
			if (v41 == (955 - (802 + 150))) then
				if (v46 == (0 + 0)) then
					if (v45 == (0 - 0)) then
						return v47 * (0 - 0);
					else
						v46 = 1 + 0 + 0;
						v44 = 997 - ((1687 - (201 + 571)) + 82);
					end
				elseif (v46 == (5796 - 3749)) then
					return ((v45 == (0 + 0)) and (v47 * (1 / 0))) or (v47 * NaN);
				end
				return v8(v47, v46 - (1344 - 321)) * (v44 + (v45 / (((2327 - (116 + 1022)) - (1069 + 118)) ^ 52)));
			end
			if (v41 == (4 - 2)) then
				v46 = v20(v43, 45 - 24, 6 + 25);
				v47 = ((v20(v43, 56 - 24) == 1) and -(1 + 0)) or 1;
				v41 = 794 - (368 + 423);
			end
			if ((0 - 0) == v41) then
				v42 = v23();
				v43 = v23();
				v41 = 19 - (10 + 8);
			end
			if (v41 == (3 - 2)) then
				v44 = 443 - (416 + 26);
				v45 = (v20(v43, 3 - 2, 9 + 11) * ((3 - 1) ^ ((1956 - 1486) - (145 + 293)))) + v42;
				v41 = 432 - (44 + 386);
			end
		end
	end
	local function v25(v48)
		local v49;
		if not v48 then
			local v84 = 0 + 0;
			while true do
				if (v84 == 0) then
					v48 = v23();
					if (v48 == 0) then
						return "";
					end
					break;
				end
			end
		end
		v49 = v3(v16, v18, (v18 + v48) - (3 - 2));
		v18 = v18 + v48;
		local v50 = {};
		for v64 = (2 + 1) - (887 - (261 + 624)), #v49 do
			v50[v64] = v2(v1(v3(v49, v64, v64)));
		end
		return v6(v50);
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v51 = (function()
			return 0;
		end)();
		local v52 = (function()
			return;
		end)();
		local v53 = (function()
			return;
		end)();
		local v54 = (function()
			return;
		end)();
		local v55 = (function()
			return;
		end)();
		local v56 = (function()
			return;
		end)();
		local v57 = (function()
			return;
		end)();
		while true do
			local v66 = (function()
				return 0;
			end)();
			while true do
				if (v66 ~= 0) then
				else
					if (v51 == 0) then
						local v94 = (function()
							return 698 - (208 + 490);
						end)();
						while true do
							if (v94 == (1 + 1)) then
								v51 = (function()
									return #"~";
								end)();
								break;
							end
							if (v94 == (1 + 0)) then
								v54 = (function()
									return {};
								end)();
								v55 = (function()
									return {v52,v53,nil,v54};
								end)();
								v94 = (function()
									return 2;
								end)();
							end
							if (v94 == (836 - (660 + 176))) then
								v52 = (function()
									return {};
								end)();
								v53 = (function()
									return {};
								end)();
								v94 = (function()
									return 1 + 0;
								end)();
							end
						end
					end
					if (v51 == #"!") then
						local v95 = (function()
							return 0;
						end)();
						local v96 = (function()
							return;
						end)();
						while true do
							if (v95 ~= (202 - (14 + 188))) then
							else
								v96 = (function()
									return 0;
								end)();
								while true do
									if ((675 - (534 + 141)) == v96) then
										v56 = (function()
											return v23();
										end)();
										v57 = (function()
											return {};
										end)();
										v96 = (function()
											return 1;
										end)();
									end
									if (v96 ~= 2) then
									else
										v51 = (function()
											return 1 + 1;
										end)();
										break;
									end
									if (v96 == (1 + 0)) then
										for v107 = #">", v56 do
											local v108 = (function()
												return 0;
											end)();
											local v109 = (function()
												return;
											end)();
											local v110 = (function()
												return;
											end)();
											local v111 = (function()
												return;
											end)();
											while true do
												if (v108 ~= 0) then
												else
													local v117 = (function()
														return 0;
													end)();
													while true do
														if (v117 ~= 1) then
														else
															v108 = (function()
																return 1 + 0;
															end)();
															break;
														end
														if (v117 ~= 0) then
														else
															v109 = (function()
																return 0;
															end)();
															v110 = (function()
																return nil;
															end)();
															v117 = (function()
																return 1 - 0;
															end)();
														end
													end
												end
												if (v108 ~= (1 - 0)) then
												else
													v111 = (function()
														return nil;
													end)();
													while true do
														if (v109 ~= #"|") then
														else
															if (v110 == #"~") then
																v111 = (function()
																	return v21() ~= (0 - 0);
																end)();
															elseif (v110 == 2) then
																v111 = (function()
																	return v24();
																end)();
															elseif (v110 == #"91(") then
																v111 = (function()
																	return v25();
																end)();
															end
															v57[v107] = (function()
																return v111;
															end)();
															break;
														end
														if (v109 ~= (0 + 0)) then
														else
															local v1074 = (function()
																return 0;
															end)();
															local v1075 = (function()
																return;
															end)();
															while true do
																if (v1074 ~= (0 + 0)) then
																else
																	v1075 = (function()
																		return 0;
																	end)();
																	while true do
																		if (v1075 == (396 - (115 + 281))) then
																			v110 = (function()
																				return v21();
																			end)();
																			v111 = (function()
																				return nil;
																			end)();
																			v1075 = (function()
																				return 1;
																			end)();
																		end
																		if ((2 - 1) ~= v1075) then
																		else
																			v109 = (function()
																				return #",";
																			end)();
																			break;
																		end
																	end
																	break;
																end
															end
														end
													end
													break;
												end
											end
										end
										v55[#"91("] = (function()
											return v21();
										end)();
										v96 = (function()
											return 2 + 0;
										end)();
									end
								end
								break;
							end
						end
					end
					v66 = (function()
						return 2 - 1;
					end)();
				end
				if (1 == v66) then
					if (v51 ~= (7 - 5)) then
					else
						for v97 = #"{", v23() do
							local v98 = (function()
								return v21();
							end)();
							if (v20(v98, #"<", #">") ~= 0) then
							else
								local v101 = (function()
									return 867 - (550 + 317);
								end)();
								local v102 = (function()
									return;
								end)();
								local v103 = (function()
									return;
								end)();
								local v104 = (function()
									return;
								end)();
								while true do
									if (v101 == (2 - 0)) then
										if (v20(v103, #"!", #"|") ~= #"|") then
										else
											v104[2] = (function()
												return v57[v104[2 - 0]];
											end)();
										end
										if (v20(v103, 2, 2) == #":") then
											v104[#"xxx"] = (function()
												return v57[v104[#"-19"]];
											end)();
										end
										v101 = (function()
											return 8 - 5;
										end)();
									end
									if (v101 == (285 - (134 + 151))) then
										v102 = (function()
											return v20(v98, 1667 - (970 + 695), #"-19");
										end)();
										v103 = (function()
											return v20(v98, #"0836", 11 - 5);
										end)();
										v101 = (function()
											return 1;
										end)();
									end
									if (v101 == 1) then
										v104 = (function()
											return {v22(),v22(),nil,nil};
										end)();
										if (v102 == 0) then
											local v114 = (function()
												return 0 - 0;
											end)();
											local v115 = (function()
												return;
											end)();
											while true do
												if ((0 - 0) ~= v114) then
												else
													v115 = (function()
														return 0 - 0;
													end)();
													while true do
														if (v115 ~= 0) then
														else
															v104[#"xnx"] = (function()
																return v22();
															end)();
															v104[#"0836"] = (function()
																return v22();
															end)();
															break;
														end
													end
													break;
												end
											end
										elseif (v102 == #"]") then
											v104[#"xxx"] = (function()
												return v23();
											end)();
										elseif (v102 == (1826 - (1195 + 629))) then
											v104[#"xnx"] = (function()
												return v23() - (2 ^ (20 - 4));
											end)();
										elseif (v102 ~= #"nil") then
										else
											local v2234 = (function()
												return 0;
											end)();
											local v2235 = (function()
												return;
											end)();
											while true do
												if (v2234 == (241 - (187 + 54))) then
													v2235 = (function()
														return 780 - (162 + 618);
													end)();
													while true do
														if (v2235 == (0 + 0)) then
															v104[#"19("] = (function()
																return v23() - ((2 + 0) ^ (33 - 17));
															end)();
															v104[#"?id="] = (function()
																return v22();
															end)();
															break;
														end
													end
													break;
												end
											end
										end
										v101 = (function()
											return 2;
										end)();
									end
									if (v101 ~= (4 - 1)) then
									else
										if (v20(v103, #"xxx", #"91(") ~= #"|") then
										else
											v104[#"asd1"] = (function()
												return v57[v104[#"xnxx"]];
											end)();
										end
										v52[v97] = (function()
											return v104;
										end)();
										break;
									end
								end
							end
						end
						for v99 = #" ", v23() do
							v53[v99 - #"]"] = (function()
								return v28();
							end)();
						end
						return v55;
					end
					break;
				end
			end
		end
	end
	local function v29(v58, v59, v60)
		local v61 = v58[3 - 2];
		local v62 = v58[2];
		local v63 = v58[3];
		return function(...)
			local v67 = v61;
			local v68 = v62;
			local v69 = v63;
			local v70 = v27;
			local v71 = 1;
			local v72 = -(1 + 0);
			local v73 = {};
			local v74 = {...};
			local v75 = v12("#", ...) - (1001 - (451 + 549));
			local v76 = {};
			local v77 = {};
			for v85 = 0 + 0, v75 do
				if (v85 >= v69) then
					v73[v85 - v69] = v74[v85 + (1 - 0)];
				else
					v77[v85] = v74[v85 + (1 - 0)];
				end
			end
			local v78 = (v75 - v69) + (1385 - (746 + 78 + 560));
			local v79;
			local v80;
			while true do
				v79 = v67[v71];
				v80 = v79[1 + 0];
				if (v80 <= (98 - 33)) then
					if ((v80 <= ((27 + 346) - (218 + 123))) or (101 > 4626)) then
						if (v80 <= ((2978 - 1382) - (1535 + 46))) then
							if (v80 <= (7 + 0)) then
								if ((3698 > 152) and (v80 <= (1 + 2))) then
									if (v80 <= (561 - (306 + 254))) then
										if (v80 == (0 + 0)) then
											local v119 = 0;
											local v120;
											local v121;
											while true do
												if (v119 == ((339 - (56 + 272)) - 5)) then
													v77[v79[1469 - (899 + 568)]][v77[v79[2 + 1]]] = v79[9 - 5];
													v71 = v71 + (604 - (268 + 335));
													v79 = v67[v71];
													v119 = 297 - (60 + 132 + 98);
												end
												if ((v119 == (572 - (426 + 146))) or (2513 >= 3001)) then
													v120 = nil;
													v121 = nil;
													v77[v79[1 + 1]] = v77[v79[1459 - (282 + 1174)]][v77[v79[815 - (569 + 242)]]];
													v119 = (2 + 0) - 1;
												end
												if ((4496 >= 4123) and (v119 == (1 + 3))) then
													v77[v121](v77[v121 + ((2459 - 1434) - (706 + 318))]);
													v71 = v71 + (1252 - (721 + 347 + 183));
													v79 = v67[v71];
													v119 = 1276 - (945 + 326);
												end
												if (v119 == (12 - 7)) then
													v77[v79[2 + 0]] = v59[v79[703 - (271 + 429)]];
													v71 = v71 + 1 + 0;
													v79 = v67[v71];
													v119 = 1506 - (1408 + 92);
												end
												if (v119 == (1093 - (461 + 625))) then
													v71 = v79[643 - (455 + 185)];
													break;
												end
												if ((1655 < 2964) and (v119 == (1290 - (993 + 295)))) then
													v120 = v77[v79[1 + 2]];
													v77[v121 + (1172 - ((1206 - (757 + 31)) + (2752 - (762 + 1237))))] = v120;
													v77[v121] = v120[v79[2 + 2]];
													v119 = 3;
												end
												if ((3564 >= 1216) and (v119 == (1 + 0))) then
													v71 = v71 + 1 + 0;
													v79 = v67[v71];
													v121 = v79[3 - 1];
													v119 = 1 + (270 - (265 + 4));
												end
												if (v119 == (532 - ((1027 - 621) + 123))) then
													v71 = v71 + (1770 - (1749 + 13 + 7));
													v79 = v67[v71];
													v121 = v79[1 + 1];
													v119 = (2483 - 1157) - (1249 + 73);
												end
											end
										elseif (v79[(2 - 1) + 1 + 0] <= v79[4]) then
											v71 = v71 + (1146 - (466 + 679));
										else
											v71 = v79[(16 - 10) - 3];
										end
									elseif ((2327 < 4751) and (v80 > 2)) then
										local v122;
										local v123;
										v123 = v79[2];
										v77[v123](v13(v77, v123 + (2 - 1), v79[3]));
										v71 = v71 + 1;
										v79 = v67[v71];
										v123 = v79[1902 - ((228 - 122) + 1794)];
										v122 = v77[v79[3]];
										v77[v123 + 1 + 0] = v122;
										v77[v123] = v122[v79[2 + 2]];
										v71 = v71 + (2 - (1 - 0));
										v79 = v67[v71];
										v123 = v79[5 - 3];
										v77[v123](v77[v123 + (115 - (4 + (1844 - (1691 + 43))))]);
										v71 = v71 + (585 - (57 + 527));
										v79 = v67[v71];
										v77[v79[1429 - (41 + 1386)]] = v60[v79[106 - (17 + 86)]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2 + 0 + 0]] = v77[v79[6 - 3]][v79[11 - 7]];
									else
										local v136;
										local v137;
										v77[v79[168 - (122 + 44)]] = v77[v79[5 - 2]][v79[(37 - 25) - 8]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v137 = v79[1 + 1];
										v136 = v77[v79[5 - 2]];
										v77[v137 + (66 - (30 + 9 + 26))] = v136;
										v77[v137] = v136[v79[3 + 1]];
										v71 = v71 + (1258 - (1043 + 214));
										v79 = v67[v71];
										v137 = v79[7 - 5];
										v77[v137] = v77[v137](v77[v137 + (3 - 2)]);
										v71 = v71 + (1213 - ((499 - (127 + 49)) + 889));
										v79 = v67[v71];
										v137 = v79[2];
										v136 = v77[v79[7 - 4]];
										v77[v137 + (581 - (361 + 219))] = v136;
										v77[v137] = v136[v79[(2004 - (281 + 1399)) - (53 + (1926 - (184 + 1475)))]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[1 + 1]] = v79[416 - ((19 - 4) + 398)];
										v71 = v71 + ((2291 - 1308) - (18 + 964));
										v79 = v67[v71];
										v137 = v79[2];
										v77[v137] = v77[v137](v13(v77, v137 + (3 - 2), v79[2 + 1]));
										v71 = v71 + (2 - 1) + 0;
										v79 = v67[v71];
										v137 = v79[2];
										v136 = v77[v79[3]];
										v77[v137 + 1] = v136;
										v77[v137] = v136[v79[854 - (20 + 830)]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[128 - (116 + 10)]] = {};
										v71 = v71 + 1 + 0 + 0;
										v79 = v67[v71];
										v77[v79[740 - (542 + 196)]][v79[3]] = v79[8 - (4 + 0)];
									end
								elseif (v80 <= (1296 - (260 + 1031))) then
									if (v80 == 4) then
										local v159 = (1177 - (313 + 864)) + (692 - (655 + 37));
										local v160;
										local v161;
										while true do
											if ((2302 > 2222) and (v159 == (3 + 2))) then
												v71 = v71 + 1 + 0 + 0;
												v79 = v67[v71];
												v77[v79[(6 - 2) - (4 - 2)]][v79[3]] = v79[9 - 5];
												v71 = v71 + (1552 - (1126 + 425));
												v159 = 411 - (118 + 287);
											end
											if (v159 == (11 - 8)) then
												v77[v79[2]][v79[1124 - (118 + 1003)]] = v79[11 - 7];
												v71 = v71 + (378 - (142 + 235));
												v79 = v67[v71];
												v77[v79[9 - 7]] = v60[v79[1 + 1 + 1]];
												v159 = 981 - (553 + 424);
											end
											if ((4451 > 2573) and (v159 == (0 - 0))) then
												v160 = nil;
												v161 = nil;
												v77[v79[2 + 0]][v79[3 + 0]] = v79[3 + 1 + 0];
												v71 = v71 + 1 + 0;
												v159 = 1 + 0;
											end
											if (v159 == (14 - 7)) then
												v161 = v79[5 - 3];
												v160 = v77[v79[6 - 3]];
												v77[v161 + 1 + 0] = v160;
												v77[v161] = v160[v79[19 - 15]];
												v159 = 761 - (239 + 514);
											end
											if ((v159 == (3 + 3)) or (4391 <= 4334)) then
												v79 = v67[v71];
												v77[v79[1331 - (797 + 532)]] = v60[v79[3 + 0]];
												v71 = v71 + 1 + 0;
												v79 = v67[v71];
												v159 = 7;
											end
											if (v159 == (2 - 1)) then
												v79 = v67[v71];
												v77[v79[1204 - (373 + (1567 - 738))]] = v60[v79[734 - (476 + 255)]];
												v71 = v71 + (1131 - (369 + 761));
												v79 = v67[v71];
												v159 = 2;
											end
											if ((2 + 0) == v159) then
												v161 = v79[2 - 0];
												v77[v161] = v77[v161]();
												v71 = v71 + (1 - 0);
												v79 = v67[v71];
												v159 = 3;
											end
											if ((1539 >= 482) and (v159 == (242 - (64 + 174)))) then
												v71 = v71 + 1 + 0;
												v79 = v67[v71];
												v161 = v79[2];
												v77[v161] = v77[v161]();
												v159 = 7 - 2;
											end
											if ((1537 > 693) and (v159 == 8)) then
												v71 = v71 + 1;
												v79 = v67[v71];
												v77[v79[338 - ((914 - (383 + 387)) + 57 + 135)]] = v79[219 - (42 + 174)];
												break;
											end
										end
									else
										local v162 = 0 + 0;
										local v163;
										local v164;
										local v165;
										while true do
											if (v162 == (2 + 0)) then
												v59[v79[2 + 1]] = v77[v79[1506 - (363 + 1141)]];
												v71 = v71 + (1581 - (1183 + 28 + 369));
												v79 = v67[v71];
												v162 = (24 - 16) - 5;
											end
											if (v162 == 4) then
												v77[v79[2 + 0 + 0]] = v59[v79[3]];
												v71 = v71 + 1 + 0;
												v79 = v67[v71];
												v162 = 1980 - (1913 + 62);
											end
											if ((1523 >= 1277) and ((2 + 1) == v162)) then
												v77[v79[5 - 3]] = v60[v79[3]];
												v71 = v71 + (1934 - (565 + 1368));
												v79 = v67[v71];
												v162 = 4;
											end
											if (v162 == (3 - 2)) then
												v77[v79[2]] = not v77[v79[1664 - (1477 + 184)]];
												v71 = v71 + 1 + 0;
												v79 = v67[v71];
												v162 = 2 - 0;
											end
											if (v162 == (6 + 0)) then
												for v2236 = v165, v79[860 - (564 + 292)] do
													local v2237 = 0;
													while true do
														if (v2237 == (0 - (510 - (304 + 206)))) then
															v163 = v163 + 1;
															v77[v2236] = v164[v163];
															break;
														end
													end
												end
												v71 = v71 + 1;
												v79 = v67[v71];
												v162 = 20 - (238 - (182 + 43));
											end
											if (v162 == (311 - (244 + 60))) then
												v71 = v79[3 + 0];
												break;
											end
											if (v162 == (481 - ((816 - (264 + 511)) + 435))) then
												v165 = v79[(149 + 854) - (938 + 63)];
												v164 = {v77[v165](v77[v165 + (1126 - (936 + 189))])};
												v163 = 0 + 0;
												v162 = 1619 - ((3267 - (1635 + 67)) + 5 + 43);
											end
											if ((1737 == 1737) and (v162 == (0 + 0))) then
												v163 = nil;
												v164 = nil;
												v165 = nil;
												v162 = 1139 - (782 + 356);
											end
										end
									end
								elseif (v80 == 6) then
									for v957 = v79[269 - (176 + 91)], v79[7 - 4] do
										v77[v957] = nil;
									end
								else
									local v166 = 0 - 0;
									local v167;
									while true do
										if (v166 == (1094 - (975 + 117))) then
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[1877 - (157 + 1718)]] = v77[v79[2 + 1 + 0]][v79[14 - 10]];
											v71 = v71 + (3 - 2);
											v166 = 1021 - (697 + 321);
										end
										if (v166 == (0 - 0)) then
											v167 = nil;
											v77[v79[3 - 1]] = v77[v79[6 - 3]][v79[4]];
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v166 = 1 - (197 - (131 + 66));
										end
										if (v166 == (15 - 9)) then
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[6 - 4]] = {};
											v71 = v71 + 1;
											v166 = 7;
										end
										if (v166 == 7) then
											v79 = v67[v71];
											v77[v79[1229 - (322 + 905)]] = v77[v79[3]][v79[19 - 15]];
											break;
										end
										if ((v166 == 3) or (3355 > 4068)) then
											v79 = v67[v71];
											v77[v79[2]] = v79[3];
											v71 = v71 + (612 - (602 + 9));
											v79 = v67[v71];
											v166 = 1193 - (449 + 740);
										end
										if ((v166 == 5) or (546 == 4690)) then
											v71 = v71 + (873 - (826 + 17 + 29));
											v79 = v67[v71];
											v167 = v79[2];
											v77[v167] = v77[v167](v13(v77, v167 + 1, v79[(562 + 388) - (245 + 702)]));
											v166 = 18 - (18 - 6);
										end
										if (v166 == 1) then
											v77[v79[1 + 1]] = v79[3] ~= (1898 - (260 + 1638));
											v71 = v71 + (441 - (382 + 58));
											v79 = v67[v71];
											v77[v79[6 - 4]] = v60[v79[3 + 0]];
											v166 = 3 - 1;
										end
										if (v166 == (11 - 7)) then
											v77[v79[1207 - (902 + 303)]] = v79[5 - 2];
											v71 = v71 + (2 - 1);
											v79 = v67[v71];
											v77[v79[1 + 1]] = v79[1693 - (1121 + 569)];
											v166 = 219 - (22 + 192);
										end
									end
								end
							elseif ((v80 <= ((1171 - 477) - (483 + 200))) or (2935 < 1058)) then
								if (v80 <= (1472 - (1404 + (1664 - (306 + 1299))))) then
									if (v80 == (21 - 13)) then
										v77[v79[2 - (0 + 0)]] = v29(v68[v79[768 - (468 + (764 - 467))]], nil, v60);
									elseif ((v79[564 - ((1123 - (671 + 118)) + 228)] < v79[13 - 9]) or (4205 >= 4606)) then
										v71 = v71 + (2 - 1);
									else
										v71 = v79[3];
									end
								elseif (v80 == (18 - 8)) then
									local v169 = 0 + 0;
									local v170;
									local v171;
									local v172;
									local v173;
									local v174;
									while true do
										if ((3996 == 3996) and (v169 == (239 - (141 + 95)))) then
											v77[v79[2 + (0 - 0)]] = v60[v79[7 - 4]];
											v71 = v71 + (2 - 1);
											v79 = v67[v71];
											v174 = v79[2];
											v173 = v77[v79[1 + 2]];
											v169 = 10 - 6;
										end
										if (v169 == (5 + 2)) then
											v77[v174] = v77[v174](v13(v77, v174 + 1 + (76 - (73 + 3)), v72));
											v71 = v71 + (2 - 1);
											v79 = v67[v71];
											v174 = v79[2 - (0 - 0)];
											v77[v174] = v77[v174]();
											v169 = 5 + 3;
										end
										if ((v169 == (167 - (92 + 71))) or (2597 >= 3633)) then
											v77[v174 + 1] = v173;
											v77[v174] = v173[v79[4]];
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v77[v79[2 - 0]] = v79[3];
											v169 = 770 - (574 + 191);
										end
										if (v169 == 8) then
											v71 = v71 + (2 - 1) + 0;
											v79 = v67[v71];
											v77[v79[4 - (1757 - (1668 + 87))]] = v60[v79[3]];
											break;
										end
										if (v169 == (1 + 1 + 0)) then
											v71 = v71 + (850 - (254 + 595));
											v79 = v67[v71];
											v77[v79[128 - (55 + 71)]] = v60[v79[3 - 0]];
											v71 = v71 + (1791 - (573 + 1217));
											v79 = v67[v71];
											v169 = 8 - 5;
										end
										if ((3361 == 3361) and (v169 == 5)) then
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v174 = v79[2 - 0];
											v171, v172 = v70(v77[v174](v13(v77, v174 + 1, v79[942 - (714 + 225)])));
											v72 = (v172 + v174) - (2 - 1);
											v169 = 6;
										end
										if (v169 == (1 - 0)) then
											v77[v174] = v77[v174](v13(v77, v174 + (1900 - (296 + 1603)), v72));
											v71 = v71 + (107 - (79 + 27)) + 0 + 0;
											v79 = v67[v71];
											v174 = v79[2 - 0];
											v77[v174] = v77[v174]();
											v169 = 2;
										end
										if (v169 == (806 - (118 + 688))) then
											v170 = nil;
											v171, v172 = nil;
											v173 = nil;
											v174 = nil;
											v174 = v79[50 - (25 + 23)];
											v169 = 1 + 0;
										end
										if ((v169 == (1892 - (927 + 959))) or (4889 <= 2247)) then
											v170 = 0 - 0;
											for v2238 = v174, v72 do
												local v2239 = 732 - (16 + 716);
												while true do
													if (v2239 == (0 - 0)) then
														v170 = v170 + (98 - (11 + 86));
														v77[v2238] = v171[v170];
														break;
													end
												end
											end
											v71 = v71 + ((1009 - (700 + 307)) - 1);
											v79 = v67[v71];
											v174 = v79[287 - (175 + 110)];
											v169 = 7;
										end
									end
								elseif (v79[4 - 2] == v77[v79[19 - 15]]) then
									v71 = v71 + 1;
								else
									v71 = v79[3];
								end
							elseif ((1269 <= 1954) and (v80 <= 13)) then
								if (v80 > (1808 - (503 + 1293))) then
									local v175;
									v77[v79[5 - 3]] = v77[v79[3 + 0]][v79[1065 - (545 + 265 + 251)]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[1 + 1]] = v79[3 + 0];
									v71 = v71 + (534 - (43 + 490));
									v79 = v67[v71];
									v175 = v79[1801 - (1477 + 322)];
									v77[v175] = v77[v175](v77[v175 + ((233 + 501) - (711 + 22))]);
									v71 = v71 + (3 - 2);
									v79 = v67[v71];
									v77[v79[861 - (240 + 619)]] = v77[v79[1 + 2]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[4 - 2]][v79[4 - 1]] = v79[4 + 0];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[1746 - (1344 + 400)]] = v79[408 - ((826 - 571) + 150)];
								else
									local v189;
									local v190;
									v77[v79[2 + 0]][v79[2 + 1]] = v77[v79[4]];
									v71 = v71 + (4 - 3);
									v79 = v67[v71];
									v190 = v79[6 - 4];
									v77[v190](v13(v77, v190 + (1740 - (404 + 1335)), v79[3]));
									v71 = v71 + 1;
									v79 = v67[v71];
									v190 = v79[408 - (183 + 223)];
									v189 = v77[v79[3 - 0]];
									v77[v190 + 1] = v189;
									v77[v190] = v189[v79[3 + 1 + 0]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v190 = v79[1 + 1];
									v77[v190](v77[v190 + (338 - (10 + 327))]);
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v190 = v79[2];
									v189 = v77[v79[341 - (118 + 220)]];
									v77[v190 + 1 + 0] = v189;
									v77[v190] = v189[v79[(1843 - 1390) - (108 + 341)]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[8 - 6]] = v79[1496 - (711 + 782)];
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v77[v79[5 - 3]] = {};
									v71 = v71 + (470 - (270 + 199));
									v79 = v67[v71];
									v77[v79[1 + 1]][v79[1822 - (580 + 1239)]] = v79[4];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v77[v79[2]][v79[3 + 0]] = v79[4];
									v71 = v71 + 1 + 0 + 0;
									v79 = v67[v71];
									v77[v79[(2 - 1) + 1]][v79[7 - (6 - 2)]] = v79[3 + 1];
								end
							elseif (v80 == (1181 - (645 + 522))) then
								local v213 = 1790 - (1010 + 780);
								local v214;
								local v215;
								while true do
									if ((v213 == (4 + 0)) or (3779 < 2131)) then
										v79 = v67[v71];
										v215 = v79[9 - 7];
										v214 = v77[v79[(15 - 7) - 5]];
										v77[v215 + (1837 - (1045 + 791))] = v214;
										v77[v215] = v214[v79[4]];
										v71 = v71 + ((1788 - (20 + 1766)) - 1);
										v213 = 7 - 2;
									end
									if ((v213 == (505 - ((678 - 327) + 154))) or (441 == 4301)) then
										v214 = nil;
										v215 = nil;
										v215 = v79[1576 - (1281 + 293)];
										v77[v215] = v77[v215](v13(v77, v215 + (267 - (28 + 238)), v79[3]));
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v213 = 1;
									end
									if ((4399 > 966) and (6 == v213)) then
										v71 = v71 + (1560 - (1381 + 178));
										v79 = v67[v71];
										v77[v79[2 + 0]][v79[3 + 0]] = v77[v79[4]];
										break;
									end
									if ((v213 == (812 - (88 + 721))) or (3576 < 1528)) then
										v215 = v79[1 + 0 + 1];
										v77[v215] = v77[v215](v13(v77, v215 + (3 - (1 + 1)), v79[2 + 1]));
										v71 = v71 + (471 - (381 + 89));
										v79 = v67[v71];
										v77[v79[2 + 0]][v79[3 + 0]] = v77[v79[6 - 2]];
										v71 = v71 + (1157 - (1074 + 36 + 46));
										v213 = 4;
									end
									if (v213 == (10 - 5)) then
										v79 = v67[v71];
										v77[v79[1786 - (73 + 141 + 1570)]] = v79[1458 - (990 + 465)];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v215 = v79[2];
										v77[v215] = v77[v215](v13(v77, v215 + 1 + 0, v79[3 + 0]));
										v213 = 23 - 17;
									end
									if (v213 == (1728 - ((4278 - 2610) + (113 - 55)))) then
										v77[v215] = v214[v79[441 - (93 + 344)]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[628 - (512 + 114)]] = v79[7 - (1217 - (960 + 253))];
										v71 = v71 + (1 - 0);
										v79 = v67[v71];
										v213 = 10 - 7;
									end
									if (v213 == (1 + 0 + 0)) then
										v77[v79[1 + (2 - 1)]] = {};
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v215 = v79[6 - 4];
										v214 = v77[v79[1997 - (109 + (5535 - 3650))]];
										v77[v215 + 1] = v214;
										v213 = 2;
									end
								end
							else
								local v216;
								local v217;
								v77[v79[(2887 - (74 + 1342)) - (1269 + 200)]] = v60[v79[5 - 2]];
								v71 = v71 + (816 - (98 + 717));
								v79 = v67[v71];
								v77[v79[828 - (802 + 24)]] = v77[v79[5 - 2]][v79[(2 + 2) - 0]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[2 + 0]] = v59[v79[1 + 2]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v217 = v79[5 - 3];
								v216 = v77[v79[3]];
								v77[v217 + (3 - 2)] = v216;
								v77[v217] = v216[v79[4]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v217 = v79[2];
								v77[v217] = v77[v217](v77[v217 + 1 + 0]);
								v71 = v71 + (475 - (33 + 441)) + 0;
								v79 = v67[v71];
								v77[v79[5 - 3]] = v77[v79[3]][v79[3 + 1]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[1435 - (797 + 636)]] = v59[v79[14 - (1430 - (64 + 1355))]];
								v71 = v71 + (1620 - (1427 + 192));
								v79 = v67[v71];
								v217 = v79[2 - 0];
								v216 = v77[v79[2 + 1]];
								v77[v217 + (2 - 1)] = v216;
								v77[v217] = v216[v79[4 + 0]];
								v71 = v71 + (12 - (5 + 6)) + 0;
								v79 = v67[v71];
								v217 = v79[2];
								v77[v217] = v77[v217](v77[v217 + (327 - (192 + 134))]);
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[1278 - (316 + 960)]] = v77[v79[2 + 1 + 0]][v79[2 + 2]];
								v71 = v71 + (447 - (369 + 77));
								v79 = v67[v71];
								v217 = v79[1 + 1];
								v77[v217] = v77[v217](v13(v77, v217 + 1 + 0, v79[3 + 0]));
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[(745 - (438 + 300)) - 5]][v79[554 - (83 + 468)]] = v77[v79[1810 - (1202 + 604)]];
							end
						elseif ((v80 <= (107 - (378 - (50 + 244)))) or (4507 > 4885)) then
							if (v80 <= (31 - 12)) then
								if (v80 <= (46 - 29)) then
									if (v80 > (341 - (45 + 280))) then
										local v244 = 0 + 0;
										local v245;
										local v246;
										while true do
											if ((v244 == (0 + 0)) or (2313 == 1004)) then
												v245 = nil;
												v246 = nil;
												v246 = v79[1 + (1202 - (95 + 1106))];
												v245 = v77[v79[2 + 1]];
												v77[v246 + (1 - 0) + 0] = v245;
												v244 = 1 - 0;
											end
											if (v244 == ((9476 - 7564) - (340 + 1571))) then
												v77[v246] = v245[v79[(1898 - (1741 + 155)) + 2]];
												v71 = v71 + (1773 - (1733 + 39));
												v79 = v67[v71];
												v77[v79[2]] = v79[8 - 5];
												v71 = v71 + 1;
												v244 = 1036 - (125 + 909);
											end
											if (5 == v244) then
												v71 = v71 + (1949 - (1096 + 852));
												v79 = v67[v71];
												v246 = v79[1 + 1];
												v77[v246] = v77[v246](v13(v77, v246 + (1 - 0), v79[3 + 0]));
												v71 = v71 + (513 - (409 + 103));
												v244 = 6;
											end
											if (v244 == (240 - (46 + 190))) then
												v77[v246 + (96 - (51 + 44))] = v245;
												v77[v246] = v245[v79[2 + 2]];
												v71 = v71 + 1;
												v79 = v67[v71];
												v77[v79[1319 - (1114 + 203)]] = v79[3];
												v244 = 731 - (228 + 498);
											end
											if (v244 == ((2 - 1) + 2)) then
												v77[v79[2 + 0]] = v60[v79[666 - (174 + 489)]];
												v71 = v71 + 1;
												v79 = v67[v71];
												v246 = v79[5 - 3];
												v245 = v77[v79[1908 - ((1245 - 415) + 1075)]];
												v244 = 528 - (303 + 221);
											end
											if (2 == v244) then
												v79 = v67[v71];
												v246 = v79[1271 - (231 + 1038)];
												v77[v246] = v77[v246](v13(v77, v246 + 1 + 0, v79[1165 - (171 + (2077 - 1086))]));
												v71 = v71 + 1;
												v79 = v67[v71];
												v244 = 12 - 9;
											end
											if (v244 == (16 - 10)) then
												v79 = v67[v71];
												v77[v79[4 - 2]] = v79[3] ~= (0 + 0);
												v71 = v71 + 1;
												v79 = v67[v71];
												for v2240 = v79[6 - (2 + 2)], v79[3] do
													v77[v2240] = nil;
												end
												break;
											end
										end
									else
										v77[v79[2]]();
									end
								elseif ((1749 < 4508) and (v80 > (51 - 33))) then
									local v247 = v79[4 - 1];
									local v248 = v77[v247];
									for v959 = v247 + (3 - 2), v79[4] do
										v248 = v248 .. v77[v959];
									end
									v77[v79[1250 - (111 + 1137)]] = v248;
								else
									local v250;
									v250 = v79[160 - (91 + 67)];
									v77[v250] = v77[v250]();
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v77[v79[2]][v79[3]] = v77[v79[1 + 3]];
									v71 = v71 + (524 - (423 + 46 + 54));
									v79 = v67[v71];
									v77[v79[1 + 1 + 0]] = v60[v79[7 - 4]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v250 = v79[2];
									v77[v250] = v77[v250]();
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[773 - ((783 - 457) + 445)]][v79[13 - 10]] = v79[4];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v77[v79[2]] = v79[3];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v71 = v79[714 - (530 + 181)];
								end
							elseif ((v80 <= (902 - (614 + 267))) or (4616 <= 1907)) then
								if (v80 > (52 - (19 + 13))) then
									v77[v79[2 - 0]] = v77[v79[3]] + v79[4];
								else
									local v265 = 0 - 0;
									local v266;
									local v267;
									while true do
										if (v265 == ((42 - 25) - 11)) then
											v77[v267] = v266[v79[2 + (1779 - (1263 + 514))]];
											v71 = v71 + (1 - 0);
											v79 = v67[v71];
											v265 = 13 - 6;
										end
										if (v265 == (1820 - (1293 + 519))) then
											v79 = v67[v71];
											if (v79[2] < v79[7 - 3]) then
												v71 = v71 + (2 - 1);
											else
												v71 = v79[5 - (499 - (73 + 424))];
											end
											break;
										end
										if (v265 == (21 - 16)) then
											v267 = v79[(10 - 6) - 2];
											v266 = v77[v79[2 + (309 - (93 + 215))]];
											v77[v267 + 1 + 0] = v266;
											v265 = 13 - 7;
										end
										if ((1129 >= 927) and (v265 == (1 + 2))) then
											v77[v79[1 + 1]] = v60[v79[2 + 1]];
											v71 = v71 + (1097 - (709 + 387));
											v79 = v67[v71];
											v265 = 1862 - (673 + 1185);
										end
										if (v265 == ((66 - 47) - 12)) then
											v267 = v79[6 - 4];
											v77[v267] = v77[v267](v77[v267 + 1]);
											v71 = v71 + (1936 - (1756 + 179));
											v265 = 8;
										end
										if ((3361 > 1652) and (v265 == 0)) then
											v266 = nil;
											v267 = nil;
											v77[v79[2 - 0]] = v79[3 + 0];
											v265 = 1 + (1679 - (550 + 1129));
										end
										if (v265 == (5 - 1)) then
											v77[v79[1 + 1]] = v77[v79[5 - 2]][v79[7 - 3]];
											v71 = v71 + (1881 - ((553 - (57 + 50)) + 1434));
											v79 = v67[v71];
											v265 = 5;
										end
										if (v265 == (1285 - ((1669 - (30 + 599)) + 243))) then
											v77[v267](v77[v267 + 1]);
											v71 = v71 + (2 - 1);
											v79 = v67[v71];
											v265 = 1850 - (559 + 319 + 969);
										end
										if (v265 == (1932 - (609 + 1322))) then
											v71 = v71 + (455 - (13 + 441));
											v79 = v67[v71];
											v267 = v79[7 - 5];
											v265 = 2;
										end
									end
								end
							elseif ((v80 == (57 - 35)) or (2068 == 3123)) then
								v77[v79[9 - 7]] = {};
							else
								v59[v79[1 + 2]] = v77[v79[7 - 5]];
							end
						elseif (v80 <= (10 + 17)) then
							if (v80 <= 25) then
								if (v80 > 24) then
									local v271;
									local v272;
									v77[v79[1 + 1]][v79[8 - 5]] = v77[v79[4]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v272 = v79[(3 - 0) - 1];
									v77[v272](v13(v77, v272 + 1, v79[2 + 1]));
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v272 = v79[920 - (794 + 124)];
									v271 = v77[v79[3 + 0]];
									v77[v272 + 1 + 0] = v271;
									v77[v272] = v271[v79[4]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[435 - (153 + 280)]] = v79[3];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[5 - 3]] = {};
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[1 + 1]][v79[3]] = v79[3 + 1];
									v71 = v71 + 1 + 0 + 0;
									v79 = v67[v71];
									v77[v79[2 + 0]][v79[4 - 1]] = v79[4];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[669 - (89 + 578)]][v79[3 + 0]] = v79[8 - 4];
									v71 = v71 + (1050 - (572 + 477));
									v79 = v67[v71];
									v77[v79[2]][v79[1 + 2]] = v79[3 + 1];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[88 - (84 + 2)]][v79[4 - 1]] = v79[3 + 1];
								else
									v77[v79[844 - (497 + 345)]] = v79[3];
								end
							elseif ((2552 >= 525) and (v80 > 26)) then
								local v295 = 0 + 0 + 0;
								local v296;
								while true do
									if (v295 == (1 + 2)) then
										v71 = v71 + (1334 - (605 + 728));
										v79 = v67[v71];
										v59[v79[3 + 0]] = v77[v79[3 - 1]];
										v295 = 1 + 3;
									end
									if (v295 == (7 - 5)) then
										v79 = v67[v71];
										v296 = v79[2 + 0];
										v77[v296] = v77[v296](v77[v296 + (2 - 1)]);
										v295 = (5 - 2) + 0;
									end
									if ((489 - (457 + 32)) == v295) then
										v296 = nil;
										v77[v79[1 + 1]] = v77[v79[1405 - (832 + 570)]][v79[4]];
										v71 = v71 + 1 + 0;
										v295 = 1 + 0;
									end
									if (v295 == (24 - 17)) then
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v71 = v79[3];
										break;
									end
									if (v295 == 5) then
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[1929 - (1299 + 628)]][v79[799 - (588 + 208)]] = v79[10 - (12 - 6)];
										v295 = 1806 - (884 + (2541 - 1625));
									end
									if ((v295 == 6) or (1384 > 4357)) then
										v71 = v71 + (1 - 0);
										v79 = v67[v71];
										v77[v79[2 + 0 + 0]] = v79[3];
										v295 = 660 - (232 + 421);
									end
									if (v295 == (1890 - (1569 + 320))) then
										v79 = v67[v71];
										v77[v79[1 + 1]] = v79[1 + 2];
										v71 = v71 + (3 - 2);
										v295 = 607 - (316 + 289);
									end
									if (v295 == (10 - 6)) then
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v59[v79[1 + 2]];
										v295 = (4236 - 2778) - (666 + 787);
									end
								end
							else
								v77[v79[(1872 - (335 + 1110)) - (360 + 65)]][v77[v79[3 + 0]]] = v79[258 - (79 + 169 + 6)];
							end
						elseif (v80 <= (45 - 16)) then
							if ((v80 == ((72 - 50) + 6)) or (535 >= 3555)) then
								v77[v79[(8 - 3) - 3]] = v77[v79[5 - 2]] - v77[v79[4]];
							else
								local v300;
								local v301;
								local v302;
								local v303;
								v77[v79[901 - (503 + 396)]] = v77[v79[184 - (92 + 89)]][v79[7 - 3]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[2]] = v59[v79[3]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v303 = v79[7 - 5];
								v302 = v77[v79[1 + 2]];
								v77[v303 + (2 - 1)] = v302;
								v77[v303] = v302[v79[4 + 0]];
								v71 = v71 + (333 - (268 + 64)) + 0;
								v79 = v67[v71];
								v77[v79[5 - 3]] = v77[v79[3]][v79[4]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v303 = v79[2 - (0 + 0)];
								v301 = {v77[v303](v13(v77, v303 + (2 - 1), v79[1192 - (442 + 747)]))};
								v300 = 1135 - (832 + 303);
								for v960 = v303, v79[950 - (88 + 858)] do
									v300 = v300 + 1 + 0;
									v77[v960] = v301[v300];
								end
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[1 + 1]] = v77[v79[792 - (766 + 23)]];
								v71 = v71 + (4 - 3);
								v79 = v67[v71];
								v77[v79[2 - 0]] = v77[v79[(1285 - (243 + 1035)) - 4]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]] = v79[10 - 7];
							end
						elseif ((v80 <= 30) or (1852 < 1148)) then
							local v322 = 1073 - (1036 + 37);
							local v323;
							local v324;
							while true do
								if ((2548 <= 2662) and (v322 == (3 + 1))) then
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v77[v79[2 + 0]][v77[v79[1483 - (641 + 839)]]] = v79[4];
									v71 = v71 + 1;
									v322 = 5;
								end
								if ((1162 <= 1165) and (v322 == (0 - 0))) then
									v323 = nil;
									v324 = nil;
									v77[v79[2]] = v77[v79[916 - ((4227 - 3317) + 3)]][v77[v79[9 - 5]]];
									v71 = v71 + (1685 - (1466 + 218));
									v322 = 1 + 0;
								end
								if (v322 == 1) then
									v79 = v67[v71];
									v324 = v79[1150 - (556 + 592)];
									v323 = v77[v79[2 + 1]];
									v77[v324 + 1] = v323;
									v322 = 810 - (329 + 479);
								end
								if ((2310 >= 1548) and (v322 == 3)) then
									v77[v324](v77[v324 + (855 - (174 + 680))]);
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[6 - 4]] = v59[v79[5 - 2]];
									v322 = 3 + 1;
								end
								if (v322 == (741 - (396 + 343))) then
									v77[v324] = v323[v79[1 + 3]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v324 = v79[1479 - (29 + 1448)];
									v322 = 1392 - (135 + 1254);
								end
								if (v322 == (18 - 13)) then
									v79 = v67[v71];
									v71 = v79[13 - 10];
									break;
								end
							end
						elseif (v80 == (21 + 10)) then
							v71 = v79[1530 - ((1651 - 1262) + 1138)];
						else
							local v979;
							local v980;
							v77[v79[(357 + 219) - (102 + 472)]] = v60[v79[3 + 0]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v980 = v79[2 + 0];
							v979 = v77[v79[(1364 + 184) - (320 + 1225)]];
							v77[v980 + (1 - 0)] = v979;
							v77[v980] = v979[v79[3 + 1]];
							v71 = v71 + (1465 - ((193 - 36) + 1307));
							v79 = v67[v71];
							v77[v79[1861 - ((921 - (90 + 10)) + 1038)]] = v79[7 - 4];
							v71 = v71 + 1;
							v79 = v67[v71];
							v980 = v79[1 + (805 - (209 + 595))];
							v77[v980] = v77[v980](v13(v77, v980 + ((806 - (603 + 202)) - 0), v79[2 + 1]));
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v980 = v79[2];
							v979 = v77[v79[1029 - (834 + 192)]];
							v77[v980 + 1] = v979;
							v77[v980] = v979[v79[1 + 2 + 1]];
							v71 = v71 + 1 + (0 - 0);
							v79 = v67[v71];
							v77[v79[2]] = v79[1 + 2] ~= (0 - (0 + 0));
							v71 = v71 + (305 - (300 + 4));
							v79 = v67[v71];
							v77[v79[1 + 1]] = v60[v79[7 - 4]];
							v71 = v71 + (363 - (112 + 250));
							v79 = v67[v71];
							v980 = v79[(2 - 1) + 1];
							v77[v980] = v77[v980]();
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v77[v79[1 + 1 + 0]] = v77[v79[2 + 1]][v79[3 + 1]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[2 + 0]] = v79[1417 - (1001 + 413)] ~= 0;
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v77[v79[884 - (244 + (1767 - 1129))]] = v60[v79[(2917 - 2221) - (627 + 66)]];
							v71 = v71 + ((281 - (174 + 105)) - 1);
							v79 = v67[v71];
							v980 = v79[2];
							v77[v980](v13(v77, v980 + 1, v79[605 - (512 + 90)]));
							v71 = v71 + (1907 - (1665 + 241));
							v79 = v67[v71];
							do
								return;
							end
						end
					elseif ((v80 <= ((2570 - 1805) - ((1286 - (532 + 381)) + 292 + 52))) or (1867 == 1322)) then
						if (v80 <= (19 + 21)) then
							if (v80 <= (10 + 26)) then
								if ((v80 <= (873 - (137 + 702))) or (4460 < 793)) then
									if (v80 > 33) then
										local v325 = v79[5 - 3];
										local v326 = v79[6 - 2];
										local v327 = v325 + (1101 - (35 + (2867 - 1803)));
										local v328 = {v77[v325](v77[v325 + (2 - 1)], v77[v327])};
										for v963 = 1 + 0, v326 do
											v77[v327 + v963] = v328[v963];
										end
										local v329 = v328[1237 - (298 + 938)];
										if (v329 or (2045 <= 895)) then
											v77[v327] = v329;
											v71 = v79[1262 - (233 + 1026)];
										else
											v71 = v71 + 1;
										end
									else
										local v330 = 1666 - (636 + 1030);
										local v331;
										while true do
											if ((568 < 4590) and (v330 == 5)) then
												v79 = v67[v71];
												v77[v79[2 + 0]] = v79[3 + 0];
												v71 = v71 + 1 + 0;
												v79 = v67[v71];
												v330 = 6;
											end
											if ((v330 == (0 + 0)) or (1695 > 2256)) then
												v331 = nil;
												v331 = v79[223 - (55 + 166)];
												v77[v331] = v77[v331]();
												v71 = v71 + 1 + 0;
												v330 = 1 + 0;
											end
											if (v330 == (26 - 19)) then
												v71 = v71 + (298 - (36 + 261));
												v79 = v67[v71];
												v331 = v79[2];
												v77[v331] = v77[v331](v13(v77, v331 + (1 - 0), v79[1371 - (34 + 1334)]));
												v330 = 4 + 4;
											end
											if (v330 == (5 + 1)) then
												v77[v79[(99 + 1186) - (1035 + 248)]] = v79[3];
												v71 = v71 + (22 - (20 + 1));
												v79 = v67[v71];
												v77[v79[2 + 0]] = v79[322 - (134 + 185)];
												v330 = 1140 - (549 + 584);
											end
											if ((v330 == 4) or (3483 < 1209)) then
												v71 = v71 + (686 - (314 + 371));
												v79 = v67[v71];
												v77[v79[6 - 4]] = v77[v79[971 - (478 + 490)]][v79[3 + 1]];
												v71 = v71 + (1173 - (786 + 386));
												v330 = 5;
											end
											if (9 == v330) then
												v79 = v67[v71];
												v77[v79[6 - 4]] = v79[3];
												break;
											end
											if (v330 == (1387 - (1055 + 324))) then
												v71 = v71 + 1;
												v79 = v67[v71];
												v77[v79[1342 - (1093 + (887 - 640))]][v79[3 + 0]] = v77[v79[4]];
												v71 = v71 + 1 + 0;
												v330 = 35 - 26;
											end
											if (v330 == 2) then
												v77[v79[2]] = v60[v79[3]];
												v71 = v71 + ((1889 - (1819 + 67)) - (2 + 0));
												v79 = v67[v71];
												v331 = v79[5 - 3];
												v330 = 7 - (2 + 2);
											end
											if (v330 == (1 + 0)) then
												v79 = v67[v71];
												v77[v79[7 - 5]][v79[10 - 7]] = v79[(1361 - (259 + 1098)) + 0];
												v71 = v71 + (2 - 1);
												v79 = v67[v71];
												v330 = 690 - (364 + 324);
											end
											if (v330 == (7 - 4)) then
												v77[v331] = v77[v331]();
												v71 = v71 + (2 - 1);
												v79 = v67[v71];
												v77[v79[1 + 1]] = v60[v79[12 - 9]];
												v330 = 5 - (1 + 0);
											end
										end
									end
								elseif ((v80 > 35) or (1687 >= 2169)) then
									local v332 = 0 - 0;
									local v333;
									local v334;
									while true do
										if (v332 == (1277 - (1249 + 19))) then
											v77[v79[2 + 0]][v79[11 - 8]] = v79[4];
											break;
										end
										if (0 == v332) then
											v333 = nil;
											v334 = nil;
											v77[v79[1088 - (686 + 400)]][v79[3]] = v77[v79[4 + 0]];
											v332 = 1;
										end
										if ((v332 == 6) or (2397 <= 1974)) then
											v77[v79[231 - (73 + 156)]] = {};
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v332 = 7;
										end
										if ((2895 > 2719) and (v332 == (813 - (119 + 602 + 90)))) then
											v77[v334](v13(v77, v334 + 1 + 0, v79[9 - 6]));
											v71 = v71 + (471 - (224 + 246));
											v79 = v67[v71];
											v332 = 4 - 1;
										end
										if ((1 - 0) == v332) then
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v334 = v79[1 + 1];
											v332 = 1 + 1;
										end
										if ((3 + 0) == v332) then
											v334 = v79[3 - 1];
											v333 = v77[v79[9 - 6]];
											v77[v334 + 1] = v333;
											v332 = 4;
										end
										if (v332 == (521 - (203 + 310))) then
											v77[v79[1995 - (1238 + 755)]][v79[1 + 2]] = v79[1538 - (709 + 825)];
											v71 = v71 + (1 - (0 - 0));
											v79 = v67[v71];
											v332 = 12 - 3;
										end
										if ((2889 >= 93) and (v332 == (871 - (196 + 250 + 418)))) then
											v77[v79[7 - 5]][v79[5 - 2]] = v79[4 + 0];
											v71 = v71 + ((3900 - 3066) - (171 + 662));
											v79 = v67[v71];
											v332 = 8;
										end
										if ((98 - (4 + 89)) == v332) then
											v77[v79[6 - 4]] = v79[3];
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v332 = 26 - 20;
										end
										if (v332 == (2 + 2)) then
											v77[v334] = v333[v79[1490 - (35 + 1451)]];
											v71 = v71 + ((3160 - (667 + 1039)) - (28 + 1425));
											v79 = v67[v71];
											v332 = 1998 - (941 + 1052);
										end
									end
								else
									local v335;
									local v336;
									v77[v79[(1021 - (274 + 745)) + 0]][v79[(1146 + 371) - (822 + 692)]] = v77[v79[5 - 1]];
									v71 = v71 + 1 + 0 + 0;
									v79 = v67[v71];
									v336 = v79[2];
									v77[v336](v13(v77, v336 + 1, v79[300 - ((475 - (288 + 142)) + 252)]));
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v336 = v79[1 + 1];
									v335 = v77[v79[3]];
									v77[v336 + 1] = v335;
									v77[v336] = v335[v79[9 - 5]];
									v71 = v71 + (434 - (114 + (1625 - (301 + 1005))));
									v79 = v67[v71];
									v77[v79[2]] = v79[3 - (0 + 0)];
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v336 = v79[2 + 0];
									v77[v336] = v77[v336](v13(v77, v336 + (1 - 0), v79[3]));
									v71 = v71 + ((2 - 1) - (1873 - (674 + 1199)));
									v79 = v67[v71];
									v336 = v79[2];
									v335 = v77[v79[(1728 + 238) - (333 + 223 + 1407)]];
									v77[v336 + ((3544 - 2337) - (741 + 465))] = v335;
									v77[v336] = v335[v79[469 - ((726 - 556) + 295)]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[2 + 0]] = v79[7 - 4];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[1 + 1]] = {};
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[2]][v79[2 + 1]] = v79[3 + 1];
									v71 = v71 + (1231 - (957 + 273));
									v79 = v67[v71];
									v77[v79[1 + 1]][v79[448 - (92 + 353)]] = v79[2 + 2];
								end
							elseif ((v80 <= 38) or (4801 < 4330)) then
								if ((v80 == 37) or (424 > 559)) then
									local v359 = 0 - 0;
									local v360;
									local v361;
									local v362;
									while true do
										if ((v359 == (18 - 11)) or (2690 <= 2421)) then
											v77[v360] = v362[v79[4]];
											v71 = v71 + (2 - (1 + 0));
											v79 = v67[v71];
											v77[v79[9 - 7]] = v79[3];
											v71 = v71 + (1781 - (389 + 1391));
											v359 = 6 + 2;
										end
										if (v359 == (1 + 1)) then
											v361 = v77[v362];
											for v2242 = v362 + (2 - 1), v79[4] do
												v361 = v361 .. v77[v2242];
											end
											v77[v79[953 - (783 + 168)]] = v361;
											v71 = v71 + (3 - 2);
											v79 = v67[v71];
											v359 = 3;
										end
										if (v359 == 6) then
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v360 = v79[313 - (309 + 2)];
											v362 = v77[v79[9 - 6]];
											v77[v360 + (1213 - (1090 + 122))] = v362;
											v359 = 3 + 4;
										end
										if ((13 - 9) == v359) then
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v360 = v79[1120 - (628 + 490)];
											v362 = v77[v79[1 + 2]];
											v77[v360 + 1] = v362;
											v359 = 12 - 7;
										end
										if (v359 == 0) then
											v360 = nil;
											v361 = nil;
											v362 = nil;
											v77[v79[(21 - 12) - 7]] = v60[v79[777 - (431 + 343)]];
											v71 = v71 + ((1 - 0) - 0);
											v359 = 1;
										end
										if (v359 == (8 - 5)) then
											v360 = v79[(5 - 3) + 0];
											v77[v360](v13(v77, v360 + 1 + 0, v79[1698 - (556 + 1139)]));
											v71 = v71 + (16 - (6 + 9));
											v79 = v67[v71];
											v77[v79[1 + 1]] = v77[v79[2 + 1]][v79[173 - (28 + 141)]];
											v359 = 2 + 2;
										end
										if (v359 == (6 - 1)) then
											v77[v360] = v362[v79[3 + 1 + 0]];
											v71 = v71 + (1318 - (486 + 831));
											v79 = v67[v71];
											v360 = v79[3 - 1];
											v77[v360] = v77[v360](v77[v360 + 1]);
											v359 = 15 - 9;
										end
										if ((v359 == (3 - 2)) or (1575 >= 4721)) then
											v79 = v67[v71];
											v77[v79[1 + 1]] = v77[v79[9 - 6]][v79[1267 - ((1501 - 833) + 595)]];
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v362 = v79[1 + 2];
											v359 = 2;
										end
										if (v359 == 8) then
											v79 = v67[v71];
											v360 = v79[2];
											v77[v360] = v77[v360](v13(v77, v360 + (2 - (4 - 3)), v79[3]));
											break;
										end
									end
								else
									local v363;
									local v364;
									v364 = v79[292 - (23 + 267)];
									v77[v364](v13(v77, v364 + (1945 - (1129 + 815)), v79[390 - (371 + 16)]));
									v71 = v71 + (1751 - (1326 + 424));
									v79 = v67[v71];
									v77[v79[2]] = v77[v79[3]][v79[4 + 0]];
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v364 = v79[7 - 5];
									v363 = v77[v79[121 - (88 + 30)]];
									v77[v364 + 1] = v363;
									v77[v364] = v363[v79[(1541 - 766) - (720 + 51)]];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v77[v79[1778 - (421 + 1355)]] = v79[4 - 1];
									v71 = v71 + 1;
									v79 = v67[v71];
									v364 = v79[1 + (266 - (34 + 231))];
									v77[v364] = v77[v364](v13(v77, v364 + ((2401 - (930 + 387)) - (286 + 797)), v79[3]));
									v71 = v71 + (3 - (2 + 0));
									v79 = v67[v71];
									v364 = v79[(2 + 0) - 0];
									v363 = v77[v79[3]];
									v77[v364 + (440 - ((1102 - 705) + (739 - (389 + 308))))] = v363;
									v77[v364] = v363[v79[4]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[(2054 - 1252) - ((54 - 30) + 776)]] = v79[3];
								end
							elseif ((v80 == (59 - 20)) or (2853 > 3716)) then
								local v383 = 785 - (222 + 563);
								local v384;
								local v385;
								while true do
									if ((1656 == 1656) and (v383 == (8 - 4))) then
										v385 = v79[(5 - 3) + 0 + 0];
										v384 = v77[v79[193 - (23 + 167)]];
										v77[v385 + (1799 - (690 + 1108))] = v384;
										v77[v385] = v384[v79[2 + 2]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v383 = 853 - (40 + 808);
									end
									if (((323 - (125 + 197)) + 4) == v383) then
										v77[v79[7 - (1002 - (339 + 658))]] = v77[v79[3 + 0]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v385 = v79[2 + 0];
										v77[v385](v13(v77, v385 + 1, v79[3]));
										v71 = v71 + 1;
										v383 = 577 - (47 + 524);
									end
									if (v383 == (4 + (4 - 2))) then
										v79 = v67[v71];
										v385 = v79[5 - 3];
										v384 = v77[v79[4 - 1]];
										v77[v385 + (2 - 1)] = v384;
										v77[v385] = v384[v79[1730 - (1165 + 561)]];
										break;
									end
									if (v383 == 1) then
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[1 + 1]][v79[5 - 2]] = v77[v79[12 - 8]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v385 = v79[2];
										v383 = 481 - (341 + 138);
									end
									if ((1 + 2) == v383) then
										v71 = v71 + (1 - 0);
										v79 = v67[v71];
										v385 = v79[2];
										v77[v385](v13(v77, v385 + 1, v79[3]));
										v71 = v71 + (327 - (89 + 237));
										v79 = v67[v71];
										v383 = 12 - 8;
									end
									if (v383 == (0 - 0)) then
										v384 = nil;
										v385 = nil;
										v77[v79[(2231 - (743 + 605)) - (581 + 300)]] = v60[v79[3]];
										v71 = v71 + (1221 - (855 + 365));
										v79 = v67[v71];
										v77[v79[4 - 2]] = v77[v79[1 + 2]][v79[4]];
										v383 = 1;
									end
									if ((4964 > 3047) and (v383 == (1237 - (944 + 86 + 205)))) then
										v384 = v77[v79[3 + 0 + 0]];
										v77[v385 + 1] = v384;
										v77[v385] = v384[v79[4 + 0]];
										v71 = v71 + (287 - (156 + 130));
										v79 = v67[v71];
										v77[v79[4 - 2]] = v77[v79[4 - (3 - 2)]];
										v383 = 5 - 2;
									end
								end
							else
								v77[v79[1 + 1]][v79[3]] = v79[3 + 1];
							end
						elseif ((v80 <= ((347 - 234) - (7 + 3 + 59))) or (2172 < 1173)) then
							if (v80 <= (12 + 30)) then
								if ((v80 == (201 - (409 - (197 + 52)))) or (1763 < 526)) then
									v77[v79[2]][v79[3]] = v77[v79[1167 - ((1444 - 773) + 492)]];
								else
									local v390 = 0 + 0;
									local v391;
									local v392;
									local v393;
									while true do
										if (v390 == (1216 - (369 + (1926 - 1080)))) then
											v393 = v79[1 + 2];
											for v2243 = 1, v393 do
												v392[v2243] = v77[v391 + v2243];
											end
											break;
										end
										if ((0 + 0) == v390) then
											v391 = v79[1947 - (625 + 411 + 909)];
											v392 = v77[v391];
											v390 = 1;
										end
									end
								end
							elseif (v80 == (35 + 5 + 3)) then
								local v394 = 0;
								local v395;
								while true do
									if (v394 == ((0 - 0) - 0)) then
										v395 = v79[205 - (11 + 192)];
										v77[v395](v13(v77, v395 + (3 - 2) + 0, v72));
										break;
									end
								end
							else
								local v396 = 175 - (135 + 40);
								local v397;
								while true do
									if (v396 == (4 - 2)) then
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v79[2 + 1];
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v77[v79[2]] = v79[6 - 3];
										v396 = 4 - (1 + 0);
									end
									if ((v396 == (177 - (50 + 126))) or (4480 < 299)) then
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v77[v79[1 + 1]] = v77[v79[1416 - (1233 + 180)]][v79[973 - (522 + 447)]];
										v71 = v71 + (1422 - (107 + 1314));
										v79 = v67[v71];
										v77[v79[1 + 1]] = v79[8 - (6 - 1)];
										v396 = 1 + 1;
									end
									if ((2312 == 2312) and ((11 - 5) == v396)) then
										v79 = v67[v71];
										v77[v79[(1104 - (97 + 1000)) - (17 - 12)]] = v79[3];
										break;
									end
									if (v396 == (1914 - (716 + 1194))) then
										v77[v79[1 + (1846 - (143 + 1702))]][v79[3]] = v77[v79[1 + 3]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[505 - (74 + 429)]] = v60[v79[5 - 2]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v396 = 11 - 6;
									end
									if (v396 == (4 + 1)) then
										v397 = v79[5 - 3];
										v77[v397] = v77[v397]();
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v77[v79[435 - (279 + 154)]][v79[781 - (454 + 324)]] = v77[v79[4 + 0]];
										v71 = v71 + 1;
										v396 = 23 - (12 + 5);
									end
									if ((0 + (0 - 0)) == v396) then
										v397 = nil;
										v397 = v79[4 - (371 - (40 + 329))];
										v77[v397] = v77[v397]();
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[1095 - (277 + 816)]] = v60[v79[12 - 9]];
										v396 = 1184 - (1058 + 125);
									end
									if (v396 == (1 + 2)) then
										v71 = v71 + (976 - (815 + 160));
										v79 = v67[v71];
										v397 = v79[(7 + 1) - 6];
										v77[v397] = v77[v397](v13(v77, v397 + (2 - (1 + 0)), v79[1 + 2]));
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v396 = 1902 - (41 + 1857);
									end
								end
							end
						elseif (v80 <= (1939 - (1222 + (1025 - 354)))) then
							if (v80 > (116 - 71)) then
								local v398;
								v77[v79[2 - 0]] = v77[v79[3]][v79[4]];
								v71 = v71 + (1183 - (229 + 953));
								v79 = v67[v71];
								v77[v79[1776 - (1111 + 663)]] = v59[v79[1582 - (874 + 77 + 628)]];
								v71 = v71 + (66 - (9 + 56)) + 0;
								v79 = v67[v71];
								v77[v79[2 + 0]] = v77[v79[6 - 3]][v79[1 + 3]];
								v71 = v71 + (680 - (642 + 37));
								v79 = v67[v71];
								v77[v79[1 + 1]] = v77[v79[587 - (531 + 53)]][v79[1 + 3]];
								v71 = v71 + (2 - 1);
								v79 = v67[v71];
								v77[v79[456 - (218 + 15 + 221)]] = v77[v79[6 - 3]] / v79[4 + 0];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[1543 - (718 + 823)]] = v59[v79[3]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[2]] = v77[v79[808 - (266 + 539)]][v79[11 - 7]];
								v71 = v71 + (1226 - ((1409 - (89 + 684)) + 589));
								v79 = v67[v71];
								v77[v79[4 - 2]] = v77[v79[(4 + 1) - 2]][v79[4 + 0]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v398 = v79[1017 - (657 + 358)];
								v77[v398] = v77[v398](v13(v77, v398 + (2 - 1), v79[6 - 3]));
								v71 = v71 + ((390 + 798) - (1151 + 36));
								v79 = v67[v71];
								v77[v79[2 + 0]][v79[1 + 2]] = v77[v79[11 - 7]];
								v71 = v71 + (1833 - (1552 + 280));
								v79 = v67[v71];
								v77[v79[836 - (64 + 770)]] = v60[v79[3 + 0 + 0]];
								v71 = v71 + (2 - 1);
								v79 = v67[v71];
								v77[v79[1 + 1]] = v77[v79[1246 - ((266 - 109) + 802 + 284)]][v79[7 - 3]];
								v71 = v71 + (4 - (3 + 0));
								v79 = v67[v71];
								v77[v79[2 - 0]] = v77[v79[3]][v79[5 - 1]];
								v71 = v71 + ((1433 - (238 + 375)) - (599 + 220));
								v79 = v67[v71];
								v77[v79[2]] = v77[v79[5 - 2]][v79[4]];
								v71 = v71 + (1932 - (1813 + 118));
								v79 = v67[v71];
								v398 = v79[2];
								v77[v398] = v77[v398](v13(v77, v398 + 1 + 0, v79[1220 - (841 + 376)]));
								v71 = v71 + (1 - 0);
								v79 = v67[v71];
								v77[v79[1 + 1]][v79[(7 + 1) - 5]] = v77[v79[863 - (464 + 395)]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v71 = v79[7 - 4];
							else
								local v428;
								v428 = v79[1 + 1];
								v77[v428] = v77[v428]();
								v71 = v71 + (838 - (467 + 370));
								v79 = v67[v71];
								v77[v79[3 - 1]][v79[3 + 0]] = v77[v79[13 - 9]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[4 - 2]] = v60[v79[523 - (150 + 370)]];
								v71 = v71 + (1283 - (74 + 1208));
								v79 = v67[v71];
								v428 = v79[4 - 2];
								v77[v428] = v77[v428]();
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[9 - (9 - 2)]][v79[3 + 0]] = v79[394 - (14 + 376)];
								v71 = v71 + (1 - 0);
								v79 = v67[v71];
								v77[v79[2 + 0]] = v79[3 + 0];
							end
						elseif ((504 < 4458) and (v80 == (45 + 2))) then
							local v441 = 0 - 0;
							local v442;
							local v443;
							while true do
								if ((v441 == (4 + 1)) or (1086 == 955)) then
									v77[v79[80 - (23 + 55)]][v79[6 - 3]] = v79[3 + 1];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[2 - 0]][v79[1 + 2]] = v79[905 - (652 + 249)];
									break;
								end
								if ((954 > 465) and (v441 == (5 - (3 + 0)))) then
									v77[v443] = v442[v79[4]];
									v71 = v71 + (1869 - ((2074 - 1366) + 1160));
									v79 = v67[v71];
									v77[v79[5 - 3]] = v79[5 - 2];
									v71 = v71 + (28 - ((26 - 16) + (46 - 29)));
									v79 = v67[v71];
									v441 = 1 + 2;
								end
								if (v441 == (1733 - (1400 + 332))) then
									v77[v443](v13(v77, v443 + (1 - 0), v79[1911 - (242 + 1666)]));
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v443 = v79[2];
									v442 = v77[v79[(3 - 1) + 1]];
									v77[v443 + 1 + 0] = v442;
									v441 = 942 - ((3150 - 2300) + 90);
								end
								if (v441 == (4 - 1)) then
									v77[v79[2]] = {};
									v71 = v71 + (1391 - (360 + 1030));
									v79 = v67[v71];
									v77[v79[2 + 0]][v79[7 - 4]] = v79[(6 - 1) - 1];
									v71 = v71 + 1;
									v79 = v67[v71];
									v441 = 1665 - (909 + 752);
								end
								if (v441 == (1227 - (109 + 1114))) then
									v77[v79[3 - 1]][v79[2 + 0 + 1]] = v79[246 - (6 + 236)];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[2 + 0]][v79[6 - 3]] = v79[6 - 2];
									v71 = v71 + 1;
									v79 = v67[v71];
									v441 = 1138 - (1076 + 57);
								end
								if (v441 == (0 + 0)) then
									v442 = nil;
									v443 = nil;
									v77[v79[2]][v79[1 + 2]] = v77[v79[693 - (276 + 303 + 110)]];
									v71 = v71 + (463 - (428 + 34)) + 0;
									v79 = v67[v71];
									v443 = v79[2 + 0 + 0];
									v441 = 1;
								end
							end
						else
							local v444;
							v77[v79[2 + 0]] = v77[v79[410 - (174 + 233)]][v79[11 - 7]];
							v71 = v71 + 1;
							v79 = v67[v71];
							v77[v79[3 - (1 - 0)]] = v79[2 + 1];
							v71 = v71 + 1;
							v79 = v67[v71];
							v444 = v79[1176 - (663 + 511)];
							v77[v444] = v77[v444](v77[v444 + 1 + 0]);
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[5 - 3]] = v77[v79[2 + 1]];
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v77[v79[4 - 2]][v79[2 + 1]] = v79[7 - 3];
							v71 = v71 + 1;
							v79 = v67[v71];
							v77[v79[2 + 0]] = v79[3];
						end
					elseif (v80 <= (6 + 50)) then
						if (v80 <= (774 - (478 + 244))) then
							if (v80 <= (567 - (440 + 77))) then
								if ((v80 == (23 + 26)) or (4120 == 4624)) then
									local v457 = 0 - 0;
									local v458;
									local v459;
									local v460;
									while true do
										if (v457 == 1) then
											v460 = 0;
											for v2246 = v458, v79[(3416 - 1856) - (655 + 901)] do
												v460 = v460 + 1;
												v77[v2246] = v459[v460];
											end
											break;
										end
										if (v457 == (0 + (0 - 0))) then
											v458 = v79[2 + 0];
											v459 = {v77[v458](v13(v77, v458 + (3 - 2), v79[3]))};
											v457 = (2364 - (223 + 695)) - (695 + 750);
										end
									end
								else
									v77[v79[6 - 4]] = v77[v79[3 - 0]];
								end
							elseif (v80 == 51) then
								local v463 = 0;
								local v464;
								local v465;
								while true do
									if ((1129 <= 3440) and (v463 == (15 - 11))) then
										v79 = v67[v71];
										v465 = v79[353 - (285 + 66)];
										v77[v465](v77[v465 + ((6 - 4) - 1)]);
										v71 = v71 + 1;
										v79 = v67[v71];
										v463 = 1315 - (682 + 628);
									end
									if (v463 == (1 + 2)) then
										v465 = v79[301 - (176 + 123)];
										v464 = v77[v79[2 + 1]];
										v77[v465 + 1 + 0] = v464;
										v77[v465] = v464[v79[273 - (239 + 30)]];
										v71 = v71 + (512 - (329 + 182)) + 0;
										v463 = 4;
									end
									if (8 == v463) then
										v77[v79[2]][v79[3 + 0]] = v79[1 + 3];
										break;
									end
									if (v463 == (0 - 0)) then
										v464 = nil;
										v465 = nil;
										v465 = v79[5 - 3];
										v464 = v77[v79[318 - (306 + 9)]];
										v77[v465 + (3 - 2)] = v464;
										v463 = 1 + 0;
									end
									if (v463 == ((6 - 2) + 2)) then
										v79 = v67[v71];
										v77[v79[2]] = v79[2 + 1];
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v77[v79[1377 - (1140 + 235)]] = {};
										v463 = 7;
									end
									if ((v463 == 5) or (4235 > 4696)) then
										v465 = v79[2 + 0];
										v464 = v77[v79[3]];
										v77[v465 + 1 + 0] = v464;
										v77[v465] = v464[v79[2 + 2]];
										v71 = v71 + (53 - (33 + 19));
										v463 = 3 + 3;
									end
									if (v463 == (5 - 3)) then
										v79 = v67[v71];
										v465 = v79[2];
										v77[v465](v13(v77, v465 + 1 + 0 + 0, v79[1 + 2]));
										v71 = v71 + 1;
										v79 = v67[v71];
										v463 = 5 - 2;
									end
									if ((1 + 0) == v463) then
										v77[v465] = v464[v79[4]];
										v71 = v71 + ((381 + 309) - (586 + 103));
										v79 = v67[v71];
										v77[v79[1 + 1]] = v79[(18 - 9) - 6];
										v71 = v71 + ((2015 - 526) - ((2509 - (177 + 1023)) + 179));
										v463 = 2 - 0;
									end
									if (v463 == (4 + 3)) then
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v77[v79[2 + 0]][v79[5 - 2]] = v79[7 - 3];
										v71 = v71 + (610 - (295 + 314));
										v79 = v67[v71];
										v463 = 19 - 11;
									end
								end
							else
								v77[v79[1964 - (1300 + 662)]] = v77[v79[9 - 6]] / v79[(3549 - 1790) - (1178 + 577)];
							end
						elseif (v80 <= (29 + 25)) then
							if (v80 > (156 - 103)) then
								local v467;
								v467 = v79[1407 - (851 + 554)];
								v77[v467] = v77[v467]();
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[5 - 3]][v79[6 - 3]] = v79[306 - (115 + 187)];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[2 + 0]] = v60[v79[11 - 8]];
								v71 = v71 + (1162 - (160 + 1001));
								v79 = v67[v71];
								v467 = v79[2];
								v77[v467] = v77[v467]();
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[2 + 0]] = v60[v79[5 - (1 + 1)]];
								v71 = v71 + (359 - ((516 - 279) + 121));
								v79 = v67[v71];
								v77[v79[899 - (525 + 372)]] = v77[v79[4 - 1]][v79[12 - 8]];
								v71 = v71 + (143 - (96 + 46));
								v79 = v67[v71];
								v77[v79[2]] = v79[3];
								v71 = v71 + (778 - (643 + 134));
								v79 = v67[v71];
								v77[v79[1 + 1]] = v79[3];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]] = v79[6 - 3];
								v71 = v71 + (3 - 2);
								v79 = v67[v71];
								v467 = v79[(1467 - (120 + 1345)) + 0];
								v77[v467] = v77[v467](v13(v77, v467 + (338 - (8 + 329)), v79[3]));
								v71 = v71 + (1 - 0);
								v79 = v67[v71];
								v77[v79[3 - 1]][v79[722 - (316 + 403)]] = v77[v79[4]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[5 - 3]] = v79[3];
							else
								local v487 = 0 + 0;
								local v488;
								local v489;
								local v490;
								local v491;
								while true do
									if (v487 == ((125 - (19 + 106)) - 0)) then
										v488 = v79[2];
										v489, v490 = v70(v77[v488](v77[v488 + 1]));
										v487 = 1;
									end
									if ((4719 > 2178) and ((2 + 0) == v487)) then
										for v2249 = v488, v72 do
											local v2250 = 0;
											while true do
												if ((2543 > 36) and ((0 + 0) == v2250)) then
													v491 = v491 + (3 - 2);
													v77[v2249] = v489[v491];
													break;
												end
											end
										end
										break;
									end
									if (v487 == 1) then
										v72 = (v490 + v488) - 1;
										v491 = 0 - 0;
										v487 = 3 - 1;
									end
								end
							end
						elseif ((4667 > 4395) and (v80 == (4 + 51))) then
							if ((1755 > 998) and (v79[3 - 1] <= v77[v79[1 + (10 - 7)]])) then
								v71 = v71 + (2 - 1);
							else
								v71 = v79[20 - (12 + 5)];
							end
						else
							do
								return v77[v79[7 - 5]];
							end
						end
					elseif (v80 <= (128 - 68)) then
						if (v80 <= (123 - 65)) then
							if (v80 > (140 - (115 - 32))) then
								do
									return;
								end
							else
								local v492 = 0 + 0;
								local v493;
								local v494;
								while true do
									if (v492 == (2 - 1)) then
										v79 = v67[v71];
										v494 = v79[1 + 1];
										v77[v494](v13(v77, v494 + ((5116 - 3142) - (1656 + 317)), v79[3]));
										v71 = v71 + (3 - 2) + 0;
										v492 = 2 + 0;
									end
									if (v492 == (23 - 14)) then
										v79 = v67[v71];
										v77[v79[9 - 7]][v79[357 - (5 + 349)]] = v79[4];
										break;
									end
									if (v492 == 6) then
										v79 = v67[v71];
										v77[v79[9 - 7]] = v79[1274 - (266 + (2121 - 1116))];
										v71 = v71 + 1;
										v79 = v67[v71];
										v492 = 5 + 2;
									end
									if ((27 - 19) == v492) then
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]][v79[1 + 2]] = v79[4];
										v71 = v71 + (1 - 0);
										v492 = 1705 - (561 + 1135);
									end
									if ((1732 < 3671) and (v492 == (5 - 1))) then
										v77[v494](v77[v494 + (3 - 2)]);
										v71 = v71 + (1067 - (507 + 559));
										v79 = v67[v71];
										v494 = v79[2];
										v492 = 5;
									end
									if ((0 - 0) == v492) then
										v493 = nil;
										v494 = nil;
										v77[v79[6 - 4]][v79[3]] = v77[v79[(1895 - (957 + 546)) - (212 + 176)]];
										v71 = v71 + (906 - (250 + 655));
										v492 = 2 - 1;
									end
									if (v492 == (8 - (12 - 9))) then
										v493 = v77[v79[4 - 1]];
										v77[v494 + (1957 - (707 + 1162 + 87))] = v493;
										v77[v494] = v493[v79[13 - (3 + 6)]];
										v71 = v71 + ((721 + 1181) - (484 + 1417));
										v492 = 6;
									end
									if (v492 == (14 - (4 + 3))) then
										v77[v79[2]] = {};
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]][v79[706 - (227 + 476)]] = v79[6 - 2];
										v492 = 8;
									end
									if ((2064 == 2064) and (v492 == (775 - (48 + 725)))) then
										v79 = v67[v71];
										v494 = v79[2];
										v493 = v77[v79[4 - 1]];
										v77[v494 + (1 - 0)] = v493;
										v492 = 3;
									end
									if ((4639 > 1851) and (v492 == (7 - 4))) then
										v77[v494] = v493[v79[6 - 2]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v494 = v79[2 + 0];
										v492 = 10 - 6;
									end
								end
							end
						elseif ((v80 > (17 + 42)) or (1410 == 3755)) then
							local v495 = 0 + (0 - 0);
							local v496;
							local v497;
							local v498;
							while true do
								if (v495 == (854 - (152 + 701))) then
									v498 = 0;
									for v2251 = v496, v79[4] do
										local v2252 = 1311 - (430 + 881);
										while true do
											if (v2252 == (0 + 0)) then
												v498 = v498 + (896 - (557 + 338));
												v77[v2251] = v497[v498];
												break;
											end
										end
									end
									break;
								end
								if (v495 == 0) then
									v496 = v79[1 + 1];
									v497 = {v77[v496](v13(v77, v496 + (2 - 1), v72))};
									v495 = 1;
								end
							end
						else
							v77[v79[2]][v77[v79[3]]] = v77[v79[13 - (15 - 6)]];
						end
					elseif ((v80 <= (164 - 102)) or (453 == 2829)) then
						if (v80 > 61) then
							local v501 = v79[2];
							local v502 = v77[v501];
							for v966 = v501 + (2 - 1), v79[804 - (499 + 302)] do
								v7(v502, v77[v966]);
							end
						else
							local v503 = 0;
							local v504;
							local v505;
							while true do
								if (v503 == (868 - (39 + 827))) then
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v505 = v79[4 - 2];
									v77[v505] = v77[v505](v13(v77, v505 + (3 - 2), v79[3]));
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v503 = 1 + 2;
								end
								if ((0 - 0) == v503) then
									v504 = nil;
									v505 = nil;
									v77[v79[1 + 1]] = v60[v79[4 - (1 - 0)]];
									v71 = v71 + (105 - (103 + 1));
									v79 = v67[v71];
									v505 = v79[556 - ((1429 - (166 + 788)) + 79)];
									v503 = 2 - 1;
								end
								if (v503 == (9 - 6)) then
									v505 = v79[2];
									v504 = v77[v79[3]];
									v77[v505 + 1 + 0] = v504;
									v77[v505] = v504[v79[4 + 0]];
									v71 = v71 + (1504 - (1395 + 108));
									v79 = v67[v71];
									v503 = 11 - 7;
								end
								if ((3743 == 3743) and (v503 == (1211 - (7 + 1197)))) then
									v79 = v67[v71];
									v505 = v79[2];
									v77[v505](v13(v77, v505 + 1 + 0, v79[2 + 1]));
									v71 = v71 + (320 - (27 + 292));
									v79 = v67[v71];
									do
										return;
									end
									break;
								end
								if ((2313 < 4862) and (v503 == 6)) then
									v79 = v67[v71];
									v77[v79[2]] = v79[3] ~= (0 - 0);
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v77[v79[8 - 6]] = v60[v79[5 - (988 - (21 + 965))]];
									v71 = v71 + (1 - 0);
									v503 = 146 - (43 + 96);
								end
								if (v503 == (4 - 3)) then
									v504 = v77[v79[3]];
									v77[v505 + (1 - 0)] = v504;
									v77[v505] = v504[v79[4 + 0]];
									v71 = v71 + (697 - (127 + 569)) + 0;
									v79 = v67[v71];
									v77[v79[3 - 1]] = v79[2 + 1];
									v503 = 2;
								end
								if (v503 == ((6 + 1) - 3)) then
									v77[v79[1 + 1]] = v79[1 + 0 + 2] ~= (1751 - (511 + 903 + 337));
									v71 = v71 + (1941 - (1642 + 298));
									v79 = v67[v71];
									v77[v79[4 - 2]] = v60[v79[8 - 5]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v503 = 14 - 9;
								end
								if ((4091 > 643) and (5 == v503)) then
									v505 = v79[1 + 1];
									v77[v505] = v77[v505]();
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[2 + 0]] = v77[v79[975 - (357 + 615)]][v79[4]];
									v71 = v71 + 1 + 0;
									v503 = 14 - 8;
								end
							end
						end
					elseif (v80 <= 63) then
						v77[v79[2 + 0]] = v77[v79[6 - 3]][v79[4 + 0]];
					elseif (v80 == (5 + 59)) then
						local v1008 = 0 + 0;
						local v1009;
						while true do
							if ((2198 < 4235) and ((1308 - (384 + 917)) == v1008)) then
								v1009 = v79[699 - (128 + 569)];
								v77[v1009] = v77[v1009](v13(v77, v1009 + (1544 - (1407 + 136)), v79[1890 - (687 + 1200)]));
								v71 = v71 + (1711 - (556 + 1154));
								v79 = v67[v71];
								v1008 = 28 - 20;
							end
							if ((v1008 == (98 - (9 + 86))) or (2985 == 2075)) then
								v79 = v67[v71];
								v77[v79[2]] = v77[v79[424 - (275 + 146)]][v79[1 + 3]];
								v71 = v71 + (65 - (29 + 35));
								v79 = v67[v71];
								v1008 = 17 - 13;
							end
							if (v1008 == (5 - 3)) then
								v71 = v71 + (4 - 3);
								v79 = v67[v71];
								v77[v79[2]] = v77[v79[2 + 1]][v79[1016 - (53 + 959)]];
								v71 = v71 + (409 - (312 + 96));
								v1008 = 4 - 1;
							end
							if (v1008 == 4) then
								v77[v79[287 - (147 + 138)]] = v77[v79[902 - (813 + 86)]] / v79[4 + 0];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]] = v59[v79[4 - 1]];
								v1008 = 497 - (18 + 474);
							end
							if (((1 + 0) == v1008) or (4381 == 3926)) then
								v77[v79[6 - 4]] = v77[v79[1089 - (860 + 226)]][v79[307 - (121 + 182)]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[2]] = v59[v79[1243 - (988 + 252)]];
								v1008 = 2;
							end
							if (v1008 == (0 + 0)) then
								v1009 = nil;
								v77[v79[2]] = v60[v79[1 + 2]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v1008 = 1971 - (49 + 1921);
							end
							if ((v1008 == 8) or (1828 > 2207)) then
								v77[v79[892 - (223 + 667)]][v79[55 - (51 + 1)]] = v77[v79[6 - 2]];
								v71 = v71 + (1 - 0);
								v79 = v67[v71];
								v77[v79[1127 - (146 + 979)]] = v79[1 + 2];
								break;
							end
							if (v1008 == (610 - (311 + 294))) then
								v71 = v71 + (2 - 1);
								v79 = v67[v71];
								v77[v79[1 + 1]] = v77[v79[1446 - (496 + 947)]][v79[1362 - (1233 + 125)]];
								v71 = v71 + 1 + 0;
								v1008 = 6 + 0;
							end
							if ((4087 <= 4776) and ((2 + 4) == v1008)) then
								v79 = v67[v71];
								v77[v79[2]] = v77[v79[1648 - (963 + 682)]][v79[4 + 0]];
								v71 = v71 + (1505 - (504 + 1000));
								v79 = v67[v71];
								v1008 = 7;
							end
						end
					else
						v77[v79[2 + 0]] = not v77[v79[3 + 0]];
						v71 = v71 + 1 + 0;
						v79 = v67[v71];
						v59[v79[4 - 1]] = v77[v79[2 + 0]];
						v71 = v71 + 1 + 0;
						v79 = v67[v71];
						v77[v79[184 - (156 + 26)]] = v59[v79[3]];
						v71 = v71 + 1;
						v79 = v67[v71];
						v77[v79[2 + 0]] = v59[v79[3 - 0]];
						v71 = v71 + 1;
						v79 = v67[v71];
						v77[v79[166 - (149 + 15)]][v79[963 - (890 + 70)]] = v77[v79[121 - (39 + 78)]];
						v71 = v71 + (483 - (14 + 468));
						v79 = v67[v71];
						v71 = v79[6 - 3];
					end
				elseif (v80 <= (273 - 175)) then
					if (v80 <= (42 + 39)) then
						if ((v80 <= (44 + 29)) or (4810 <= 591)) then
							if (v80 <= (15 + 54)) then
								if (v80 <= 67) then
									if (v80 == (30 + 36)) then
										local v508;
										local v509;
										v509 = v79[1 + 1];
										v77[v509](v13(v77, v509 + (1 - 0), v79[3 + 0]));
										v71 = v71 + (3 - 2);
										v79 = v67[v71];
										v509 = v79[1 + 1];
										v508 = v77[v79[3]];
										v77[v509 + (52 - (12 + 39))] = v508;
										v77[v509] = v508[v79[4 + 0]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[5 - 3]] = v79[10 - 7];
										v71 = v71 + 1;
										v79 = v67[v71];
										v509 = v79[2];
										v77[v509] = v77[v509](v13(v77, v509 + 1 + 0, v79[2 + 1]));
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v509 = v79[2];
										v508 = v77[v79[2 + 1]];
										v77[v509 + (4 - 3)] = v508;
										v77[v509] = v508[v79[1714 - (1596 + 114)]];
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v77[v79[2]] = v79[3];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[715 - (164 + 549)]] = {};
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[1440 - (1059 + 379)]][v79[3 - 0]] = v79[3 + 1];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[2]][v79[395 - (145 + 247)]] = v79[4];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[1 + 1]][v79[8 - 5]] = v79[1 + 3];
									else
										local v531 = 0 + 0;
										local v532;
										local v533;
										local v534;
										local v535;
										local v536;
										while true do
											if ((4481 > 1030) and (v531 == (16 - 6))) then
												v533, v534 = v70(v77[v536](v77[v536 + (721 - (254 + 466))]));
												v72 = (v534 + v536) - 1;
												v532 = 560 - (544 + 16);
												for v2253 = v536, v72 do
													v532 = v532 + (2 - 1);
													v77[v2253] = v533[v532];
												end
												v71 = v71 + 1;
												v79 = v67[v71];
												v536 = v79[630 - (294 + 334)];
												v531 = 11;
											end
											if ((1472 <= 2947) and (v531 == (259 - (236 + 17)))) then
												v535 = v77[v79[2 + 1]];
												v77[v536 + 1 + 0] = v535;
												v77[v536] = v535[v79[14 - 10]];
												v71 = v71 + (4 - 3);
												v79 = v67[v71];
												v77[v79[2 + 0]] = v79[3];
												v71 = v71 + 1 + 0;
												v531 = 801 - (413 + 381);
											end
											if (v531 == (1 + 6)) then
												v79 = v67[v71];
												v536 = v79[3 - 1];
												v77[v536] = v77[v536](v13(v77, v536 + (2 - 1), v79[1973 - (582 + 1388)]));
												v71 = v71 + 1;
												v79 = v67[v71];
												v77[v79[2 - 0]] = v77[v79[3 + 0]][v79[4]];
												v71 = v71 + (365 - (326 + 38));
												v531 = 23 - 15;
											end
											if (v531 == (5 - 1)) then
												v536 = v79[622 - (47 + 573)];
												v77[v536] = v77[v536](v77[v536 + 1 + 0]);
												v71 = v71 + 1;
												v79 = v67[v71];
												v77[v79[8 - 6]] = v60[v79[3]];
												v71 = v71 + (1 - 0);
												v79 = v67[v71];
												v531 = 1669 - (1269 + 395);
											end
											if (1 == v531) then
												v77[v536] = v535[v79[496 - (76 + 416)]];
												v71 = v71 + (444 - (319 + 124));
												v79 = v67[v71];
												v77[v79[4 - 2]] = v79[1010 - (564 + 443)];
												v71 = v71 + (2 - 1);
												v79 = v67[v71];
												v536 = v79[460 - (337 + 121)];
												v531 = 2;
											end
											if ((5 - 3) == v531) then
												v535 = v77[v79[9 - 6]];
												v77[v536 + (1912 - (1261 + 650))] = v535;
												v77[v536] = v535[v79[2 + 2]];
												v71 = v71 + 1;
												v79 = v67[v71];
												v77[v79[2 - 0]] = v60[v79[1820 - (772 + 1045)]];
												v71 = v71 + 1 + 0;
												v531 = 147 - (102 + 42);
											end
											if (v531 == (1849 - (1524 + 320))) then
												v77[v79[1272 - (1049 + 221)]] = v77[v79[159 - (18 + 138)]][v79[4]];
												v71 = v71 + (2 - 1);
												v79 = v67[v71];
												v77[v79[1104 - (67 + 1035)]] = v60[v79[351 - (136 + 212)]];
												v71 = v71 + (4 - 3);
												v79 = v67[v71];
												v536 = v79[2 + 0];
												v531 = 6 + 0;
											end
											if ((1617 - (240 + 1364)) == v531) then
												v77[v536](v13(v77, v536 + (1083 - (1050 + 32)), v72));
												v71 = v71 + 1;
												v79 = v67[v71];
												v71 = v79[10 - 7];
												break;
											end
											if ((v531 == 9) or (3554 < 481)) then
												v536 = v79[2];
												v535 = v77[v79[2 + 1]];
												v77[v536 + (1056 - (331 + 724))] = v535;
												v77[v536] = v535[v79[1 + 3]];
												v71 = v71 + (645 - (269 + 375));
												v79 = v67[v71];
												v536 = v79[727 - (267 + 458)];
												v531 = 4 + 6;
											end
											if (v531 == (0 - 0)) then
												v532 = nil;
												v533, v534 = nil;
												v535 = nil;
												v536 = nil;
												v536 = v79[820 - (667 + 151)];
												v535 = v77[v79[1500 - (1410 + 87)]];
												v77[v536 + (1898 - (1504 + 393))] = v535;
												v531 = 2 - 1;
											end
											if (v531 == (30 - 18)) then
												v533, v534 = v70(v77[v536](v13(v77, v536 + 1, v72)));
												v72 = (v534 + v536) - 1;
												v532 = 0;
												for v2256 = v536, v72 do
													v532 = v532 + 1;
													v77[v2256] = v533[v532];
												end
												v71 = v71 + (797 - (461 + 335));
												v79 = v67[v71];
												v536 = v79[2];
												v531 = 2 + 11;
											end
											if (v531 == (1769 - (1730 + 31))) then
												v79 = v67[v71];
												v77[v79[2]] = v77[v79[1670 - (728 + 939)]][v79[14 - 10]];
												v71 = v71 + (1 - 0);
												v79 = v67[v71];
												v77[v79[4 - 2]] = v77[v79[1071 - (138 + 930)]][v79[4 + 0]];
												v71 = v71 + 1 + 0;
												v79 = v67[v71];
												v531 = 8 + 1;
											end
											if (v531 == (12 - 9)) then
												v79 = v67[v71];
												v77[v79[1768 - (459 + 1307)]] = v77[v79[3]][v79[4]];
												v71 = v71 + (1871 - (474 + 1396));
												v79 = v67[v71];
												v77[v79[2 - 0]] = v59[v79[3 + 0]];
												v71 = v71 + 1 + 0;
												v79 = v67[v71];
												v531 = 11 - 7;
											end
											if (11 == v531) then
												v533, v534 = v70(v77[v536](v13(v77, v536 + 1 + 0, v72)));
												v72 = (v534 + v536) - 1;
												v532 = 0;
												for v2259 = v536, v72 do
													v532 = v532 + (3 - 2);
													v77[v2259] = v533[v532];
												end
												v71 = v71 + (4 - 3);
												v79 = v67[v71];
												v536 = v79[2];
												v531 = 12;
											end
										end
									end
								elseif ((1678 < 2458) and (v80 > 68)) then
									local v537 = 591 - (562 + 29);
									local v538;
									local v539;
									while true do
										if (v537 == (0 + 0)) then
											v538 = nil;
											v539 = nil;
											v77[v79[2]] = v79[1422 - (374 + 1045)];
											v71 = v71 + 1 + 0;
											v537 = 2 - 1;
										end
										if (v537 == (643 - (448 + 190))) then
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v539 = v79[1 + 1];
											v538 = v77[v79[2 + 1]];
											v537 = 6;
										end
										if (v537 == (34 - 25)) then
											v538 = v77[v79[8 - 5]];
											v77[v539 + (1495 - (1307 + 187))] = v538;
											v77[v539] = v538[v79[4]];
											v71 = v71 + (3 - 2);
											v537 = 10;
										end
										if ((v537 == (8 - 4)) or (1206 <= 1027)) then
											v71 = v71 + 1;
											v79 = v67[v71];
											v539 = v79[5 - 3];
											v77[v539](v13(v77, v539 + (684 - (232 + 451)), v79[3 + 0]));
											v537 = 5 + 0;
										end
										if ((565 - (510 + 54)) == v537) then
											v79 = v67[v71];
											v539 = v79[3 - 1];
											v77[v539](v13(v77, v539 + (37 - (13 + 23)), v79[3]));
											v71 = v71 + (1 - 0);
											v537 = 2 - 0;
										end
										if ((4277 <= 4571) and (v537 == (10 - 4))) then
											v77[v539 + (1089 - (830 + 258))] = v538;
											v77[v539] = v538[v79[4]];
											v71 = v71 + (3 - 2);
											v79 = v67[v71];
											v537 = 5 + 2;
										end
										if (v537 == (7 + 1)) then
											v77[v539](v13(v77, v539 + (1442 - (860 + 581)), v79[3]));
											v71 = v71 + 1;
											v79 = v67[v71];
											v539 = v79[7 - 5];
											v537 = 8 + 1;
										end
										if (v537 == (248 - (237 + 4))) then
											v77[v79[4 - 2]] = v79[6 - 3];
											v71 = v71 + (1 - 0);
											v79 = v67[v71];
											v539 = v79[2 + 0];
											v537 = 5 + 3;
										end
										if (v537 == (37 - 27)) then
											v79 = v67[v71];
											v77[v79[1 + 1]] = v79[3];
											break;
										end
										if ((2 + 0) == v537) then
											v79 = v67[v71];
											v539 = v79[2];
											v538 = v77[v79[1429 - (85 + 1341)]];
											v77[v539 + (1 - 0)] = v538;
											v537 = 3;
										end
										if ((1590 <= 1927) and (v537 == (8 - 5))) then
											v77[v539] = v538[v79[376 - (45 + 327)]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v77[v79[3 - 1]] = v79[3];
											v537 = 506 - (444 + 58);
										end
									end
								else
									local v540 = 0;
									local v541;
									local v542;
									local v543;
									local v544;
									local v545;
									while true do
										if (v540 == (1 + 1)) then
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v545 = v79[2];
											v544 = v77[v79[2 + 1]];
											v540 = 8 - 5;
										end
										if (v540 == (1740 - (64 + 1668))) then
											v79 = v67[v71];
											do
												return;
											end
											break;
										end
										if (v540 == (1976 - (1227 + 746))) then
											v77[v545 + (2 - 1)] = v544;
											v77[v545] = v544[v79[4]];
											v71 = v71 + 1;
											v79 = v67[v71];
											v540 = 4;
										end
										if ((3513 == 3513) and ((6 - 2) == v540)) then
											v77[v79[496 - (415 + 79)]] = v79[1 + 2];
											v71 = v71 + (492 - (142 + 349));
											v79 = v67[v71];
											v545 = v79[2];
											v540 = 5;
										end
										if ((v540 == (3 + 3)) or (816 >= 4296)) then
											v71 = v71 + 1;
											v79 = v67[v71];
											v545 = v79[2 - 0];
											v77[v545] = v77[v545](v13(v77, v545 + 1, v72));
											v540 = 4 + 3;
										end
										if (v540 == (4 + 1)) then
											v542, v543 = v70(v77[v545](v13(v77, v545 + (2 - 1), v79[1867 - (1710 + 154)])));
											v72 = (v543 + v545) - (319 - (200 + 118));
											v541 = 0;
											for v2262 = v545, v72 do
												v541 = v541 + 1 + 0;
												v77[v2262] = v542[v541];
											end
											v540 = 10 - 4;
										end
										if (v540 == (1 - 0)) then
											v77[v79[2 + 0]] = v60[v79[3 + 0]];
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v77[v79[2]] = v60[v79[1 + 2]];
											v540 = 4 - 2;
										end
										if ((2363 >= 145) and (v540 == (1250 - (363 + 887)))) then
											v541 = nil;
											v542, v543 = nil;
											v544 = nil;
											v545 = nil;
											v540 = 1 - 0;
										end
										if (v540 == (33 - 26)) then
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v77[v79[2]]();
											v71 = v71 + 1;
											v540 = 18 - 10;
										end
									end
								end
							elseif (v80 <= 71) then
								if (v80 > (48 + 22)) then
									local v546 = v79[1666 - (674 + 990)];
									v77[v546] = v77[v546](v13(v77, v546 + 1 + 0, v79[2 + 1]));
								else
									local v548 = 0;
									local v549;
									local v550;
									local v551;
									local v552;
									local v553;
									while true do
										if (v548 == (6 - 2)) then
											v77[v79[1057 - (507 + 548)]] = v79[840 - (289 + 548)];
											v71 = v71 + (1819 - (821 + 997));
											v79 = v67[v71];
											v553 = v79[257 - (195 + 60)];
											v548 = 2 + 3;
										end
										if (v548 == (1509 - (251 + 1250))) then
											v79 = v67[v71];
											do
												return;
											end
											break;
										end
										if (v548 == 3) then
											v77[v553 + (2 - 1)] = v552;
											v77[v553] = v552[v79[4]];
											v71 = v71 + 1 + 0;
											v79 = v67[v71];
											v548 = 1036 - (809 + 223);
										end
										if ((8 - 2) == v548) then
											v71 = v71 + (2 - 1);
											v79 = v67[v71];
											v553 = v79[6 - 4];
											v77[v553] = v77[v553](v13(v77, v553 + 1, v72));
											v548 = 6 + 1;
										end
										if ((1769 <= 3966) and (v548 == (4 + 3))) then
											v71 = v71 + (618 - (14 + 603));
											v79 = v67[v71];
											v77[v79[2]]();
											v71 = v71 + (130 - (118 + 11));
											v548 = 2 + 6;
										end
										if (v548 == (5 + 0)) then
											v550, v551 = v70(v77[v553](v13(v77, v553 + (2 - 1), v79[3])));
											v72 = (v551 + v553) - (950 - (551 + 398));
											v549 = 0 + 0;
											for v2265 = v553, v72 do
												v549 = v549 + 1 + 0;
												v77[v2265] = v550[v549];
											end
											v548 = 5 + 1;
										end
										if ((v548 == (0 - 0)) or (4750 < 3501)) then
											v549 = nil;
											v550, v551 = nil;
											v552 = nil;
											v553 = nil;
											v548 = 2 - 1;
										end
										if ((668 == 668) and (v548 == (1 + 1))) then
											v71 = v71 + (3 - 2);
											v79 = v67[v71];
											v553 = v79[1 + 1];
											v552 = v77[v79[3]];
											v548 = 92 - (40 + 49);
										end
										if ((3125 <= 4049) and (v548 == (3 - 2))) then
											v77[v79[492 - (99 + 391)]] = v60[v79[3 + 0]];
											v71 = v71 + (4 - 3);
											v79 = v67[v71];
											v77[v79[4 - 2]] = v60[v79[3 + 0]];
											v548 = 5 - 3;
										end
									end
								end
							elseif (v80 > (1676 - (1032 + 572))) then
								local v554;
								local v555;
								local v556;
								local v557;
								v77[v79[419 - (203 + 214)]] = v77[v79[3]][v79[4]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[1819 - (568 + 1249)]] = v59[v79[3 + 0]];
								v71 = v71 + (2 - 1);
								v79 = v67[v71];
								v557 = v79[7 - 5];
								v556 = v77[v79[1309 - (913 + 393)]];
								v77[v557 + (2 - 1)] = v556;
								v77[v557] = v556[v79[4]];
								v71 = v71 + (1 - 0);
								v79 = v67[v71];
								v77[v79[412 - (269 + 141)]] = v77[v79[6 - 3]][v79[1985 - (362 + 1619)]];
								v71 = v71 + (1626 - (950 + 675));
								v79 = v67[v71];
								v557 = v79[1 + 1];
								v555 = {v77[v557](v13(v77, v557 + (1288 - (485 + 802)), v79[562 - (432 + 127)]))};
								v554 = 1073 - (1065 + 8);
								for v967 = v557, v79[3 + 1] do
									v554 = v554 + (1602 - (635 + 966));
									v77[v967] = v555[v554];
								end
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[44 - (5 + 37)]] = v77[v79[7 - 4]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[1 + 1]] = v77[v79[4 - 1]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[1 + 1]] = v79[5 - 2];
								v71 = v71 + (3 - 2);
								v79 = v67[v71];
								v71 = v79[5 - 2];
							else
								v77[v79[4 - 2]] = v59[v79[3]];
							end
						elseif ((1114 <= 2915) and (v80 <= 77)) then
							if ((1648 < 3315) and (v80 <= 75)) then
								if ((v80 > (54 + 20)) or (4960 <= 1420)) then
									local v578 = v79[531 - (318 + 211)];
									do
										return v13(v77, v578, v578 + v79[3]);
									end
								else
									local v579;
									local v580;
									v580 = v79[9 - 7];
									v77[v580](v77[v580 + (1588 - (963 + 624))]);
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[848 - (518 + 328)]] = v77[v79[6 - 3]][v79[4]];
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v580 = v79[319 - (301 + 16)];
									v579 = v77[v79[3]];
									v77[v580 + 1] = v579;
									v77[v580] = v579[v79[11 - 7]];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v580 = v79[5 - 3];
									v77[v580] = v77[v580](v77[v580 + 1 + 0]);
									v71 = v71 + 1;
									v79 = v67[v71];
									v580 = v79[2 + 0];
									v579 = v77[v79[3]];
									v77[v580 + (1 - 0)] = v579;
									v77[v580] = v579[v79[3 + 1]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[6 - 4]] = v79[1 + 2];
									v71 = v71 + (1020 - (829 + 190));
									v79 = v67[v71];
									v580 = v79[7 - 5];
									v77[v580] = v77[v580](v13(v77, v580 + (1 - 0), v79[3 - 0]));
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v580 = v79[1 + 1];
									v579 = v77[v79[1 + 2]];
									v77[v580 + (2 - 1)] = v579;
									v77[v580] = v579[v79[4]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[2]] = v79[3];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[615 - (520 + 93)]] = {};
								end
							elseif (v80 == 76) then
								local v604 = 276 - (259 + 17);
								local v605;
								local v606;
								while true do
									if (v604 == (1 + 0)) then
										v77[v605 + 1 + 0] = v606;
										v77[v605] = v606[v79[13 - 9]];
										break;
									end
									if (v604 == (591 - (396 + 195))) then
										v605 = v79[5 - 3];
										v606 = v77[v79[3]];
										v604 = 1762 - (440 + 1321);
									end
								end
							elseif (v79[2] < v79[1833 - (1059 + 770)]) then
								v71 = v79[3];
							else
								v71 = v71 + (4 - 3);
							end
						elseif (v80 <= (624 - (424 + 121))) then
							if (v80 == (15 + 63)) then
								local v607;
								v607 = v79[1349 - (641 + 706)];
								v77[v607] = v77[v607]();
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[442 - (249 + 191)]][v79[13 - 10]] = v77[v79[2 + 2]];
								v71 = v71 + (3 - 2);
								v79 = v67[v71];
								v77[v79[429 - (183 + 244)]] = v60[v79[1 + 2]];
								v71 = v71 + (731 - (434 + 296));
								v79 = v67[v71];
								v607 = v79[5 - 3];
								v77[v607] = v77[v607]();
								v71 = v71 + (513 - (169 + 343));
								v79 = v67[v71];
								v77[v79[2 + 0]][v79[4 - 1]] = v79[11 - 7];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[2]] = v79[8 - 5];
							else
								local v620 = 1123 - (651 + 472);
								local v621;
								while true do
									if (v620 == (0 + 0)) then
										v621 = v79[1 + 1];
										v77[v621](v13(v77, v621 + 1, v79[3 - 0]));
										break;
									end
								end
							end
						elseif (v80 > (563 - (397 + 86))) then
							local v622;
							local v623;
							v77[v79[878 - (423 + 453)]][v79[1 + 2]] = v79[4];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[2 + 0]][v79[3 + 0]] = v79[4 + 0];
							v71 = v71 + (1191 - (50 + 1140));
							v79 = v67[v71];
							v77[v79[2 + 0]][v79[3]] = v79[4];
							v71 = v71 + 1;
							v79 = v67[v71];
							v623 = v79[2 + 0];
							v77[v623] = v77[v623](v13(v77, v623 + 1 + 0, v79[3 - 0]));
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[598 - (157 + 439)]] = v60[v79[4 - 1]];
							v71 = v71 + (3 - 2);
							v79 = v67[v71];
							v623 = v79[2];
							v77[v623] = v77[v623]();
							v71 = v71 + 1;
							v79 = v67[v71];
							v77[v79[2]] = v79[8 - 5];
							v71 = v71 + (919 - (782 + 136));
							v79 = v67[v71];
							v77[v79[2]] = v79[858 - (112 + 743)];
							v71 = v71 + (1172 - (1026 + 145));
							v79 = v67[v71];
							v77[v79[1 + 1]] = v60[v79[721 - (493 + 225)]];
							v71 = v71 + 1;
							v79 = v67[v71];
							v623 = v79[7 - 5];
							v622 = v77[v79[2 + 1]];
							v77[v623 + 1] = v622;
							v77[v623] = v622[v79[10 - 6]];
						else
							local v644 = 0 + 0;
							local v645;
							local v646;
							while true do
								if (v644 == (8 - 5)) then
									v77[v79[1 + 1]] = v60[v79[4 - 1]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[1597 - (210 + 1385)]] = v60[v79[1692 - (1201 + 488)]];
									v644 = 3 + 1;
								end
								if ((8 - 3) == v644) then
									v79 = v67[v71];
									v77[v79[2]] = v77[v79[3]][v79[6 - 2]];
									v71 = v71 + (586 - (352 + 233));
									v79 = v67[v71];
									v644 = 14 - 8;
								end
								if (v644 == (2 + 0)) then
									v79 = v67[v71];
									v77[v79[5 - 3]]();
									v71 = v71 + (575 - (489 + 85));
									v79 = v67[v71];
									v644 = 1504 - (277 + 1224);
								end
								if (v644 == (1494 - (663 + 830))) then
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[4 - 2]] = v77[v79[878 - (461 + 414)]];
									v71 = v71 + 1;
									v644 = 1 + 1;
								end
								if ((v644 == (0 + 0)) or (3565 >= 4050)) then
									v645 = nil;
									v646 = nil;
									v646 = v79[2];
									v77[v646](v13(v77, v646 + 1 + 0, v79[3 + 0]));
									v644 = 251 - (172 + 78);
								end
								if (v644 == 4) then
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v77[v79[1 + 1]] = v77[v79[3 - 0]][v79[2 + 2]];
									v71 = v71 + 1 + 0;
									v644 = 8 - 3;
								end
								if ((3416 >= 187) and (v644 == 7)) then
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v646 = v79[1 + 1];
									v645 = v77[v79[2 + 1]];
									v644 = 8;
								end
								if ((1962 >= 1695) and (v644 == (3 + 5))) then
									v77[v646 + (3 - 2)] = v645;
									v77[v646] = v645[v79[9 - 5]];
									break;
								end
								if (v644 == (2 + 4)) then
									v77[v79[2]][v79[2 + 1]] = v77[v79[451 - (133 + 314)]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[215 - (199 + 14)]] = v60[v79[10 - 7]];
									v644 = 1556 - (647 + 902);
								end
							end
						end
					elseif ((v80 <= (267 - 178)) or (4961 == 3582)) then
						if (v80 <= (318 - (85 + 148))) then
							if (v80 <= 83) then
								if ((924 == 924) and (v80 > (1371 - (426 + 863)))) then
									local v647 = v79[2];
									v77[v647] = v77[v647](v77[v647 + 1]);
								else
									local v649;
									local v650, v651;
									local v652;
									local v653;
									v653 = v79[9 - 7];
									v77[v653] = v77[v653]();
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[1656 - (873 + 781)]][v79[3 - 0]] = v77[v79[10 - 6]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[1 + 1]] = v60[v79[11 - 8]];
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v77[v79[5 - 3]] = v60[v79[1950 - (414 + 1533)]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v653 = v79[2 + 0];
									v652 = v77[v79[558 - (443 + 112)]];
									v77[v653 + (1480 - (888 + 591))] = v652;
									v77[v653] = v652[v79[4]];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v77[v79[1 + 1]] = v79[3];
									v71 = v71 + (3 - 2);
									v79 = v67[v71];
									v653 = v79[1 + 1];
									v650, v651 = v70(v77[v653](v13(v77, v653 + 1 + 0, v79[1 + 2])));
									v72 = (v651 + v653) - 1;
									v649 = 0 - 0;
									for v970 = v653, v72 do
										local v971 = 0 - 0;
										while true do
											if ((v971 == (1678 - (136 + 1542))) or (3153 < 1109)) then
												v649 = v649 + (3 - 2);
												v77[v970] = v650[v649];
												break;
											end
										end
									end
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v653 = v79[2 - 0];
									v77[v653] = v77[v653](v13(v77, v653 + 1, v72));
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[488 - (68 + 418)]]();
									v71 = v71 + 1;
									v79 = v67[v71];
									v71 = v79[3];
								end
							elseif (v80 == 84) then
								local v670 = 0 - 0;
								local v671;
								local v672;
								local v673;
								local v674;
								local v675;
								while true do
									if ((4301 == 4301) and ((9 - 4) == v670)) then
										v71 = v71 + 1;
										v79 = v67[v71];
										v675 = v79[2 + 0];
										v672, v673 = v70(v77[v675](v13(v77, v675 + 1, v79[1095 - (770 + 322)])));
										v670 = 1 + 5;
									end
									if (v670 == (2 + 4)) then
										v72 = (v673 + v675) - (1 + 0);
										v671 = 0 - 0;
										for v2270 = v675, v72 do
											local v2271 = 0 - 0;
											while true do
												if ((4494 >= 3295) and (v2271 == (0 - 0))) then
													v671 = v671 + (3 - 2);
													v77[v2270] = v672[v671];
													break;
												end
											end
										end
										v71 = v71 + 1 + 0;
										v670 = 9 - 2;
									end
									if ((3502 > 1144) and (v670 == (2 + 2))) then
										v77[v79[2 + 0]] = v79[3 + 0];
										v71 = v71 + (3 - 2);
										v79 = v67[v71];
										v77[v79[2 - 0]] = v79[2 + 1] ~= (0 - 0);
										v670 = 16 - 11;
									end
									if (v670 == (1 + 1)) then
										v71 = v71 + (4 - 3);
										v79 = v67[v71];
										v675 = v79[2];
										v674 = v77[v79[834 - (762 + 69)]];
										v670 = 3;
									end
									if ((v670 == (3 - 2)) or (1276 == 3449)) then
										v77[v79[2]] = v60[v79[3 + 0]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[2]] = v60[v79[2 + 1]];
										v670 = 4 - 2;
									end
									if ((v670 == 3) or (1761 == 1260)) then
										v77[v675 + 1] = v674;
										v77[v675] = v674[v79[2 + 2]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v670 = 15 - 11;
									end
									if (7 == v670) then
										v79 = v67[v71];
										v675 = v79[159 - (8 + 149)];
										v77[v675] = v77[v675](v13(v77, v675 + (1321 - (1199 + 121)), v72));
										v71 = v71 + (1 - 0);
										v670 = 17 - 9;
									end
									if (v670 == (0 + 0)) then
										v671 = nil;
										v672, v673 = nil;
										v674 = nil;
										v675 = nil;
										v670 = 1;
									end
									if (v670 == (31 - 22)) then
										do
											return;
										end
										break;
									end
									if ((18 - 10) == v670) then
										v79 = v67[v71];
										v77[v79[2]]();
										v71 = v71 + 1;
										v79 = v67[v71];
										v670 = 8 + 1;
									end
								end
							else
								local v676 = 1807 - (518 + 1289);
								local v677;
								while true do
									if ((v676 == (0 - 0)) or (264 >= 1458)) then
										v677 = v79[1 + 1];
										v77[v677] = v77[v677](v13(v77, v677 + (1 - 0), v72));
										break;
									end
								end
							end
						elseif ((v80 <= (65 + 22)) or (2661 <= 2372)) then
							if ((1042 < 4804) and (v80 == 86)) then
								local v678 = 469 - (304 + 165);
								local v679;
								while true do
									if ((v678 == (8 + 0)) or (3035 <= 721)) then
										v71 = v71 + (161 - (54 + 106));
										v79 = v67[v71];
										v77[v79[2]][v79[1972 - (1618 + 351)]] = v79[3 + 1];
										v678 = 1025 - (10 + 1006);
									end
									if (0 == v678) then
										v679 = nil;
										v77[v79[1 + 1]] = v60[v79[1 + 2]];
										v71 = v71 + (3 - 2);
										v678 = 1034 - (912 + 121);
									end
									if (v678 == 5) then
										v79 = v67[v71];
										v679 = v79[2];
										v77[v679] = v77[v679](v13(v77, v679 + 1 + 0, v79[1292 - (1140 + 149)]));
										v678 = 4 + 2;
									end
									if (v678 == 1) then
										v79 = v67[v71];
										v77[v79[2]] = v77[v79[3]][v79[4]];
										v71 = v71 + (1 - 0);
										v678 = 1 + 1;
									end
									if ((v678 == (13 - 9)) or (3438 >= 3570)) then
										v79 = v67[v71];
										v77[v79[2]] = v79[3];
										v71 = v71 + (1 - 0);
										v678 = 1 + 4;
									end
									if (v678 == 7) then
										v71 = v71 + (3 - 2);
										v79 = v67[v71];
										v77[v79[188 - (165 + 21)]] = v59[v79[114 - (61 + 50)]];
										v678 = 4 + 4;
									end
									if ((28 - 22) == v678) then
										v71 = v71 + (1 - 0);
										v79 = v67[v71];
										v77[v79[2]][v79[2 + 1]] = v77[v79[1464 - (1295 + 165)]];
										v678 = 2 + 5;
									end
									if (v678 == (4 + 5)) then
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[1399 - (819 + 578)]] = v79[1405 - (331 + 1071)];
										break;
									end
									if ((3772 > 2036) and ((746 - (588 + 155)) == v678)) then
										v79 = v67[v71];
										v77[v79[1284 - (546 + 736)]] = v79[1940 - (1834 + 103)];
										v71 = v71 + 1 + 0;
										v678 = 4;
									end
									if (v678 == (5 - 3)) then
										v79 = v67[v71];
										v77[v79[1768 - (1536 + 230)]] = v79[3];
										v71 = v71 + 1;
										v678 = 3;
									end
								end
							else
								local v680 = 491 - (128 + 363);
								local v681;
								local v682;
								local v683;
								local v684;
								local v685;
								while true do
									if (1 == v680) then
										v77[v685] = v77[v685]();
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[2]][v79[7 - 4]] = v77[v79[2 + 2]];
										v71 = v71 + 1;
										v680 = 2 - 0;
									end
									if ((v680 == (0 - 0)) or (1868 > 3567)) then
										v681 = nil;
										v682, v683 = nil;
										v684 = nil;
										v685 = nil;
										v685 = v79[4 - 2];
										v680 = 1;
									end
									if ((2942 > 596) and (v680 == (5 + 2))) then
										v71 = v71 + (1010 - (615 + 394));
										v79 = v67[v71];
										v77[v79[2]]();
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v680 = 8 + 0;
									end
									if ((24 - 16) == v680) then
										v71 = v79[13 - 10];
										break;
									end
									if (v680 == 5) then
										v79 = v67[v71];
										v685 = v79[653 - (59 + 592)];
										v682, v683 = v70(v77[v685](v13(v77, v685 + 1, v79[3])));
										v72 = (v683 + v685) - 1;
										v681 = 0 - 0;
										v680 = 10 - 4;
									end
									if ((v680 == (3 + 0)) or (3840 <= 3392)) then
										v71 = v71 + (172 - (70 + 101));
										v79 = v67[v71];
										v685 = v79[2];
										v684 = v77[v79[3]];
										v77[v685 + (2 - 1)] = v684;
										v680 = 3 + 1;
									end
									if ((v680 == 2) or (3798 <= 276)) then
										v79 = v67[v71];
										v77[v79[2]] = v60[v79[7 - 4]];
										v71 = v71 + (242 - (123 + 118));
										v79 = v67[v71];
										v77[v79[1 + 1]] = v60[v79[1 + 2]];
										v680 = 1402 - (653 + 746);
									end
									if ((2400 >= 1045) and (v680 == 4)) then
										v77[v685] = v684[v79[7 - 3]];
										v71 = v71 + (1 - 0);
										v79 = v67[v71];
										v77[v79[5 - 3]] = v79[3];
										v71 = v71 + 1 + 0;
										v680 = 4 + 1;
									end
									if (v680 == (6 + 0)) then
										for v2272 = v685, v72 do
											v681 = v681 + 1;
											v77[v2272] = v682[v681];
										end
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v685 = v79[1 + 1];
										v77[v685] = v77[v685](v13(v77, v685 + (2 - 1), v72));
										v680 = 7 + 0;
									end
								end
							end
						elseif (v80 == (162 - 74)) then
							local v686 = v79[1236 - (885 + 349)];
							local v687 = {v77[v686](v77[v686 + 1])};
							local v688 = 0 - 0;
							for v972 = v686, v79[11 - 7] do
								local v973 = 968 - (915 + 53);
								while true do
									if (v973 == (801 - (768 + 33))) then
										v688 = v688 + (3 - 2);
										v77[v972] = v687[v688];
										break;
									end
								end
							end
						else
							local v689 = 0 - 0;
							local v690;
							local v691;
							local v692;
							local v693;
							local v694;
							while true do
								if ((v689 == (331 - (287 + 41))) or (2681 >= 2695)) then
									v71 = v71 + 1;
									v79 = v67[v71];
									v694 = v79[2];
									v693 = v77[v79[850 - (638 + 209)]];
									v77[v694 + 1 + 0] = v693;
									v689 = 1690 - (96 + 1590);
								end
								if (v689 == (1674 - (741 + 931))) then
									v79 = v67[v71];
									v77[v79[2]] = v60[v79[2 + 1]];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v77[v79[9 - 7]] = v60[v79[3]];
									v689 = 2 + 1;
								end
								if ((v689 == (3 + 2)) or (2750 > 4092)) then
									v79 = v67[v71];
									v694 = v79[2];
									v691, v692 = v70(v77[v694](v13(v77, v694 + 1 + 0, v79[3])));
									v72 = (v692 + v694) - 1;
									v690 = 0 - 0;
									v689 = 2 + 4;
								end
								if (v689 == (3 + 3)) then
									for v2277 = v694, v72 do
										v690 = v690 + 1;
										v77[v2277] = v691[v690];
									end
									v71 = v71 + (4 - 3);
									v79 = v67[v71];
									v694 = v79[2 + 0];
									v77[v694] = v77[v694](v13(v77, v694 + (495 - (64 + 430)), v72));
									v689 = 7;
								end
								if ((2119 > 126) and (v689 == (1 + 0))) then
									v77[v694] = v77[v694]();
									v71 = v71 + (364 - (106 + 257));
									v79 = v67[v71];
									v77[v79[2]][v79[3 + 0]] = v77[v79[725 - (496 + 225)]];
									v71 = v71 + (1 - 0);
									v689 = 2;
								end
								if (v689 == 8) then
									v71 = v79[14 - 11];
									break;
								end
								if ((v689 == (1662 - (256 + 1402))) or (3679 < 445)) then
									v77[v694] = v693[v79[1903 - (30 + 1869)]];
									v71 = v71 + (1370 - (213 + 1156));
									v79 = v67[v71];
									v77[v79[190 - (96 + 92)]] = v79[1 + 2];
									v71 = v71 + (900 - (142 + 757));
									v689 = 5 + 0;
								end
								if (v689 == (3 + 4)) then
									v71 = v71 + (80 - (32 + 47));
									v79 = v67[v71];
									v77[v79[1979 - (1053 + 924)]]();
									v71 = v71 + 1;
									v79 = v67[v71];
									v689 = 8 + 0;
								end
								if (v689 == (0 - 0)) then
									v690 = nil;
									v691, v692 = nil;
									v693 = nil;
									v694 = nil;
									v694 = v79[1650 - (685 + 963)];
									v689 = 1 - 0;
								end
							end
						end
					elseif (v80 <= (144 - 51)) then
						if ((v80 <= 91) or (1459 < 845)) then
							if (v80 > 90) then
								local v695;
								v695 = v79[2];
								v77[v695] = v77[v695]();
								v71 = v71 + (1710 - (541 + 1168));
								v79 = v67[v71];
								v77[v79[1599 - (645 + 952)]] = v60[v79[841 - (669 + 169)]];
								v71 = v71 + (3 - 2);
								v79 = v67[v71];
								v77[v79[2]] = v77[v79[6 - 3]][v79[2 + 2]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[2]] = v79[768 - (181 + 584)];
								v71 = v71 + (1396 - (665 + 730));
								v79 = v67[v71];
								v77[v79[5 - 3]] = v79[3];
								v71 = v71 + (1 - 0);
								v79 = v67[v71];
								v77[v79[1352 - (540 + 810)]] = v79[11 - 8];
								v71 = v71 + 1;
								v79 = v67[v71];
								v695 = v79[5 - 3];
								v77[v695] = v77[v695](v13(v77, v695 + 1 + 0, v79[3]));
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[205 - (166 + 37)]][v79[1884 - (22 + 1859)]] = v77[v79[1776 - (843 + 929)]];
								v71 = v71 + (263 - (30 + 232));
								v79 = v67[v71];
								v77[v79[5 - 3]] = v60[v79[780 - (55 + 722)]];
								v71 = v71 + (1 - 0);
								v79 = v67[v71];
								v695 = v79[1677 - (78 + 1597)];
								v77[v695] = v77[v695]();
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[1 + 1]][v79[3 + 0]] = v77[v79[4 + 0]];
								v71 = v71 + (550 - (305 + 244));
								v79 = v67[v71];
								v77[v79[2 + 0]] = v79[108 - (95 + 10)];
							else
								local v717;
								local v718;
								v718 = v79[2 + 0];
								v717 = v77[v79[3]];
								v77[v718 + (3 - 2)] = v717;
								v77[v718] = v717[v79[4 - 0]];
								v71 = v71 + (763 - (592 + 170));
								v79 = v67[v71];
								v77[v79[2]] = v79[10 - 7];
								v71 = v71 + (2 - 1);
								v79 = v67[v71];
								v718 = v79[1 + 1];
								v77[v718](v13(v77, v718 + 1 + 0, v79[6 - 3]));
								v71 = v71 + 1;
								v79 = v67[v71];
								v718 = v79[1 + 1];
								v717 = v77[v79[5 - 2]];
								v77[v718 + (508 - (353 + 154))] = v717;
								v77[v718] = v717[v79[5 - 1]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2 - 0]] = v79[3 + 0];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v718 = v79[2];
								v77[v718](v13(v77, v718 + 1, v79[2 + 1]));
								v71 = v71 + (1 - 0);
								v79 = v67[v71];
								v718 = v79[3 - 1];
								v717 = v77[v79[3]];
								v77[v718 + (2 - 1)] = v717;
								v77[v718] = v717[v79[90 - (7 + 79)]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]] = v77[v79[2 + 1]][v79[4]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v718 = v79[183 - (24 + 157)];
								v77[v718](v13(v77, v718 + (1 - 0), v79[6 - 3]));
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v718 = v79[4 - 2];
								v717 = v77[v79[3]];
								v77[v718 + (381 - (262 + 118))] = v717;
								v77[v718] = v717[v79[1087 - (1038 + 45)]];
							end
						elseif ((3609 > 2522) and (v80 == (198 - 106))) then
							local v742;
							local v743;
							v743 = v79[2];
							v77[v743] = v77[v743](v13(v77, v743 + (231 - (19 + 211)), v79[3]));
							v71 = v71 + 1;
							v79 = v67[v71];
							v77[v79[115 - (88 + 25)]] = v60[v79[3]];
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v743 = v79[1 + 1];
							v742 = v77[v79[3 + 0]];
							v77[v743 + (1037 - (1007 + 29))] = v742;
							v77[v743] = v742[v79[2 + 2]];
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v77[v79[9 - 7]] = v79[1 + 2];
							v71 = v71 + (812 - (340 + 471));
							v79 = v67[v71];
							v743 = v79[4 - 2];
							v77[v743] = v77[v743](v13(v77, v743 + (590 - (276 + 313)), v79[6 - 3]));
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[1 + 1]] = v60[v79[1 + 2]];
							v71 = v71 + (1973 - (495 + 1477));
							v79 = v67[v71];
							v743 = v79[5 - 3];
							v742 = v77[v79[2 + 1]];
							v77[v743 + (404 - (342 + 61))] = v742;
							v77[v743] = v742[v79[2 + 2]];
							v71 = v71 + (166 - (4 + 161));
							v79 = v67[v71];
							v77[v79[2 + 0]] = v79[9 - 6];
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v743 = v79[2];
							v77[v743] = v77[v743](v13(v77, v743 + (498 - (322 + 175)), v79[566 - (173 + 390)]));
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[2]] = v77[v79[317 - (203 + 111)]][v79[4]];
						elseif (v77[v79[2]] == v77[v79[1 + 3]]) then
							v71 = v71 + 1 + 0;
						else
							v71 = v79[3];
						end
					elseif (v80 <= 95) then
						if (v80 > (274 - 180)) then
							local v765 = 0 + 0;
							local v766;
							local v767;
							while true do
								if (v765 == (712 - (57 + 649))) then
									v767 = v79[386 - (328 + 56)];
									v77[v767] = v77[v767](v77[v767 + 1 + 0]);
									v71 = v71 + (513 - (433 + 79));
									v765 = 1 + 6;
								end
								if ((5 + 0) == v765) then
									v77[v767] = v766[v79[4]];
									v71 = v71 + (3 - 2);
									v79 = v67[v71];
									v765 = 6;
								end
								if (v765 == (0 - 0)) then
									v766 = nil;
									v767 = nil;
									v77[v79[2 + 0]] = v79[3 + 0];
									v765 = 1037 - (562 + 474);
								end
								if (v765 == (4 - 2)) then
									v77[v767](v77[v767 + (1 - 0)]);
									v71 = v71 + (906 - (76 + 829));
									v79 = v67[v71];
									v765 = 1676 - (1506 + 167);
								end
								if (v765 == 3) then
									v77[v79[2]] = v60[v79[5 - 2]];
									v71 = v71 + (267 - (58 + 208));
									v79 = v67[v71];
									v765 = 4;
								end
								if (v765 == 1) then
									v71 = v71 + 1;
									v79 = v67[v71];
									v767 = v79[2];
									v765 = 2 + 0;
								end
								if (((5 + 2) == v765) or (781 <= 678)) then
									v79 = v67[v71];
									if ((4705 >= 2895) and v77[v79[2 + 0]]) then
										v71 = v71 + (3 - 2);
									else
										v71 = v79[340 - (258 + 79)];
									end
									break;
								end
								if (((1 + 3) == v765) or (1834 >= 3417)) then
									v767 = v79[3 - 1];
									v766 = v77[v79[1473 - (1219 + 251)]];
									v77[v767 + 1] = v766;
									v765 = 1676 - (1231 + 440);
								end
							end
						else
							local v768;
							local v769;
							v769 = v79[60 - (34 + 24)];
							v77[v769](v13(v77, v769 + 1 + 0, v79[5 - 2]));
							v71 = v71 + 1;
							v79 = v67[v71];
							v77[v79[1 + 1]] = v77[v79[8 - 5]][v79[12 - 8]];
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v769 = v79[2];
							v768 = v77[v79[3]];
							v77[v769 + 1] = v768;
							v77[v769] = v768[v79[13 - 9]];
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v77[v79[2]] = v77[v79[1592 - (877 + 712)]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v769 = v79[756 - (242 + 512)];
							v77[v769](v13(v77, v769 + (1 - 0), v79[630 - (92 + 535)]));
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v77[v79[3 - 1]] = v77[v79[1 + 2]][v79[14 - 10]];
							v71 = v71 + 1;
							v79 = v67[v71];
							v769 = v79[2 + 0];
							v768 = v77[v79[3 + 0]];
							v77[v769 + 1] = v768;
							v77[v769] = v768[v79[1 + 3]];
							v71 = v71 + (1 - 0);
							v79 = v67[v71];
							v77[v79[2 - 0]] = v77[v79[1788 - (1476 + 309)]];
							v71 = v71 + 1;
							v79 = v67[v71];
							v769 = v79[1286 - (299 + 985)];
							v77[v769](v13(v77, v769 + 1, v79[1 + 2]));
							v71 = v71 + (3 - 2);
							v79 = v67[v71];
							v77[v79[95 - (86 + 7)]] = v60[v79[12 - 9]];
						end
					elseif (v80 <= 96) then
						local v792 = 0 + 0;
						local v793;
						local v794;
						while true do
							if ((538 < 1701) and (v792 == (880 - (672 + 208)))) then
								v793 = nil;
								v794 = nil;
								v77[v79[1 + 1]][v79[135 - (14 + 118)]] = v77[v79[449 - (339 + 106)]];
								v71 = v71 + 1;
								v792 = 1 + 0;
							end
							if (v792 == 6) then
								v77[v79[2 + 0]][v79[1398 - (440 + 955)]] = v79[4 + 0];
								v71 = v71 + (1 - 0);
								v79 = v67[v71];
								v77[v79[1 + 1]][v79[7 - 4]] = v79[3 + 1];
								break;
							end
							if (v792 == (358 - (260 + 93))) then
								v79 = v67[v71];
								v77[v79[2 + 0]][v79[3]] = v79[8 - 4];
								v71 = v71 + 1;
								v79 = v67[v71];
								v792 = 10 - 4;
							end
							if (v792 == (1978 - (1181 + 793))) then
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[309 - (105 + 202)]] = {};
								v71 = v71 + 1 + 0;
								v792 = 815 - (352 + 458);
							end
							if (v792 == (11 - 8)) then
								v77[v794] = v793[v79[4]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[4 - 2]] = v79[3 + 0];
								v792 = 11 - 7;
							end
							if (v792 == (950 - (438 + 511))) then
								v79 = v67[v71];
								v794 = v79[1385 - (1262 + 121)];
								v77[v794](v13(v77, v794 + (1069 - (728 + 340)), v79[1793 - (816 + 974)]));
								v71 = v71 + 1;
								v792 = 2;
							end
							if (v792 == 2) then
								v79 = v67[v71];
								v794 = v79[5 - 3];
								v793 = v77[v79[10 - 7]];
								v77[v794 + 1] = v793;
								v792 = 3;
							end
						end
					elseif (v80 > (436 - (163 + 176))) then
						v77[v79[2]] = v77[v79[8 - 5]][v77[v79[4]]];
					else
						local v1023;
						local v1024;
						local v1025;
						v1025 = v79[2];
						v77[v1025](v13(v77, v1025 + (4 - 3), v79[1 + 2]));
						v71 = v71 + 1;
						v79 = v67[v71];
						v1025 = v79[1812 - (1564 + 246)];
						v1024 = v77[v79[348 - (124 + 221)]];
						v77[v1025 + 1] = v1024;
						v77[v1025] = v1024[v79[3 + 1]];
						v71 = v71 + (452 - (115 + 336));
						v79 = v67[v71];
						v1025 = v79[3 - 1];
						v77[v1025](v77[v1025 + 1]);
						v71 = v71 + 1 + 0;
						v79 = v67[v71];
						v1025 = v79[48 - (45 + 1)];
						v1024 = v77[v79[3]];
						v77[v1025 + 1] = v1024;
						v77[v1025] = v1024[v79[4]];
						v71 = v71 + 1 + 0;
						v79 = v67[v71];
						v77[v79[1992 - (1282 + 708)]] = v79[1215 - (583 + 629)];
						v71 = v71 + 1 + 0;
						v79 = v67[v71];
						v77[v79[2]] = v60[v79[7 - 4]];
						v71 = v71 + 1 + 0;
						v79 = v67[v71];
						v77[v79[1172 - (943 + 227)]] = v77[v79[2 + 1]][v79[1635 - (1539 + 92)]];
						v71 = v71 + 1;
						v79 = v67[v71];
						v1024 = v79[1949 - (706 + 1240)];
						v1023 = v77[v1024];
						for v1912 = v1024 + 1, v79[262 - (81 + 177)] do
							v1023 = v1023 .. v77[v1912];
						end
						v77[v79[5 - 3]] = v1023;
						v71 = v71 + 1;
						v79 = v67[v71];
						v1025 = v79[259 - (212 + 45)];
						v77[v1025](v13(v77, v1025 + (3 - 2), v79[3]));
						v71 = v71 + (1947 - (708 + 1238));
						v79 = v67[v71];
						v1025 = v79[1 + 1];
						v1024 = v77[v79[1 + 2]];
						v77[v1025 + 1] = v1024;
						v77[v1025] = v1024[v79[1671 - (586 + 1081)]];
					end
				elseif (v80 <= (626 - (348 + 163))) then
					if (v80 <= (96 + 10)) then
						if (v80 <= (382 - (215 + 65))) then
							if (v80 <= (254 - 154)) then
								if (v80 > (1958 - (1541 + 318))) then
									local v795;
									v795 = v79[2 + 0];
									v77[v795] = v77[v795]();
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[2 + 0]][v79[1753 - (1036 + 714)]] = v79[3 + 1];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[1282 - (883 + 397)]] = v60[v79[3]];
									v71 = v71 + (591 - (563 + 27));
									v79 = v67[v71];
									v795 = v79[7 - 5];
									v77[v795] = v77[v795]();
									v71 = v71 + (1987 - (1369 + 617));
									v79 = v67[v71];
									v77[v79[1489 - (85 + 1402)]] = v60[v79[2 + 1]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[4 - 2]] = v77[v79[3]][v79[407 - (274 + 129)]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[219 - (12 + 205)]] = v79[3 + 0];
									v71 = v71 + (3 - 2);
									v79 = v67[v71];
									v77[v79[2 + 0]] = v79[387 - (27 + 357)];
									v71 = v71 + (481 - (91 + 389));
									v79 = v67[v71];
									v77[v79[299 - (90 + 207)]] = v79[3];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v795 = v79[863 - (706 + 155)];
									v77[v795] = v77[v795](v13(v77, v795 + (1796 - (730 + 1065)), v79[1566 - (1339 + 224)]));
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[2 + 0]][v79[3]] = v77[v79[5 - 1]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[845 - (268 + 575)]] = v79[3];
									v71 = v71 + (1295 - (919 + 375));
									v79 = v67[v71];
									v71 = v79[3];
								else
									v77[v79[5 - 3]] = v79[974 - (180 + 791)] ~= 0;
								end
							elseif (v80 > (1906 - (323 + 1482))) then
								local v819 = 0;
								local v820;
								local v821;
								while true do
									if (v819 == (1925 - (1177 + 741))) then
										v821 = v79[1 + 1];
										v820 = v77[v79[3]];
										v77[v821 + (3 - 2)] = v820;
										v77[v821] = v820[v79[2 + 2]];
										v71 = v71 + (1 - 0);
										v819 = 1 + 7;
									end
									if ((v819 == (109 - (96 + 13))) or (1571 >= 3089)) then
										v820 = nil;
										v821 = nil;
										v77[v79[1923 - (962 + 959)]][v79[3]] = v77[v79[9 - 5]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v819 = 1352 - (461 + 890);
									end
									if ((3095 >= 2083) and (v819 == (5 + 1))) then
										v79 = v67[v71];
										v821 = v79[7 - 5];
										v77[v821](v13(v77, v821 + (244 - (19 + 224)), v79[3 + 0]));
										v71 = v71 + (199 - (37 + 161));
										v79 = v67[v71];
										v819 = 7;
									end
									if ((3277 >= 1776) and (v819 == 5)) then
										v77[v821] = v820[v79[2 + 2]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[2 + 0]] = v79[64 - (60 + 1)];
										v71 = v71 + (924 - (826 + 97));
										v819 = 6 + 0;
									end
									if (v819 == 2) then
										v820 = v77[v79[10 - 7]];
										v77[v821 + (1 - 0)] = v820;
										v77[v821] = v820[v79[689 - (375 + 310)]];
										v71 = v71 + (2000 - (1864 + 135));
										v79 = v67[v71];
										v819 = 7 - 4;
									end
									if ((1 + 0) == v819) then
										v821 = v79[1 + 1];
										v77[v821](v13(v77, v821 + (2 - 1), v79[3]));
										v71 = v71 + (1132 - (314 + 817));
										v79 = v67[v71];
										v821 = v79[2];
										v819 = 2 + 0;
									end
									if (v819 == (218 - (32 + 182))) then
										v71 = v71 + 1;
										v79 = v67[v71];
										v821 = v79[2 + 0];
										v820 = v77[v79[10 - 7]];
										v77[v821 + (66 - (39 + 26))] = v820;
										v819 = 5;
									end
									if (v819 == (147 - (54 + 90))) then
										v77[v79[200 - (45 + 153)]] = v79[2 + 1];
										v71 = v71 + (553 - (457 + 95));
										v79 = v67[v71];
										v821 = v79[2 + 0];
										v77[v821](v13(v77, v821 + (1 - 0), v79[6 - 3]));
										v819 = 14 - 10;
									end
									if (v819 == (4 + 4)) then
										v79 = v67[v71];
										v77[v79[6 - 4]] = v79[8 - 5];
										break;
									end
								end
							else
								local v822 = 748 - (485 + 263);
								local v823;
								local v824;
								while true do
									if ((1346 <= 1697) and (v822 == (710 - (575 + 132)))) then
										v77[v824] = v823[v79[865 - (750 + 111)]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v824 = v79[1012 - (445 + 565)];
										v77[v824] = v77[v824](v77[v824 + 1]);
										v822 = 4 + 0;
									end
									if (v822 == 6) then
										v79 = v67[v71];
										v824 = v79[1 + 1];
										v77[v824] = v77[v824](v13(v77, v824 + (1 - 0), v79[2 + 1]));
										v71 = v71 + (311 - (189 + 121));
										v79 = v67[v71];
										v822 = 2 + 5;
									end
									if ((1348 - (634 + 713)) == v822) then
										v824 = v79[540 - (493 + 45)];
										v77[v824](v13(v77, v824 + (969 - (493 + 475)), v79[3]));
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[786 - (158 + 626)]] = v77[v79[3]][v79[2 + 2]];
										v822 = 2 - 0;
									end
									if ((v822 == 5) or (3976 <= 1502)) then
										v77[v824] = v823[v79[1 + 3]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v77[v79[1 + 1]] = v79[1094 - (1035 + 56)];
										v71 = v71 + 1;
										v822 = 965 - (114 + 845);
									end
									if (v822 == (1 + 1)) then
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v824 = v79[2];
										v823 = v77[v79[3 + 0]];
										v77[v824 + (1050 - (179 + 870))] = v823;
										v822 = 3 - 0;
									end
									if ((878 - (827 + 51)) == v822) then
										v823 = nil;
										v824 = nil;
										v77[v79[5 - 3]][v79[3]] = v77[v79[4]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v822 = 474 - (95 + 378);
									end
									if (v822 == (1 + 3)) then
										v71 = v71 + (1 - 0);
										v79 = v67[v71];
										v824 = v79[2];
										v823 = v77[v79[3 + 0]];
										v77[v824 + (1012 - (334 + 677))] = v823;
										v822 = 18 - 13;
									end
									if (v822 == (1064 - (1049 + 7))) then
										v79 = v67[v71];
										v77[v79[8 - 6]] = {};
										break;
									end
									if ((2866 >= 231) and (v822 == 7)) then
										v824 = v79[2];
										v823 = v77[v79[5 - 2]];
										v77[v824 + 1] = v823;
										v77[v824] = v823[v79[2 + 2]];
										v71 = v71 + (2 - 1);
										v822 = 15 - 7;
									end
								end
							end
						elseif (v80 <= (47 + 57)) then
							if ((4589 > 612) and (v80 > (1523 - (1004 + 416)))) then
								local v825 = 1957 - (1621 + 336);
								local v826;
								while true do
									if (v825 == (1939 - (337 + 1602))) then
										v826 = v79[2];
										v77[v826](v77[v826 + (1518 - (1014 + 503))]);
										break;
									end
								end
							else
								local v827 = 1015 - (446 + 569);
								local v828;
								local v829;
								local v830;
								while true do
									if (v827 == 2) then
										for v2280 = 1, v79[4] do
											local v2281 = 0 + 0;
											local v2282;
											while true do
												if (v2281 == (0 - 0)) then
													v71 = v71 + 1 + 0;
													v2282 = v67[v71];
													v2281 = 1 - 0;
												end
												if (v2281 == (1 + 0)) then
													if (v2282[506 - (223 + 282)] == 50) then
														v830[v2280 - (1 + 0)] = {v77,v2282[4 - 1]};
													else
														v830[v2280 - (671 - (623 + 47))] = {v59,v2282[3 + 0]};
													end
													v76[#v76 + (1802 - (1070 + 731))] = v830;
													break;
												end
											end
										end
										v77[v79[2 + 0]] = v29(v828, v829, v60);
										break;
									end
									if (v827 == (1405 - (1257 + 147))) then
										v830 = {};
										v829 = v10({}, {__index=function(v2283, v2284)
											local v2285 = v830[v2284];
											return v2285[1 + 0][v2285[2]];
										end,__newindex=function(v2286, v2287, v2288)
											local v2289 = v830[v2287];
											v2289[1 - 0][v2289[135 - (98 + 35)]] = v2288;
										end});
										v827 = 2;
									end
									if (v827 == (0 + 0)) then
										v828 = v68[v79[3]];
										v829 = nil;
										v827 = 1;
									end
								end
							end
						elseif (v80 > (371 - 266)) then
							local v831 = v79[6 - 4];
							v77[v831] = v77[v831]();
						else
							local v833 = 0 + 0;
							local v834;
							local v835;
							while true do
								if (v833 == 4) then
									v77[v79[2 + 0]] = {};
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[559 - (395 + 162)]] = v77[v79[3 + 0]][v79[1945 - (816 + 1125)]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v833 = 5;
								end
								if (0 == v833) then
									v834 = nil;
									v835 = nil;
									v77[v79[2 - 0]] = v79[3] ~= 0;
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[2]] = v60[v79[1151 - (701 + 447)]];
									v833 = 1 - 0;
								end
								if (v833 == (1 - 0)) then
									v71 = v71 + (1342 - (391 + 950));
									v79 = v67[v71];
									v77[v79[5 - 3]] = v77[v79[3]][v79[4]];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v77[v79[4 - 2]] = v79[3 + 0];
									v833 = 2;
								end
								if ((2 + 0) == v833) then
									v71 = v71 + (3 - 2);
									v79 = v67[v71];
									v77[v79[1524 - (251 + 1271)]] = v79[3];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[2 + 0]] = v79[7 - 4];
									v833 = 7 - 4;
								end
								if ((429 <= 629) and (v833 == (8 - 3))) then
									v835 = v79[1261 - (1147 + 112)];
									v834 = v77[v79[1 + 2]];
									v77[v835 + 1] = v834;
									v77[v835] = v834[v79[7 - 3]];
									break;
								end
								if (v833 == 3) then
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v835 = v79[699 - (335 + 362)];
									v77[v835] = v77[v835](v13(v77, v835 + 1, v79[3 + 0]));
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v833 = 4;
								end
							end
						end
					elseif ((4648 > 2774) and (v80 <= (300 - 190))) then
						if ((529 == 529) and (v80 <= (401 - 293))) then
							if ((v80 == (520 - 413)) or (1905 == 4025)) then
								local v836 = 0 - 0;
								local v837;
								local v838;
								while true do
									if ((83 < 2864) and ((571 - (237 + 329)) == v836)) then
										v77[v838](v13(v77, v838 + (3 - 2), v79[3]));
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v838 = v79[2 + 0];
										v837 = v77[v79[1127 - (408 + 716)]];
										v836 = 6;
									end
									if ((1428 < 4728) and (v836 == (3 - 2))) then
										v77[v79[823 - (344 + 477)]][v79[1 + 2]] = v79[1765 - (1188 + 573)];
										v71 = v71 + (2 - 1);
										v79 = v67[v71];
										v77[v79[2 + 0]][v79[9 - 6]] = v79[6 - 2];
										v71 = v71 + 1;
										v836 = 2;
									end
									if (v836 == (14 - 8)) then
										v77[v838 + 1] = v837;
										v77[v838] = v837[v79[1533 - (508 + 1021)]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v838 = v79[1168 - (228 + 938)];
										v836 = 692 - (332 + 353);
									end
									if ((0 - 0) == v836) then
										v837 = nil;
										v838 = nil;
										v77[v79[2]][v79[7 - 4]] = v77[v79[4]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v836 = 1 + 0;
									end
									if (v836 == (11 - 8)) then
										v838 = v79[425 - (18 + 405)];
										v837 = v77[v79[2 + 1]];
										v77[v838 + 1] = v837;
										v77[v838] = v837[v79[4]];
										v71 = v71 + 1;
										v836 = 4;
									end
									if ((v836 == (3 + 1)) or (4175 <= 2713)) then
										v79 = v67[v71];
										v77[v79[2 - 0]] = v79[3];
										v71 = v71 + (979 - (194 + 784));
										v79 = v67[v71];
										v838 = v79[1772 - (694 + 1076)];
										v836 = 1909 - (122 + 1782);
									end
									if (v836 == (7 + 0)) then
										v77[v838](v77[v838 + 1 + 0]);
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v838 = v79[2 + 0];
										v837 = v77[v79[3]];
										v836 = 23 - 15;
									end
									if (v836 == (2 + 0)) then
										v79 = v67[v71];
										v838 = v79[1972 - (214 + 1756)];
										v77[v838] = v77[v838](v13(v77, v838 + (4 - 3), v79[1 + 2]));
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v836 = 588 - (217 + 368);
									end
									if ((23 - 15) == v836) then
										v77[v838 + 1 + 0] = v837;
										v77[v838] = v837[v79[4]];
										break;
									end
								end
							else
								local v839;
								local v840;
								v77[v79[2 + 0]][v79[1 + 2]] = v77[v79[4]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]][v79[892 - (844 + 45)]] = v79[288 - (242 + 42)];
								v71 = v71 + (1 - 0);
								v79 = v67[v71];
								v77[v79[4 - 2]][v79[3]] = v79[4];
								v71 = v71 + (1201 - (132 + 1068));
								v79 = v67[v71];
								v840 = v79[2 - 0];
								v77[v840] = v77[v840](v13(v77, v840 + (1624 - (214 + 1409)), v79[3 + 0]));
								v71 = v71 + (1635 - (497 + 1137));
								v79 = v67[v71];
								v840 = v79[2];
								v839 = v77[v79[943 - (9 + 931)]];
								v77[v840 + (290 - (181 + 108))] = v839;
								v77[v840] = v839[v79[4]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[2]] = {};
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]][v79[7 - 4]] = v79[4];
							end
						elseif ((v80 == (323 - 214)) or (4061 < 3423)) then
							v77[v79[1 + 1]] = v60[v79[2 + 1]];
						elseif ((3379 > 2901) and not v77[v79[478 - (296 + 180)]]) then
							v71 = v71 + (1404 - (1183 + 220));
						else
							v71 = v79[1268 - (1037 + 228)];
						end
					elseif ((v80 <= (180 - 68)) or (2976 < 1937)) then
						if (v80 > (319 - 208)) then
							local v858 = 0 - 0;
							local v859;
							local v860;
							local v861;
							local v862;
							while true do
								if (v858 == (734 - (527 + 207))) then
									v859 = v79[529 - (187 + 340)];
									v860, v861 = v70(v77[v859](v13(v77, v859 + (1871 - (1298 + 572)), v72)));
									v858 = 2 - 1;
								end
								if ((v858 == (172 - (144 + 26))) or (2985 == 2843)) then
									for v2291 = v859, v72 do
										local v2292 = 0 - 0;
										while true do
											if (v2292 == 0) then
												v862 = v862 + (2 - 1);
												v77[v2291] = v860[v862];
												break;
											end
										end
									end
									break;
								end
								if (v858 == (1 + 0)) then
									v72 = (v861 + v859) - 1;
									v862 = 0 - 0;
									v858 = 4 - 2;
								end
							end
						else
							local v863 = 0 - 0;
							local v864;
							local v865;
							while true do
								if (((2 + 1) == v863) or (2818 >= 3247)) then
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v865 = v79[2 + 0];
									v77[v865] = v77[v865](v13(v77, v865 + 1, v79[2 + 1]));
									v863 = 206 - (5 + 197);
								end
								if (v863 == (687 - (339 + 347))) then
									v79 = v67[v71];
									v865 = v79[4 - 2];
									v864 = v77[v79[10 - 7]];
									v77[v865 + (377 - (365 + 11))] = v864;
									v863 = 2 + 0;
								end
								if (v863 == 2) then
									v77[v865] = v864[v79[15 - 11]];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v77[v79[2]] = v79[927 - (837 + 87)];
									v863 = 3;
								end
								if ((13 - 5) == v863) then
									v71 = v71 + (1671 - (837 + 833));
									v79 = v67[v71];
									v77[v79[2]] = v77[v79[1 + 2]][v79[1391 - (356 + 1031)]];
									v71 = v71 + 1 + 0;
									v863 = 1655 - (73 + 1573);
								end
								if ((421 >= 252) and (v863 == (1392 - (1307 + 81)))) then
									v71 = v71 + (235 - (7 + 227));
									v79 = v67[v71];
									v77[v79[2 - 0]] = v60[v79[169 - (90 + 76)]];
									v71 = v71 + (3 - 2);
									v863 = 3 + 2;
								end
								if ((v863 == (6 + 1)) or (1823 > 4077)) then
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v865 = v79[7 - 5];
									v77[v865] = v77[v865](v13(v77, v865 + (261 - (197 + 63)), v79[3]));
									v863 = 2 + 6;
								end
								if (6 == v863) then
									v77[v865] = v864[v79[4]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[1 + 1]] = v79[2 + 1];
									v863 = 2 + 5;
								end
								if (v863 == (6 - 1)) then
									v79 = v67[v71];
									v865 = v79[1371 - (618 + 751)];
									v864 = v77[v79[3 + 0]];
									v77[v865 + (1911 - (206 + 1704))] = v864;
									v863 = 6;
								end
								if (v863 == (14 - 5)) then
									v79 = v67[v71];
									v77[v79[3 - 1]] = v60[v79[2 + 1]];
									break;
								end
								if (v863 == (1275 - (155 + 1120))) then
									v864 = nil;
									v865 = nil;
									v77[v79[2]] = v60[v79[1509 - (396 + 1110)]];
									v71 = v71 + (2 - 1);
									v863 = 1;
								end
							end
						end
					elseif (v80 <= (37 + 76)) then
						local v866;
						local v867;
						v867 = v79[2 + 0];
						v866 = v77[v79[3 + 0]];
						v77[v867 + (977 - (230 + 746))] = v866;
						v77[v867] = v866[v79[605 - (473 + 128)]];
						v71 = v71 + (49 - (39 + 9));
						v79 = v67[v71];
						v867 = v79[268 - (38 + 228)];
						v77[v867](v77[v867 + 1]);
						v71 = v71 + (1 - 0);
						v79 = v67[v71];
						v77[v79[475 - (106 + 367)]] = v60[v79[1 + 2]];
						v71 = v71 + (1863 - (354 + 1508));
						v79 = v67[v71];
						v77[v79[6 - 4]] = v79[3 + 0];
						v71 = v71 + 1;
						v79 = v67[v71];
						v867 = v79[2 + 0];
						v77[v867](v77[v867 + (1 - 0)]);
						v71 = v71 + 1;
						v79 = v67[v71];
						v77[v79[2]] = v79[3];
						v71 = v71 + (1245 - (334 + 910));
						v79 = v67[v71];
						v71 = v79[3];
					elseif (v80 > (1009 - (92 + 803))) then
						local v1051 = 0 + 0;
						local v1052;
						local v1053;
						local v1054;
						local v1055;
						local v1056;
						local v1057;
						while true do
							if ((4290 > 3567) and (v1051 == (1187 - (1035 + 146)))) then
								for v2384 = 617 - (230 + 386), #v76 do
									v1055 = v76[v2384];
									for v2405 = 0 + 0, #v1055 do
										local v2406 = 1510 - (353 + 1157);
										while true do
											if (v2406 == (1115 - (53 + 1061))) then
												v1052 = v1054[1637 - (1568 + 67)];
												if ((v1053 == v77) and (v1052 >= v1057)) then
													v1056[v1052] = v1053[v1052];
													v1054[1 + 0] = v1056;
												end
												break;
											end
											if (v2406 == (0 + 0)) then
												v1054 = v1055[v2405];
												v1053 = v1054[2 - 1];
												v2406 = 2 - 1;
											end
										end
									end
								end
								v71 = v71 + (2 - 1);
								v79 = v67[v71];
								v71 = v79[3 + 0];
								break;
							end
							if (v1051 == (1212 - (615 + 597))) then
								v1052 = nil;
								v1053 = nil;
								v1054 = nil;
								v1055 = nil;
								v1051 = 1 + 0;
							end
							if (v1051 == (2 - 0)) then
								v79 = v67[v71];
								v77[v79[2]][v79[3 + 0]] = v79[1 + 3];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v1051 = 1902 - (1056 + 843);
							end
							if ((1926 <= 4924) and ((1 - 0) == v1051)) then
								v1056 = nil;
								v1057 = nil;
								v77[v79[2 - 0]][v79[8 - 5]] = v77[v79[3 + 1]];
								v71 = v71 + (1977 - (286 + 1690));
								v1051 = 2;
							end
							if ((1432 == 1432) and (v1051 == (914 - (98 + 813)))) then
								v77[v79[2]][v79[3]] = v79[2 + 2];
								v71 = v71 + (2 - 1);
								v79 = v67[v71];
								v1057 = v79[2 + 0];
								v1051 = 4;
							end
							if (v1051 == (511 - (263 + 244))) then
								v77[v1057] = v77[v1057](v13(v77, v1057 + 1 + 0, v79[3]));
								v71 = v71 + (1688 - (1502 + 185));
								v79 = v67[v71];
								do
									return v77[v79[1 + 1]];
								end
								v1051 = 5;
							end
							if ((v1051 == (24 - 19)) or (3116 <= 554)) then
								v71 = v71 + 1;
								v79 = v67[v71];
								v1057 = v79[5 - 3];
								v1056 = {};
								v1051 = 1533 - (629 + 898);
							end
						end
					else
						local v1058 = 0 - 0;
						local v1059;
						local v1060;
						local v1061;
						local v1062;
						local v1063;
						while true do
							if (v1058 == (12 - 7)) then
								v71 = v71 + (366 - (12 + 353));
								v79 = v67[v71];
								v1063 = v79[2];
								v77[v1063] = v77[v1063]();
								v71 = v71 + (1912 - (1680 + 231));
								v1058 = 1 + 5;
							end
							if ((3575 >= 2306) and ((3 + 1) == v1058)) then
								for v2386 = v1063, v72 do
									v1059 = v1059 + (1150 - (212 + 937));
									v77[v2386] = v1060[v1059];
								end
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v1063 = v79[1064 - (111 + 951)];
								v77[v1063] = v77[v1063](v13(v77, v1063 + 1 + 0, v72));
								v1058 = 5;
							end
							if (v1058 == (35 - (18 + 9))) then
								v77[v1063] = v1062[v79[1 + 3]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]] = v79[3];
								break;
							end
							if (v1058 == (535 - (31 + 503))) then
								v71 = v71 + (1633 - (595 + 1037));
								v79 = v67[v71];
								v1063 = v79[1446 - (189 + 1255)];
								v1062 = v77[v79[2 + 1]];
								v77[v1063 + (1 - 0)] = v1062;
								v1058 = 1281 - (1170 + 109);
							end
							if ((v1058 == (1824 - (348 + 1469))) or (481 == 1636)) then
								v71 = v71 + (1290 - (1115 + 174));
								v79 = v67[v71];
								v1063 = v79[4 - 2];
								v1062 = v77[v79[1017 - (85 + 929)]];
								v77[v1063 + 1] = v1062;
								v1058 = 5 + 3;
							end
							if (v1058 == (1873 - (1151 + 716))) then
								v79 = v67[v71];
								v77[v79[1 + 1]] = v60[v79[3 + 0]];
								v71 = v71 + (1705 - (95 + 1609));
								v79 = v67[v71];
								v77[v79[6 - 4]] = v60[v79[3]];
								v1058 = 765 - (364 + 394);
							end
							if ((v1058 == (2 + 0)) or (1731 >= 2323)) then
								v77[v1063] = v1062[v79[2 + 2]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]] = v79[1 + 2];
								v71 = v71 + 1 + 0;
								v1058 = 2 + 1;
							end
							if ((1447 <= 2610) and (v1058 == (0 + 0))) then
								v1059 = nil;
								v1060, v1061 = nil;
								v1062 = nil;
								v1063 = nil;
								v77[v79[1 + 1]] = v60[v79[3 + 0]];
								v1058 = 1 + 0;
							end
							if (v1058 == (959 - (719 + 237))) then
								v79 = v67[v71];
								v1063 = v79[5 - 3];
								v1060, v1061 = v70(v77[v1063](v13(v77, v1063 + 1 + 0, v79[7 - 4])));
								v72 = (v1061 + v1063) - (2 - 1);
								v1059 = 0 - 0;
								v1058 = 1995 - (761 + 1230);
							end
						end
					end
				elseif (v80 <= (316 - (80 + 113))) then
					if ((2883 > 848) and (v80 <= 119)) then
						if ((3817 > 995) and (v80 <= (64 + 53))) then
							if ((v80 == (78 + 38)) or (1451 >= 3387)) then
								local v881 = 0 + 0;
								local v882;
								local v883;
								while true do
									if (v881 == (3 - 2)) then
										v79 = v67[v71];
										v883 = v79[1 + 1];
										v882 = v77[v79[1 + 2]];
										v77[v883 + (1244 - (965 + 278))] = v882;
										v881 = 1731 - (1391 + 338);
									end
									if (v881 == 11) then
										v77[v883](v13(v77, v883 + (2 - 1), v79[3 + 0]));
										v71 = v71 + 1;
										v79 = v67[v71];
										do
											return;
										end
										break;
									end
									if ((6 - 3) == v881) then
										v71 = v71 + 1;
										v79 = v67[v71];
										v883 = v79[1 + 1];
										v77[v883] = v77[v883](v13(v77, v883 + (1409 - (496 + 912)), v79[9 - 6]));
										v881 = 1 + 3;
									end
									if ((4973 >= 1280) and (v881 == (16 - 7))) then
										v79 = v67[v71];
										v77[v79[2]] = v79[3] ~= (1330 - (1190 + 140));
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v881 = 728 - (317 + 401);
									end
									if (v881 == (954 - (303 + 646))) then
										v77[v883 + (3 - 2)] = v882;
										v77[v883] = v882[v79[1736 - (1675 + 57)]];
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v881 = 15 - 9;
									end
									if ((1 + 3) == v881) then
										v71 = v71 + (978 - (338 + 639));
										v79 = v67[v71];
										v883 = v79[381 - (320 + 59)];
										v882 = v77[v79[2 + 1]];
										v881 = 5;
									end
									if ((v881 == 7) or (4656 <= 2182)) then
										v71 = v71 + (733 - (628 + 104));
										v79 = v67[v71];
										v883 = v79[2 - 0];
										v77[v883] = v77[v883]();
										v881 = 8;
									end
									if (v881 == 2) then
										v77[v883] = v882[v79[1895 - (439 + 1452)]];
										v71 = v71 + (1948 - (105 + 1842));
										v79 = v67[v71];
										v77[v79[9 - 7]] = v79[7 - 4];
										v881 = 14 - 11;
									end
									if ((v881 == 8) or (3859 < 3320)) then
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[3 - 1]] = v77[v79[2 + 1]][v79[1168 - (274 + 890)]];
										v71 = v71 + 1 + 0;
										v881 = 9;
									end
									if ((v881 == 6) or (3354 == 2971)) then
										v77[v79[2 + 0]] = v79[1 + 2] ~= (0 + 0);
										v71 = v71 + 1 + 0;
										v79 = v67[v71];
										v77[v79[2]] = v60[v79[3 - 0]];
										v881 = 826 - (731 + 88);
									end
									if ((v881 == (8 + 2)) or (2944 < 1180)) then
										v77[v79[2]] = v60[v79[3]];
										v71 = v71 + 1;
										v79 = v67[v71];
										v883 = v79[2 + 0];
										v881 = 3 + 8;
									end
									if (v881 == (0 - 0)) then
										v882 = nil;
										v883 = nil;
										v77[v79[5 - 3]] = v60[v79[8 - 5]];
										v71 = v71 + (1 - 0);
										v881 = 1 + 0;
									end
								end
							else
								v77[v79[1 + 1]] = not v77[v79[3]];
							end
						elseif (v80 == (22 + 96)) then
							local v885;
							local v886;
							v886 = v79[2 + 0];
							v77[v886](v13(v77, v886 + (159 - (139 + 19)), v79[1 + 2]));
							v71 = v71 + (1994 - (1687 + 306));
							v79 = v67[v71];
							v77[v79[7 - 5]] = v77[v79[1157 - (1018 + 136)]][v79[4]];
							v71 = v71 + 1;
							v79 = v67[v71];
							v886 = v79[1 + 1];
							v885 = v77[v79[3]];
							v77[v886 + 1] = v885;
							v77[v886] = v885[v79[17 - 13]];
							v71 = v71 + (816 - (117 + 698));
							v79 = v67[v71];
							v77[v79[2]] = v77[v79[484 - (305 + 176)]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							v886 = v79[2 + 0];
							v77[v886](v13(v77, v886 + (1 - 0), v79[3 + 0]));
							v71 = v71 + (1 - 0);
							v79 = v67[v71];
							v77[v79[4 - 2]] = v77[v79[3]][v79[6 - 2]];
							v71 = v71 + (261 - (159 + 101));
							v79 = v67[v71];
							v886 = v79[2];
							v885 = v77[v79[14 - 11]];
							v77[v886 + (3 - 2)] = v885;
							v77[v886] = v885[v79[4]];
							v71 = v71 + 1;
							v79 = v67[v71];
							v77[v79[1 + 1]] = v77[v79[9 - 6]];
							v71 = v71 + (1 - 0);
							v79 = v67[v71];
							v886 = v79[1 + 1];
							v77[v886](v13(v77, v886 + (267 - (112 + 154)), v79[3]));
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v77[v79[33 - (21 + 10)]] = v60[v79[1722 - (531 + 1188)]];
						else
							v77[v79[2 + 0]] = v77[v79[666 - (96 + 567)]][v79[5 - 1]];
							v71 = v71 + 1;
							v79 = v67[v71];
							v77[v79[1 + 1]] = v60[v79[10 - 7]];
							v71 = v71 + (1696 - (867 + 828));
							v79 = v67[v71];
							v77[v79[2]] = v77[v79[6 - 3]][v79[14 - 10]];
							v71 = v71 + (2 - 1);
							v79 = v67[v71];
							v77[v79[2]] = v77[v79[4 - 1]][v79[4]];
							v71 = v71 + 1 + 0;
							v79 = v67[v71];
							if (v77[v79[3 - 1]] == v77[v79[775 - (134 + 637)]]) then
								v71 = v71 + 1;
							else
								v71 = v79[1 + 2];
							end
						end
					elseif (v80 <= (1278 - (775 + 382))) then
						if (v80 > 120) then
							local v916 = 0;
							local v917;
							while true do
								if (v916 == (0 - 0)) then
									v917 = nil;
									v77[v79[609 - (45 + 562)]] = v77[v79[865 - (545 + 317)]] + v79[5 - 1];
									v71 = v71 + (1027 - (763 + 263));
									v79 = v67[v71];
									v916 = 1;
								end
								if (v916 == (1 + 3)) then
									v79 = v67[v71];
									v77[v79[1752 - (512 + 1238)]] = v77[v79[1597 - (272 + 1322)]] - v77[v79[7 - 3]];
									v71 = v71 + (1247 - (533 + 713));
									v79 = v67[v71];
									v916 = 33 - (14 + 14);
								end
								if (2 == v916) then
									v71 = v71 + 1;
									v79 = v67[v71];
									v917 = v79[827 - (499 + 326)];
									v77[v917] = v77[v917]();
									v916 = 4 - 1;
								end
								if (v916 == (425 - (104 + 320))) then
									v59[v79[2000 - (1929 + 68)]] = v77[v79[1325 - (1206 + 117)]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[1594 - (683 + 909)]] = v60[v79[9 - 6]];
									v916 = 3 - 1;
								end
								if ((2022 == 2022) and (v916 == (782 - (772 + 5)))) then
									if ((3488 > 1561) and (v79[1429 - (19 + 1408)] <= v77[v79[292 - (134 + 154)]])) then
										v71 = v71 + (1 - 0);
									else
										v71 = v79[9 - 6];
									end
									break;
								end
								if (v916 == (2 + 1)) then
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[2]] = v59[v79[3 + 0]];
									v71 = v71 + 1;
									v916 = 4;
								end
							end
						elseif (v77[v79[204 - (10 + 192)]] ~= v77[v79[4]]) then
							v71 = v71 + 1;
						else
							v71 = v79[3];
						end
					elseif (v80 == 122) then
						local v918 = 0;
						local v919;
						while true do
							if ((50 - (13 + 34)) == v918) then
								v71 = v71 + 1;
								v79 = v67[v71];
								v77[v79[2]][v79[1292 - (342 + 947)]] = v77[v79[16 - 12]];
								v71 = v71 + (1709 - (119 + 1589));
								v918 = 8 - 4;
							end
							if (v918 == (1 - 0)) then
								v77[v79[554 - (545 + 7)]] = v77[v79[8 - 5]][v79[2 + 2]];
								v71 = v71 + (1704 - (494 + 1209));
								v79 = v67[v71];
								v77[v79[2]] = v77[v79[7 - 4]][v79[4]];
								v918 = 1000 - (197 + 801);
							end
							if ((1799 <= 4264) and (v918 == (7 - 3))) then
								v79 = v67[v71];
								v71 = v79[14 - 11];
								break;
							end
							if (v918 == (954 - (919 + 35))) then
								v919 = nil;
								v77[v79[2]] = v77[v79[3 + 0]][v79[15 - 11]];
								v71 = v71 + 1;
								v79 = v67[v71];
								v918 = 468 - (369 + 98);
							end
							if (v918 == 2) then
								v71 = v71 + (1116 - (400 + 715));
								v79 = v67[v71];
								v919 = v79[1 + 1];
								v77[v919] = v77[v919](v13(v77, v919 + 1 + 0, v79[1328 - (744 + 581)]));
								v918 = 2 + 1;
							end
						end
					else
						local v920;
						local v921;
						v77[v79[1624 - (653 + 969)]] = v60[v79[5 - 2]];
						v71 = v71 + (1632 - (12 + 1619));
						v79 = v67[v71];
						v77[v79[2]] = v77[v79[3]][v79[4]];
						v71 = v71 + (164 - (103 + 60));
						v79 = v67[v71];
						v77[v79[9 - 7]] = v77[v79[12 - 9]][v79[19 - 15]];
						v71 = v71 + 1;
						v79 = v67[v71];
						v77[v79[1664 - (710 + 952)]][v79[1871 - (555 + 1313)]] = v77[v79[4 + 0]];
						v71 = v71 + 1 + 0;
						v79 = v67[v71];
						v77[v79[2 + 0]] = {};
						v71 = v71 + (1469 - (1261 + 207));
						v79 = v67[v71];
						v921 = v79[254 - (245 + 7)];
						v920 = v77[v79[3]];
						v77[v921 + (748 - (212 + 535))] = v920;
						v77[v921] = v920[v79[4]];
						v71 = v71 + (4 - 3);
						v79 = v67[v71];
						v77[v79[2]] = {};
						v71 = v71 + (1477 - (905 + 571));
						v79 = v67[v71];
						v77[v79[9 - 7]][v79[3 - 0]] = v79[15 - 11];
						v71 = v71 + 1 + 0;
						v79 = v67[v71];
						v77[v79[1465 - (522 + 941)]][v79[1514 - (292 + 1219)]] = v79[1116 - (787 + 325)];
						v71 = v71 + 1;
						v79 = v67[v71];
						v77[v79[5 - 3]][v79[3]] = v79[4];
					end
				elseif (v80 <= 127) then
					if (v80 <= 125) then
						if (v80 == 124) then
							local v943 = 0 + 0;
							local v944;
							while true do
								if (v943 == (2 - 1)) then
									v77[v79[536 - (424 + 110)]] = v60[v79[2 + 1]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[1 + 1]] = v77[v79[315 - (33 + 279)]][v79[1 + 3]];
									v71 = v71 + (1354 - (1338 + 15));
									v943 = 1425 - (528 + 895);
								end
								if (v943 == (4 + 3)) then
									v71 = v71 + (1925 - (1606 + 318));
									v79 = v67[v71];
									v77[v79[1821 - (298 + 1521)]] = v79[12 - 9];
									break;
								end
								if (v943 == (313 - (154 + 156))) then
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[7 - 5]] = v79[5 - 2];
									v71 = v71 + (1116 - (712 + 403));
									v79 = v67[v71];
									v943 = 4;
								end
								if ((454 - (168 + 282)) == v943) then
									v944 = v79[3 - 1];
									v77[v944] = v77[v944](v13(v77, v944 + 1 + 0, v79[1 + 2]));
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v77[v79[2]][v79[1454 - (1242 + 209)]] = v77[v79[683 - (20 + 659)]];
									v943 = 4 + 1;
								end
								if (v943 == (5 + 1)) then
									v944 = v79[2 - 0];
									v77[v944] = v77[v944]();
									v71 = v71 + 1;
									v79 = v67[v71];
									v77[v79[2]][v79[6 - 3]] = v77[v79[623 - (427 + 192)]];
									v943 = 15 - 8;
								end
								if (v943 == (0 + 0)) then
									v944 = nil;
									v944 = v79[2];
									v77[v944] = v77[v944]();
									v71 = v71 + (1948 - (1427 + 520));
									v79 = v67[v71];
									v943 = 1;
								end
								if ((2708 >= 2333) and (v943 == (3 + 2))) then
									v71 = v71 + (3 - 2);
									v79 = v67[v71];
									v77[v79[2 + 0]] = v60[v79[1235 - (712 + 520)]];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v943 = 6;
								end
								if (v943 == 2) then
									v79 = v67[v71];
									v77[v79[1348 - (565 + 781)]] = v79[568 - (35 + 530)];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v77[v79[6 - 4]] = v79[3];
									v943 = 1381 - (1330 + 48);
								end
							end
						else
							local v945 = 0;
							local v946;
							local v947;
							local v948;
							while true do
								if ((v945 == (5 + 2)) or (428 == 975)) then
									v71 = v79[1 + 2];
									break;
								end
								if ((5 == v945) or (3051 <= 2528)) then
									v948 = v79[3 - 1];
									v947 = {v77[v948](v77[v948 + (1170 - (854 + 315))])};
									v946 = 0 - 0;
									v945 = 6;
								end
								if (v945 == 4) then
									v77[v79[1 + 1]] = v59[v79[47 - (31 + 13)]];
									v71 = v71 + (1 - 0);
									v79 = v67[v71];
									v945 = 5;
								end
								if (v945 == 1) then
									v77[v79[2]] = not v77[v79[6 - 3]];
									v71 = v71 + 1 + 0;
									v79 = v67[v71];
									v945 = 565 - (281 + 282);
								end
								if ((v945 == 3) or (2640 == 1627)) then
									v77[v79[2]] = v60[v79[8 - 5]];
									v71 = v71 + 1;
									v79 = v67[v71];
									v945 = 3 + 1;
								end
								if (v945 == (951 - (216 + 733))) then
									v59[v79[3]] = v77[v79[1849 - (137 + 1710)]];
									v71 = v71 + (2 - 1);
									v79 = v67[v71];
									v945 = 541 - (100 + 438);
								end
								if (v945 == 6) then
									for v2293 = v948, v79[1369 - (205 + 1160)] do
										v946 = v946 + 1;
										v77[v2293] = v947[v946];
									end
									v71 = v71 + 1;
									v79 = v67[v71];
									v945 = 5 + 2;
								end
								if ((271 <= 3325) and (v945 == (0 + 0))) then
									v946 = nil;
									v947 = nil;
									v948 = nil;
									v945 = 1306 - (535 + 770);
								end
							end
						end
					elseif (v80 > (9 + 117)) then
						local v949 = 0 + 0;
						local v950;
						while true do
							if ((4223 > 2897) and (v949 == (1997 - (211 + 1783)))) then
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[1431 - (1236 + 193)]] = v79[3];
								break;
							end
							if ((v949 == 0) or (3336 < 2060)) then
								v950 = nil;
								v59[v79[913 - (793 + 117)]] = v77[v79[1894 - (1607 + 285)]];
								v71 = v71 + (861 - (747 + 113));
								v79 = v67[v71];
								v949 = 1;
							end
							if ((v949 == (1977 - (80 + 1896))) or (487 < 263)) then
								v77[v79[9 - 7]] = v60[v79[5 - 2]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v950 = v79[4 - 2];
								v949 = 2;
							end
							if (v949 == 2) then
								v77[v950] = v77[v950]();
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v59[v79[8 - 5]] = v77[v79[2 + 0]];
								v949 = 1 + 2;
							end
						end
					else
						local v951 = 0 - 0;
						local v952;
						local v953;
						while true do
							if ((v951 == (454 - (246 + 208))) or (1512 > 2516)) then
								v952 = v79[1894 - (614 + 1278)];
								v953 = {};
								v951 = 1 + 0;
							end
							if ((4494 >= 4005) and (v951 == (315 - (249 + 65)))) then
								for v2296 = 2 - 1, #v76 do
									local v2297 = 0;
									local v2298;
									while true do
										if (v2297 == 0) then
											v2298 = v76[v2296];
											for v2408 = 1275 - (726 + 549), #v2298 do
												local v2409 = v2298[v2408];
												local v2410 = v2409[1 + 0];
												local v2411 = v2409[1426 - (916 + 508)];
												if ((v2410 == v77) and (v2411 >= v952)) then
													v953[v2411] = v2410[v2411];
													v2409[3 - 2] = v953;
												end
											end
											break;
										end
									end
								end
								break;
							end
						end
					end
				elseif (v80 <= (83 + 46)) then
					if (v80 > (451 - (140 + 183))) then
						if (v77[v79[2]] or (3408 >= 3920)) then
							v71 = v71 + 1 + 0;
						else
							v71 = v79[567 - (297 + 267)];
						end
					else
						local v954 = 0 + 0;
						local v955;
						local v956;
						while true do
							if ((2045 < 3473) and (v954 == (348 - (37 + 305)))) then
								v77[v956] = v955[v79[1270 - (323 + 943)]];
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v954 = 8 - 1;
							end
							if (v954 == (1538 - (394 + 1141))) then
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v956 = v79[1 + 1];
								v954 = 1 + 3;
							end
							if (v954 == 0) then
								v955 = nil;
								v956 = nil;
								v77[v79[2 - 0]][v79[3 - 0]] = v77[v79[4 + 0]];
								v954 = 1 + 0;
							end
							if (4 == v954) then
								v77[v956] = v77[v956](v13(v77, v956 + (530 - (87 + 442)), v79[3]));
								v71 = v71 + (806 - (13 + 792));
								v79 = v67[v71];
								v954 = 5;
							end
							if (v954 == 1) then
								v71 = v71 + 1 + 0;
								v79 = v67[v71];
								v77[v79[1 + 1]][v79[3 + 0]] = v79[1869 - (1231 + 634)];
								v954 = 2;
							end
							if ((v954 == 5) or (855 >= 991)) then
								v956 = v79[1768 - (1362 + 404)];
								v955 = v77[v79[3]];
								v77[v956 + (2 - 1)] = v955;
								v954 = 5 + 1;
							end
							if (v954 == 2) then
								v71 = v71 + (2 - 1);
								v79 = v67[v71];
								v77[v79[2]][v79[1019 - (660 + 356)]] = v79[4];
								v954 = 4 - 1;
							end
							if (v954 == (8 + 0)) then
								v77[v79[1952 - (1111 + 839)]][v79[954 - (496 + 455)]] = v79[702 - (66 + 632)];
								break;
							end
							if (v954 == 7) then
								v77[v79[2 - 0]] = {};
								v71 = v71 + (1137 - (441 + 695));
								v79 = v67[v71];
								v954 = 21 - 13;
							end
						end
					end
				elseif ((1365 <= 4702) and (v80 <= (243 - 113))) then
					if (v77[v79[9 - 7]] == v79[3 + 1]) then
						v71 = v71 + (1839 - (286 + 1552));
					else
						v71 = v79[1280 - (1016 + 261)];
					end
				elseif (v80 == 131) then
					if (v79[1322 - (708 + 612)] == v79[4]) then
						v71 = v71 + (2 - 1);
					else
						v71 = v79[2 + 1];
					end
				else
					local v1068 = 379 - (113 + 266);
					local v1069;
					local v1070;
					local v1071;
					local v1072;
					while true do
						if (v1068 == (1170 - (979 + 191))) then
							v1069 = v79[2 - 0];
							v1070, v1071 = v70(v77[v1069](v13(v77, v1069 + (1736 - (339 + 1396)), v79[1 + 2])));
							v1068 = 1 + 0;
						end
						if (v1068 == (1 - 0)) then
							v72 = (v1071 + v1069) - (1 + 0);
							v1072 = 0 + 0;
							v1068 = 349 - (187 + 160);
						end
						if ((v1068 == (4 - 2)) or (219 >= 3457)) then
							for v2389 = v1069, v72 do
								local v2390 = 0 - 0;
								while true do
									if (v2390 == 0) then
										v1072 = v1072 + 1 + 0;
										v77[v2389] = v1070[v1072];
										break;
									end
								end
							end
							break;
						end
					end
				end
				v71 = v71 + 1;
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
return vv9(), ...);