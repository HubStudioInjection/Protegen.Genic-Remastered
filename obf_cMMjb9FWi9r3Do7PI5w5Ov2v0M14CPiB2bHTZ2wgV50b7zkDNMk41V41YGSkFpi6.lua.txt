--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0 = tonumber;
local v1 = string.byte;
local v2 = string.char;
local v3 = string.sub;
local v4 = string.gsub;
local v5 = string.rep;
local v6 = table.concat;
local v7 = table.insert;
local v8 = math.ldexp;
local v9 = getfenv or function()
	return _ENV;
end;
local v10 = setmetatable;
local v11 = pcall;
local v12 = select;
local v13 = unpack or table.unpack;
local v14 = tonumber;
local function v15(v16, v17, ...)
	local v18 = 1;
	local v19;
	v16 = v4(v3(v16, 5), "..", function(v30)
		if (v1(v30, 2) == 81) then
			local v85 = 0;
			while true do
				if (v85 == 0) then
					v19 = v0(v3(v30, 1, 1));
					return "";
				end
			end
		else
			local v86 = 0;
			local v87;
			while true do
				if (v86 == 0) then
					v87 = v2(v0(v30, 16));
					if v19 then
						local v122 = v5(v87, v19);
						v19 = nil;
						return v122;
					else
						return v87;
					end
					break;
				end
			end
		end
	end);
	local function v20(v31, v32, v33)
		if v33 then
			local v88 = (v31 / (2 ^ (v32 - ((1639 - (1523 + 114)) - 1)))) % ((5 - 3) ^ (((v33 - (1 - 0)) - (v32 - (2 - 1))) + (620 - (555 + 64))));
			return v88 - (v88 % (932 - (857 + 74)));
		else
			local v89 = 568 - ((1244 - (282 + 595)) + 181 + 20);
			local v90;
			while true do
				if (v89 == 0) then
					v90 = (929 - (214 + (1015 - 302))) ^ (v32 - 1);
					return (((v31 % (v90 + v90)) >= v90) and (1 + 0)) or (0 + 0);
				end
			end
		end
	end
	local function v21()
		local v34 = v1(v16, v18, v18);
		v18 = v18 + 1;
		return v34;
	end
	local function v22()
		local v35, v36 = v1(v16, v18, v18 + (1067 - (68 + 997)));
		v18 = v18 + (1272 - (226 + 1044));
		return (v36 * (1114 - 858)) + v35;
	end
	local function v23()
		local v37, v38, v39, v40 = v1(v16, v18, v18 + (120 - (32 + 85)));
		v18 = v18 + 4 + 0;
		return (v40 * ((6876982 - 3156549) + 13056783)) + (v39 * (66493 - (892 + 65))) + (v38 * (610 - 354)) + v37;
	end
	local function v24()
		local v41 = v23();
		local v42 = v23();
		local v43 = 1 - 0;
		local v44 = (v20(v42, 1, 370 - ((189 - 102) + 46 + 217)) * (2 ^ (212 - (67 + 113)))) + v41;
		local v45 = v20(v42, 16 + 5, 31);
		local v46 = ((v20(v42, 78 - 46) == 1) and -1) or (1 + 0);
		if (v45 == (0 - (0 - 0))) then
			if (v44 == (952 - (802 + 150))) then
				return v46 * ((0 + 0) - 0);
			else
				v45 = 1;
				v43 = 0 - 0;
			end
		elseif (v45 == (1490 + 557)) then
			return ((v44 == (997 - (915 + 82))) and (v46 * ((2 - (792 - (368 + 423))) / (0 + (0 - 0))))) or (v46 * NaN);
		end
		return v8(v46, v45 - (1344 - 321)) * (v43 + (v44 / ((1189 - ((1087 - (10 + 8)) + 118)) ^ (117 - 65))));
	end
	local function v25(v47)
		local v48;
		if not v47 then
			local v91 = 0;
			while true do
				if (v91 == ((0 - 0) - 0)) then
					v47 = v23();
					if (v47 == ((880 - (145 + 293)) - (416 + 26))) then
						return "";
					end
					break;
				end
			end
		end
		v48 = v3(v16, v18, (v18 + v47) - (3 - 2));
		v18 = v18 + v47;
		local v49 = {};
		for v65 = 1 + (430 - (44 + 386)), #v48 do
			v49[v65] = v2(v1(v3(v48, v65, v65)));
		end
		return v6(v49);
	end
	local v26 = v23;
	local function v27(...)
		return {...}, v12("#", ...);
	end
	local function v28()
		local v50 = (function()
			return function(v92, v93, v94, v95, v96, v97, v98, v99)
				local v92 = (function()
					return 0 + 0;
				end)();
				local v93 = (function()
					return;
				end)();
				local v95 = (function()
					return;
				end)();
				while true do
					if ((1850 - (1409 + 441)) ~= v92) then
					else
						local v116 = (function()
							return 396 - (115 + 281);
						end)();
						local v117 = (function()
							return;
						end)();
						while true do
							if (v116 == 0) then
								v117 = (function()
									return 718 - (15 + 703);
								end)();
								while true do
									if (v117 == 0) then
										v93 = (function()
											return v94();
										end)();
										v95 = (function()
											return nil;
										end)();
										v117 = (function()
											return 1 + 0;
										end)();
									end
									if (1 ~= v117) then
									else
										v92 = (function()
											return #"!";
										end)();
										break;
									end
								end
								break;
							end
						end
					end
					if (v92 ~= #"]") then
					else
						if (v93 == #"[") then
							v95 = (function()
								return v94() ~= (438 - (262 + 176));
							end)();
						elseif (v93 == (1723 - (345 + 1376))) then
							v95 = (function()
								return v96();
							end)();
						elseif (v93 == #"xnx") then
							v95 = (function()
								return v97();
							end)();
						end
						v98[v99] = (function()
							return v95;
						end)();
						break;
					end
				end
				return v92, v93, v94, v95, v96, v97, v98, v99;
			end;
		end)();
		local v51 = (function()
			return function(v100, v101, v102)
				local v103 = (function()
					return 688 - (198 + 490);
				end)();
				local v104 = (function()
					return;
				end)();
				while true do
					if (v103 == (0 - 0)) then
						v104 = (function()
							return 0 - 0;
						end)();
						while true do
							if (v104 ~= (1206 - (696 + 510))) then
							else
								local v123 = (function()
									return 0;
								end)();
								local v124 = (function()
									return;
								end)();
								while true do
									if ((0 - 0) == v123) then
										v124 = (function()
											return 1262 - (1091 + 171);
										end)();
										while true do
											if (v124 == (0 + 0)) then
												local v132 = (function()
													return 0 - 0;
												end)();
												while true do
													if (v132 ~= (0 - 0)) then
													else
														v100[v101 - #"["] = (function()
															return v102();
														end)();
														return v100, v101, v102;
													end
												end
											end
										end
										break;
									end
								end
							end
						end
						break;
					end
				end
			end;
		end)();
		local v52 = (function()
			return {};
		end)();
		local v53 = (function()
			return {};
		end)();
		local v54 = (function()
			return {};
		end)();
		local v55 = (function()
			return {v52,v53,nil,v54};
		end)();
		local v56 = (function()
			return v23();
		end)();
		local v57 = (function()
			return {};
		end)();
		for v67 = #" ", v56 do
			FlatIdent_10BCC, Type, v21, Cons, v24, v25, v57, v67 = (function()
				return v50(FlatIdent_10BCC, Type, v21, Cons, v24, v25, v57, v67);
			end)();
		end
		v55[#"asd"] = (function()
			return v21();
		end)();
		for v68 = #"!", v23() do
			local v69 = (function()
				return v21();
			end)();
			if (v20(v69, #">", #":") == (374 - (123 + 251))) then
				local v108 = (function()
					return 1665 - (970 + 695);
				end)();
				local v109 = (function()
					return;
				end)();
				local v110 = (function()
					return;
				end)();
				local v111 = (function()
					return;
				end)();
				while true do
					if (v108 == 0) then
						local v119 = (function()
							return 0 - 0;
						end)();
						local v120 = (function()
							return;
						end)();
						while true do
							if (v119 ~= (698 - (208 + 490))) then
							else
								v120 = (function()
									return 0 - 0;
								end)();
								while true do
									if (v120 == (0 + 0)) then
										v109 = (function()
											return v20(v69, 2, #"91(");
										end)();
										v110 = (function()
											return v20(v69, #"0313", 22 - 16);
										end)();
										v120 = (function()
											return 1 + 0;
										end)();
									end
									if (v120 ~= (837 - (660 + 176))) then
									else
										v108 = (function()
											return 1;
										end)();
										break;
									end
								end
								break;
							end
						end
					end
					if (v108 ~= (1 + 0)) then
					else
						v111 = (function()
							return {v22(),v22(),nil,nil};
						end)();
						if (v109 == (0 - 0)) then
							local v125 = (function()
								return 675 - (534 + 141);
							end)();
							local v126 = (function()
								return;
							end)();
							while true do
								if (v125 == (241 - (187 + 54))) then
									v126 = (function()
										return 0 + 0;
									end)();
									while true do
										if ((780 - (162 + 618)) ~= v126) then
										else
											v111[#"xxx"] = (function()
												return v22();
											end)();
											v111[#"asd1"] = (function()
												return v22();
											end)();
											break;
										end
									end
									break;
								end
							end
						elseif (v109 == #"<") then
							v111[#"asd"] = (function()
								return v23();
							end)();
						elseif (v109 == (2 + 0)) then
							v111[#"-19"] = (function()
								return v23() - ((2 + 0) ^ (33 - 17));
							end)();
						elseif (v109 ~= #"19(") then
						else
							local v135 = (function()
								return 0 + 0;
							end)();
							local v136 = (function()
								return;
							end)();
							while true do
								if (v135 == (0 + 0)) then
									v136 = (function()
										return 0;
									end)();
									while true do
										if (v136 ~= 0) then
										else
											v111[#"91("] = (function()
												return v23() - (2 ^ 16);
											end)();
											v111[#".dev"] = (function()
												return v22();
											end)();
											break;
										end
									end
									break;
								end
							end
						end
						v108 = (function()
							return 2;
						end)();
					end
					if (v108 == (6 - 3)) then
						if (v20(v110, #"91(", #"91(") == #",") then
							v111[#"0313"] = (function()
								return v57[v111[#"xnxx"]];
							end)();
						end
						v52[v68] = (function()
							return v111;
						end)();
						break;
					end
					if (v108 ~= (2 - 0)) then
					else
						if (v20(v110, #"{", #"~") == #",") then
							v111[2] = (function()
								return v57[v111[2]];
							end)();
						end
						if (v20(v110, 5 - 3, 2 + 0) == #"|") then
							v111[#"91("] = (function()
								return v57[v111[#"gha"]];
							end)();
						end
						v108 = (function()
							return 1003 - (451 + 549);
						end)();
					end
				end
			end
		end
		for v70 = #"\\", v23() do
			v53, v70, v28 = (function()
				return v51(v53, v70, v28);
			end)();
		end
		return v55;
	end
	local function v29(v59, v60, v61)
		local v62 = v59[1 + 0];
		local v63 = v59[2 - 0];
		local v64 = v59[4 - 1];
		return function(...)
			local v71 = v62;
			local v72 = v63;
			local v73 = v64;
			local v74 = v27;
			local v75 = 1385 - (746 + 638);
			local v76 = -(1 + 0);
			local v77 = {};
			local v78 = {...};
			local v79 = v12("#", ...) - (342 - (218 + 123));
			local v80 = {};
			local v81 = {};
			for v105 = 1581 - (1535 + 46), v79 do
				if ((v105 >= v73) or (1465 >= 4817)) then
					v77[v105 - v73] = v78[v105 + 1 + 0];
				else
					v81[v105] = v78[v105 + 1 + 0];
				end
			end
			local v82 = (v79 - v73) + (561 - (306 + 254));
			local v83;
			local v84;
			while true do
				v83 = v71[v75];
				v84 = v83[1 + 0];
				if (v84 <= ((287 - 159) - 62)) then
					if (v84 <= (1499 - (899 + 568))) then
						if ((v84 <= (10 + 5)) or (4386 <= 738)) then
							if (v84 <= (16 - 9)) then
								if (v84 <= 3) then
									if ((v84 <= 1) or (1277 <= 1020)) then
										if (v84 == (603 - (268 + 335))) then
											local v137;
											local v138, v139;
											local v140;
											local v141;
											v81[v83[292 - (60 + 230)]] = v61[v83[575 - (426 + 146)]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v141 = v83[2];
											v140 = v81[v83[1459 - (282 + 1174)]];
											v81[v141 + (812 - (569 + 242))] = v140;
											v81[v141] = v140[v83[4]];
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v81[v83[1 + 1]] = v83[3];
											v75 = v75 + (1025 - (706 + 118 + 200));
											v83 = v71[v75];
											v141 = v83[1253 - (721 + 530)];
											v138, v139 = v74(v81[v141](v13(v81, v141 + ((3219 - (1427 + 520)) - (945 + 326)), v83[(4 + 3) - (15 - 11)])));
											v76 = (v139 + v141) - (1 + 0 + 0);
											v137 = 700 - (271 + 429);
											for v1457 = v141, v76 do
												v137 = v137 + 1;
												v81[v1457] = v138[v137];
											end
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v141 = v83[2];
											v81[v141] = v81[v141](v13(v81, v141 + (1233 - (712 + 520)), v76));
											v75 = v75 + (1501 - (1408 + 92));
											v83 = v71[v75];
											v81[v83[2]]();
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[4 - 2]] = v61[v83[(2435 - (565 + 781)) - (461 + 625)]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[2]] = v61[v83[1291 - (993 + 295)]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v141 = v83[1173 - ((983 - (35 + 530)) + 753)];
											v140 = v81[v83[3]];
											v81[v141 + 1] = v140;
											v81[v141] = v140[v83[2 + 2]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[1 + 1]] = v83[3];
										elseif (v83[2] <= v81[v83[2 + 2]]) then
											v75 = v75 + 1;
										else
											v75 = v83[3];
										end
									elseif (v84 == (531 - (406 + 123))) then
										local v161;
										v81[v83[1771 - (1749 + 20)]] = v61[v83[1 + 2]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[(654 + 670) - (1249 + 73)]] = v81[v83[2 + (3 - 2)]][v83[1149 - ((1844 - (1330 + 48)) + 679)]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[5 - 3]] = v60[v83[1903 - (106 + 1259 + 535)]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[1 + 1]] = v81[v83[3]][v83[4]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[7 - 4]][v83[118 - (4 + 110)]];
										v75 = v75 + (585 - (57 + 527));
										v83 = v71[v75];
										v81[v83[2]] = v81[v83[(250 + 1180) - (41 + 1386)]] / v83[107 - (17 + 86)];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[(3 - 1) + 0]] = v60[v83[3]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[3 - 1]] = v81[v83[8 - 5]][v83[4]];
										v75 = v75 + (167 - (122 + (193 - 149)));
										v83 = v71[v75];
										v81[v83[2 - 0]] = v81[v83[3]][v83[4]];
										v75 = v75 + ((1172 - (854 + 315)) - 2);
										v83 = v71[v75];
										v161 = v83[2 + 0];
										v81[v161] = v81[v161](v13(v81, v161 + 1, v83[1 + 2]));
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[(214 - 147) - (30 + 35)]][v83[3]] = v81[v83[3 + 1]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[(378 + 881) - (1043 + 214)]] = v83[11 - 8];
										v75 = v75 + (1213 - (323 + 889));
										v83 = v71[v75];
										v75 = v83[7 - 4];
									else
										local v185 = 580 - (361 + 219);
										local v186;
										local v187;
										local v188;
										local v189;
										local v190;
										while true do
											if (v185 == (327 - (53 + 267))) then
												v76 = (v188 + v190) - (1 + 0);
												v186 = 413 - (15 + 398);
												for v2219 = v190, v76 do
													v186 = v186 + 1;
													v81[v2219] = v187[v186];
												end
												v75 = v75 + (983 - (18 + (1008 - (31 + 13))));
												v185 = 30 - (30 - 8);
											end
											if (v185 == (2 + 1)) then
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[2 + 0]] = v61[v83[853 - (20 + (1923 - 1093))]];
												v75 = v75 + 1;
												v185 = 4 + 0;
											end
											if (v185 == (135 - (116 + 10))) then
												v83 = v71[v75];
												v81[v83[1 + 1]]();
												v75 = v75 + (739 - (542 + 196));
												v83 = v71[v75];
												v185 = 21 - 11;
											end
											if ((2 + 3) == v185) then
												v81[v190] = v189[v83[3 + 1]];
												v75 = v75 + 1 + 0 + 0;
												v83 = v71[v75];
												v81[v83[2]] = v83[7 - 4];
												v185 = 15 - 9;
											end
											if ((v185 == 1) or (1642 >= 1771)) then
												v190 = v83[1553 - (1126 + 425)];
												v81[v190] = v81[v190]();
												v75 = v75 + (406 - (118 + 287));
												v83 = v71[v75];
												v185 = 7 - 5;
											end
											if ((1127 - (118 + 1003)) == v185) then
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v190 = v83[379 - (142 + (798 - (281 + 282)))];
												v187, v188 = v74(v81[v190](v13(v81, v190 + 1, v83[3])));
												v185 = 31 - 24;
											end
											if (v185 == (2 + 6)) then
												v83 = v71[v75];
												v190 = v83[979 - (553 + 424)];
												v81[v190] = v81[v190](v13(v81, v190 + (2 - 1), v76));
												v75 = v75 + (1 - 0);
												v185 = 8 + 1;
											end
											if ((2537 == 2537) and ((10 + 0) == v185)) then
												v75 = v83[3];
												break;
											end
											if ((v185 == (3 + 1)) or (3310 == 4522)) then
												v83 = v71[v75];
												v190 = v83[2];
												v189 = v81[v83[2 + 0 + 1]];
												v81[v190 + 1 + 0] = v189;
												v185 = 5;
											end
											if (v185 == (4 - (951 - (216 + 733)))) then
												v81[v83[5 - 3]][v83[(1853 - (137 + 1710)) - 3]] = v81[v83[(5 - 3) + 2]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v81[v83[2]] = v61[v83[14 - 11]];
												v185 = (1294 - (100 + 438)) - (239 + 514);
											end
											if (v185 == ((1365 - (205 + 1160)) + 0)) then
												v186 = nil;
												v187, v188 = nil;
												v189 = nil;
												v190 = nil;
												v185 = 1330 - (797 + 532);
											end
										end
									end
								elseif (v84 <= (4 + 1)) then
									if (v84 == (3 + 1)) then
										local v191;
										local v192;
										v81[v83[1 + 1]] = v61[v83[6 - 3]];
										v75 = v75 + (1203 - (373 + 829));
										v83 = v71[v75];
										v192 = v83[733 - (476 + 255)];
										v191 = v81[v83[(577 + 556) - (369 + 761)]];
										v81[v192 + 1 + 0] = v191;
										v81[v192] = v191[v83[1309 - (535 + 770)]];
										v75 = v75 + (1 - (0 + 0));
										v83 = v71[v75];
										v81[v83[3 - (1 + 0)]] = v83[241 - ((2058 - (211 + 1783)) + 174)];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v192 = v83[(1 + 1) - 0];
										v81[v192] = v81[v192](v13(v81, v192 + (1430 - (1236 + 193)), v83[339 - (144 + 192)]));
										v75 = v75 + (217 - (42 + 174));
										v83 = v71[v75];
										v192 = v83[2];
										v191 = v81[v83[3 + 0]];
										v81[v192 + 1 + 0] = v191;
										v81[v192] = v191[v83[2 + 2]];
										v75 = v75 + (1505 - (363 + 1141));
										v83 = v71[v75];
										v81[v83[1582 - (1183 + 397)]] = v83[8 - 5] ~= (0 + 0);
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2 + (910 - (793 + 117))]] = v61[v83[1978 - (1913 + 62)]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v192 = v83[5 - 3];
										v81[v192] = v81[v192]();
										v75 = v75 + ((3826 - (1607 + 285)) - (565 + 1368));
										v83 = v71[v75];
										v81[v83[7 - (865 - (747 + 113))]] = v81[v83[3]][v83[4]];
										v75 = v75 + ((3638 - (80 + 1896)) - (1477 + 184));
										v83 = v71[v75];
										v81[v83[2 - 0]] = v83[(14 - 11) + 0] ~= (856 - ((997 - 433) + 292));
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[2]] = v61[v83[8 - 5]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v192 = v83[306 - (244 + 60)];
										v81[v192](v13(v81, v192 + 1 + 0, v83[6 - 3]));
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										do
											return;
										end
									else
										v81[v83[478 - (41 + 435)]] = v83[3];
									end
								elseif (v84 == (1007 - (938 + 63))) then
									local v219 = 0 + (0 - 0);
									local v220;
									local v221;
									while true do
										if ((4206 >= 1676) and (v219 == (1134 - (936 + 189)))) then
											v75 = v75 + 1 + 0 + 0;
											v83 = v71[v75];
											v81[v83[1615 - (1565 + 48)]] = v83[2 + 1];
											v75 = v75 + ((347 + 792) - (782 + 356));
											v219 = 277 - (176 + 91);
										end
										if ((v219 == (0 - 0)) or (4864 <= 1220)) then
											v220 = nil;
											v221 = nil;
											v221 = v83[2];
											v81[v221](v81[v221 + (1 - 0)]);
											v219 = 1;
										end
										if (v219 == (1093 - (975 + 117))) then
											v75 = v75 + (1876 - (157 + (4106 - 2388)));
											v83 = v71[v75];
											v81[v83[2 + 0]] = v81[v83[10 - 7]][v83[4]];
											v75 = v75 + (3 - 2);
											v219 = 2;
										end
										if (v219 == (1023 - (697 + 321))) then
											v220 = v81[v83[7 - 4]];
											v81[v221 + (1 - 0)] = v220;
											v81[v221] = v220[v83[4]];
											v75 = v75 + (2 - 1);
											v219 = 3 + 3;
										end
										if ((v219 == (6 - 2)) or (4025 < 3777)) then
											v81[v221] = v81[v221](v81[v221 + (2 - 1)]);
											v75 = v75 + (1228 - (322 + 905));
											v83 = v71[v75];
											v221 = v83[613 - (602 + 9)];
											v219 = 1194 - (449 + (1194 - (246 + 208)));
										end
										if (v219 == (878 - (826 + 46))) then
											v83 = v71[v75];
											v81[v83[949 - (245 + 702)]] = v83[9 - 6];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v219 = 1905 - (260 + (3530 - (614 + 1278)));
										end
										if (v219 == (442 - (382 + 58))) then
											v83 = v71[v75];
											v221 = v83[6 - 4];
											v220 = v81[v83[3 + 0]];
											v81[v221 + (1 - 0)] = v220;
											v219 = 8 - 5;
										end
										if (v219 == (1212 - (902 + 303))) then
											v221 = v83[2];
											v81[v221] = v81[v221](v13(v81, v221 + (1 - 0), v83[3]));
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v219 = 8;
										end
										if ((3247 == 3247) and (v219 == (1 + 9))) then
											v83 = v71[v75];
											v81[v83[2]] = {};
											break;
										end
										if ((v219 == (1693 - (1121 + 569))) or (3468 == 2929)) then
											v81[v221] = v220[v83[218 - (22 + 192)]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v221 = v83[685 - (483 + 200)];
											v219 = 1467 - (696 + 708 + 59);
										end
										if (v219 == 8) then
											v221 = v83[5 - 3];
											v220 = v81[v83[3]];
											v81[v221 + (1 - 0)] = v220;
											v81[v221] = v220[v83[769 - (468 + 297)]];
											v219 = 571 - (334 + 228);
										end
									end
								else
									v81[v83[2]] = v61[v83[(324 - (249 + 65)) - 7]];
								end
							elseif (v84 <= (25 - 14)) then
								if (v84 <= (15 - 6)) then
									if (v84 == 8) then
										local v224 = 0 + (0 - 0);
										while true do
											if ((3176 == 3176) and (v224 == (237 - (141 + 95)))) then
												v60[v83[3]] = v81[v83[2 + 0]];
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v224 = 4 - (1277 - (726 + 549));
											end
											if (v224 == (2 + 3)) then
												v75 = v83[8 - 5];
												break;
											end
											if (v224 == (3 + 1)) then
												v81[v83[2 + 0]][v83[3]] = v81[v83[4]];
												v75 = v75 + (1 - 0);
												v83 = v71[v75];
												v224 = 3 + 2;
											end
											if (v224 == (163 - (63 + 29 + 71))) then
												v81[v83[2]] = not v81[v83[2 + 1]];
												v75 = v75 + (1 - (1424 - (916 + 508)));
												v83 = v71[v75];
												v224 = 766 - (574 + 191);
											end
											if (v224 == ((9 - 6) + 0)) then
												v81[v83[4 - 2]] = v60[v83[2 + 1]];
												v75 = v75 + (850 - (254 + 595));
												v83 = v71[v75];
												v224 = 130 - (55 + 71);
											end
											if ((3200 == 3200) and (v224 == 2)) then
												v81[v83[2 - 0]] = v60[v83[1793 - (369 + 204 + 1217)]];
												v75 = v75 + (2 - 1);
												v83 = v71[v75];
												v224 = 3;
											end
										end
									else
										local v225;
										local v226;
										v226 = v83[1 + 1];
										v81[v226](v13(v81, v226 + (1 - 0), v83[942 - (714 + 225)]));
										v75 = v75 + 1;
										v83 = v71[v75];
										v226 = v83[5 - 3];
										v225 = v81[v83[(326 - (140 + 183)) - 0]];
										v81[v226 + 1 + 0] = v225;
										v81[v226] = v225[v83[5 - 1]];
										v75 = v75 + (807 - (118 + 688));
										v83 = v71[v75];
										v81[v83[50 - (25 + 23)]] = v83[1 + 2];
										v75 = v75 + ((1365 + 522) - (927 + 959));
										v83 = v71[v75];
										v226 = v83[6 - 4];
										v81[v226] = v81[v226](v13(v81, v226 + 1, v83[735 - (16 + 716)]));
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v226 = v83[99 - (11 + 86)];
										v225 = v81[v83[6 - 3]];
										v81[v226 + 1] = v225;
										v81[v226] = v225[v83[4]];
										v75 = v75 + (286 - (175 + 110));
										v83 = v71[v75];
										v81[v83[2]] = v83[6 - 3];
										v75 = v75 + (565 - (297 + 267));
										v83 = v71[v75];
										v81[v83[(6 + 3) - 7]] = {};
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[1798 - (503 + 1293)]][v83[8 - 5]] = v83[4];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[344 - (37 + 305)]][v83[3 + 0]] = v83[1065 - (810 + 251)];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2 + (1266 - (323 + 943))]][v83[1 + 2]] = v83[4];
									end
								elseif (v84 > (4 + 6)) then
									local v249;
									local v250;
									v250 = v83[2 + 0];
									v81[v250] = v81[v250](v13(v81, v250 + (534 - (43 + 490)), v83[736 - (711 + 22)]));
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[(8 - 1) - 5]] = v61[v83[862 - (240 + 619)]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v250 = v83[1 + 1];
									v249 = v81[v83[4 - 1]];
									v81[v250 + 1 + 0] = v249;
									v81[v250] = v249[v83[1748 - (1344 + 400)]];
									v75 = v75 + (406 - (255 + 150));
									v83 = v71[v75];
									v81[v83[2 + (1535 - (394 + 1141))]] = v83[2 + 1];
									v75 = v75 + (4 - 3);
									v83 = v71[v75];
									v250 = v83[6 - (3 + 1)];
									v81[v250] = v81[v250](v13(v81, v250 + (1740 - (404 + 1335)), v83[409 - (183 + 223)]));
									v75 = v75 + (1 - (0 + 0));
									v83 = v71[v75];
									v81[v83[2 + 0]] = v61[v83[2 + 1]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v250 = v83[2];
									v249 = v81[v83[(24 + 316) - (10 + (416 - 89))]];
									v81[v250 + 1 + 0] = v249;
									v81[v250] = v249[v83[342 - (118 + 220)]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1 + 1]] = v83[452 - (108 + 341)];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v250 = v83[2];
									v81[v250] = v81[v250](v13(v81, v250 + (4 - 3), v83[1496 - (711 + 782)]));
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[471 - (270 + 199)]] = v81[v83[1 + 2]][v83[1823 - (580 + 1239)]];
								else
									v81[v83[2]] = v83[8 - 5] ~= (0 + 0);
								end
							elseif ((629 < 2039) and (v84 <= (1 + (17 - 5)))) then
								if ((526 <= 3218) and (v84 > 12)) then
									local v273;
									v81[v83[1 + 1]] = v61[v83[7 - 4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[1170 - (645 + 522)]][v83[1794 - (1010 + 780)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[9 - 7]] = v83[8 - 5];
									v75 = v75 + (1837 - (1045 + 725 + 66));
									v83 = v71[v75];
									v81[v83[4 - (2 + 0)]] = v83[3];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[507 - ((880 - (87 + 442)) + 154)]] = v83[1577 - (1281 + 293)];
									v75 = v75 + ((1072 - (13 + 792)) - (28 + 238));
									v83 = v71[v75];
									v273 = v83[4 - 2];
									v81[v273] = v81[v273](v13(v81, v273 + (1560 - (1381 + 178)), v83[3 + 0]));
									v75 = v75 + 1 + 0 + 0;
									v83 = v71[v75];
									v81[v83[1 + 1]][v83[10 - 7]] = v81[v83[3 + 1]];
									v75 = v75 + (471 - (381 + 89));
									v83 = v71[v75];
									v81[v83[2]] = v60[v83[3 + 0]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 - 0]][v83[1159 - (1074 + 82)]] = v83[8 - 4];
									v75 = v75 + (1785 - (214 + 1570));
									v83 = v71[v75];
									v81[v83[1457 - (990 + 465)]] = v83[2 + 1];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v75 = v83[3 + 0];
								else
									v81[v83[7 - 5]] = v81[v83[(719 + 1010) - (1668 + 58)]] + v83[630 - (512 + 108 + 6)];
								end
							elseif ((3305 <= 4710) and (v84 > (36 - 22))) then
								local v296;
								local v297;
								v81[v83[3 - 1]] = v61[v83[10 - 7]];
								v75 = v75 + (1866 - (1231 + 634)) + (1766 - (1362 + 404));
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[(8 - 5) + 0]][v83[(10 + 3) - 9]];
								v75 = v75 + (1995 - (109 + (5290 - 3405)));
								v83 = v71[v75];
								v81[v83[1471 - (1269 + 200)]] = v60[v83[5 - 2]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v297 = v83[817 - ((1114 - (660 + 356)) + 717)];
								v296 = v81[v83[829 - ((1150 - 348) + 24)]];
								v81[v297 + 1] = v296;
								v81[v297] = v296[v83[4]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v297 = v83[2 - 0];
								v81[v297] = v81[v297](v81[v297 + (1 - 0)]);
								v75 = v75 + 1 + 0 + 0;
								v83 = v71[v75];
								v81[v83[(1952 - (1111 + 839)) + 0]] = v81[v83[1 + 2]][v83[1 + 3]];
								v75 = v75 + (952 - (496 + 455));
								v83 = v71[v75];
								v81[v83[5 - 3]] = v60[v83[9 - 6]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v297 = v83[1 + 1];
								v296 = v81[v83[3 + 0]];
								v81[v297 + 1 + 0] = v296;
								v81[v297] = v296[v83[2 + 2]];
								v75 = v75 + (1434 - (797 + 636));
								v83 = v71[v75];
								v297 = v83[9 - 7];
								v81[v297] = v81[v297](v81[v297 + (1620 - (1427 + 192))]);
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[6 - 3]][v83[4 + 0]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v297 = v83[2];
								v81[v297] = v81[v297](v13(v81, v297 + ((1025 - (66 + 632)) - (192 + (213 - 79))), v83[1279 - (316 + 960)]));
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 + 0]][v83[3 + 0]] = v81[v83[4 + 0]];
							else
								local v325 = v83[7 - 5];
								local v326 = v83[555 - (83 + 468)];
								local v327 = v325 + ((2944 - (441 + 695)) - (1202 + (1595 - 991)));
								local v328 = {v81[v325](v81[v325 + (1 - 0)], v81[v327])};
								for v1460 = 2 - 1, v326 do
									v81[v327 + v1460] = v328[v1460];
								end
								local v329 = v328[326 - (45 + 280)];
								if v329 then
									v81[v327] = v329;
									v75 = v83[3 + (0 - 0)];
								else
									v75 = v75 + 1 + 0;
								end
							end
						elseif (v84 <= (9 + 14)) then
							if ((v84 <= 19) or (4249 < 1796)) then
								if ((1724 >= 438) and (v84 <= (10 + 7))) then
									if ((3956 > 3020) and (v84 > (3 + 8 + 5))) then
										local v330 = 0 - 0;
										local v331;
										local v332;
										while true do
											if (v330 == (1916 - (340 + (3409 - (286 + 1552))))) then
												v83 = v71[v75];
												v332 = v83[1 + 1];
												v331 = v81[v83[1775 - (1733 + 39)]];
												v81[v332 + (2 - 1)] = v331;
												v330 = 1040 - (125 + 909);
											end
											if (v330 == (1950 - (1096 + 852))) then
												v81[v332] = v331[v83[2 + 2]];
												v75 = v75 + (1 - (1277 - (1016 + 261)));
												v83 = v71[v75];
												v81[v83[2 + 0]] = v83[515 - (409 + 103)];
												v330 = 239 - (46 + 190);
											end
											if (v330 == (98 - (51 + 44))) then
												v75 = v75 + (1321 - (708 + 612)) + 0;
												v83 = v71[v75];
												v332 = v83[1319 - (1114 + 203)];
												v81[v332] = v81[v332](v13(v81, v332 + (727 - (228 + 498)), v83[1 + 2]));
												v330 = 3 + (2 - 1);
											end
											if (v330 == (669 - (174 + 489))) then
												v81[v332] = v331[v83[10 - 6]];
												break;
											end
											if (v330 == (1906 - (830 + 1075))) then
												v83 = v71[v75];
												v332 = v83[526 - (303 + 221)];
												v331 = v81[v83[3]];
												v81[v332 + (1270 - (231 + 1038))] = v331;
												v330 = 2 + 0 + 0;
											end
											if (((1162 - ((550 - (113 + 266)) + 991)) == v330) or (4540 >= 4903)) then
												v331 = nil;
												v332 = nil;
												v81[v83[8 - (1176 - (979 + 191))]] = v61[v83[7 - 4]];
												v75 = v75 + (2 - 1);
												v330 = 1;
											end
											if (v330 == 4) then
												v75 = v75 + 1 + 0;
												v83 = v71[v75];
												v81[v83[6 - 4]] = v81[v83[8 - 5]][v83[5 - 1]];
												v75 = v75 + (3 - 2);
												v330 = 1253 - ((196 - 85) + 1137);
											end
										end
									else
										local v333 = 158 - (91 + 67);
										local v334;
										local v335;
										while true do
											if (v333 == (14 - 9)) then
												v83 = v71[v75];
												v335 = v83[1 + 1];
												v81[v335] = v81[v335](v81[v335 + (524 - (423 + 100))]);
												v75 = v75 + 1 + 0;
												v333 = 16 - 10;
											end
											if ((0 + 0) == v333) then
												v334 = nil;
												v335 = nil;
												v81[v83[2]] = v83[3];
												v75 = v75 + ((2507 - (339 + 1396)) - (326 + 445));
												v333 = 1;
											end
											if (1 == v333) then
												v83 = v71[v75];
												v335 = v83[8 - 6];
												v81[v335](v81[v335 + (2 - 1)]);
												v75 = v75 + (2 - 1);
												v333 = 713 - (530 + 181);
											end
											if (v333 == (887 - (181 + 433 + 267))) then
												v83 = v71[v75];
												if (v81[v83[2]] or (611 > 2212)) then
													v75 = v75 + 1;
												else
													v75 = v83[35 - (19 + 13)];
												end
												break;
											end
											if (v333 == 4) then
												v334 = v81[v83[4 - 1]];
												v81[v335 + (2 - 1)] = v334;
												v81[v335] = v334[v83[11 - 7]];
												v75 = v75 + 1 + 0;
												v333 = 8 - 3;
											end
											if (v333 == 3) then
												v81[v83[3 - 1]] = v81[v83[3]][v83[(1394 + 422) - (1293 + 519)]];
												v75 = v75 + (1 - 0);
												v83 = v71[v75];
												v335 = v83[4 - 2];
												v333 = 7 - 3;
											end
											if ((v333 == (8 - 6)) or (3729 < 2872)) then
												v83 = v71[v75];
												v81[v83[2]] = v61[v83[3]];
												v75 = v75 + 1;
												v83 = v71[v75];
												v333 = 6 - 3;
											end
										end
									end
								elseif ((4535 > 803) and (v84 > 18)) then
									v81[v83[2 + 0]] = v81[v83[3]] - v81[v83[1 + 3]];
								else
									v81[v83[4 - 2]][v83[5 - 2]] = v81[v83[1 + 0 + 3]];
								end
							elseif (v84 <= (7 + 14)) then
								if (v84 == (13 + 7)) then
									v81[v83[1098 - (709 + 387)]][v83[1 + 2]] = v83[1862 - (673 + (1532 - (187 + 160)))];
								else
									local v341 = 0;
									local v342;
									while true do
										if (v341 == (31 - 20)) then
											v342 = v83[6 - 4];
											v81[v342] = v81[v342](v13(v81, v342 + (1 - 0), v83[3]));
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v341 = 9 + 3;
										end
										if (v341 == (0 - 0)) then
											v342 = nil;
											v81[v83[2]] = v81[v83[3]][v83[1 + 3]];
											v75 = v75 + (1 - (0 - 0));
											v83 = v71[v75];
											v341 = 1 - 0;
										end
										if ((v341 == (1885 - (446 + 1434))) or (2503 < 891)) then
											v75 = v75 + ((4431 - 3147) - (1040 + 243));
											v83 = v71[v75];
											v81[v83[5 - 3]] = v81[v83[1850 - (559 + 1288)]][v83[4]];
											v75 = v75 + (1932 - (609 + 1322));
											v341 = 460 - (13 + 65 + 376);
										end
										if (v341 == (27 - 18)) then
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[2]] = v81[v83[10 - 7]][v83[10 - (1 + 5)]];
											v75 = v75 + (4 - 3);
											v341 = 1 + 9;
										end
										if (v341 == (3 - 2)) then
											v81[v83[1 + 0 + 1]] = v60[v83[2 + 1]];
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v81[v83[2 + 0]] = v81[v83[3]][v83[7 - 3]];
											v341 = 2 + 0;
										end
										if (v341 == (3 + 1)) then
											v81[v83[2 + 0]] = v60[v83[3 + 0]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[435 - (153 + 280)]] = v81[v83[(14 - 6) - 5]][v83[4 + 0]];
											v341 = 2 + 3;
										end
										if (v341 == (4 + (330 - (56 + 272)))) then
											v83 = v71[v75];
											v342 = v83[2 + 0];
											v81[v342] = v81[v342](v13(v81, v342 + 1, v83[3 + 0]));
											v75 = v75 + (1 - (0 + 0));
											v341 = 5 + 2;
										end
										if ((679 - (89 + 578)) == v341) then
											v81[v83[2 + 0]][v83[3]] = v81[v83[8 - 4]];
											v75 = v75 + ((866 + 184) - (572 + 477));
											v83 = v71[v75];
											v75 = v83[1 + 2];
											break;
										end
										if ((v341 == (2 + 0)) or (4132 <= 1096)) then
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[88 - (84 + 2)]] = v81[v83[4 - 1]][v83[3 + 1]];
											v75 = v75 + (843 - ((1192 - 695) + 345));
											v341 = 1 + 2;
										end
										if ((2956 >= 1186) and ((2 + 6) == v341)) then
											v81[v83[(873 + 462) - (605 + 728)]] = v61[v83[3 + 0]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[3 - 1]] = v81[v83[(641 - (455 + 185)) + (790 - (757 + 31))]][v83[14 - (2009 - (762 + 1237))]];
											v341 = 9;
										end
										if (v341 == (3 + 0)) then
											v83 = v71[v75];
											v81[v83[(10 - 5) - 3]] = v81[v83[3]] / v83[4 + 0];
											v75 = v75 + 1;
											v83 = v71[v75];
											v341 = 493 - (457 + 32);
										end
										if ((937 < 2995) and (v341 == (3 + 4))) then
											v83 = v71[v75];
											v81[v83[1404 - (832 + 570)]][v83[3 + 0]] = v81[v83[4]];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v341 = 28 - 20;
										end
										if (v341 == (5 + 5)) then
											v83 = v71[v75];
											v81[v83[798 - (588 + 208)]] = v81[v83[8 - 5]][v83[1804 - ((1153 - (265 + 4)) + 916)]];
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v341 = 7 + 4;
										end
									end
								end
							elseif ((2440 == 2440) and (v84 == (675 - (232 + 421)))) then
								local v343;
								local v344;
								v344 = v83[1891 - (1569 + 320)];
								v81[v344] = v81[v344](v13(v81, v344 + 1, v83[1 + (4 - 2)]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[6 - 4]] = v61[v83[608 - (316 + 289)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v344 = v83[5 - 3];
								v343 = v81[v83[1 + 2]];
								v81[v344 + (1454 - (666 + 491 + 296))] = v343;
								v81[v344] = v343[v83[4]];
								v75 = v75 + (426 - (360 + 65));
								v83 = v71[v75];
								v81[v83[2 + 0]] = v83[257 - (79 + (327 - 152))];
								v75 = v75 + 1;
								v83 = v71[v75];
								v344 = v83[(5 - 3) - 0];
								v81[v344] = v81[v344](v13(v81, v344 + 1 + 0, v83[8 - 5]));
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[3 - 1]] = v61[v83[(100 + 802) - ((1395 - 892) + 396)]];
								v75 = v75 + (182 - (92 + 89));
								v83 = v71[v75];
								v344 = v83[(5 - 2) - 1];
								v343 = v81[v83[2 + 1]];
								v81[v344 + 1 + 0] = v343;
								v81[v344] = v343[v83[15 - 11]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[4 - (3 - 1)]] = v83[3 + 0];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v344 = v83[5 - 3];
								v81[v344] = v81[v344](v13(v81, v344 + 1 + 0, v83[(1738 - (1691 + 43)) - 1]));
								v75 = v75 + (1245 - (463 + 22 + 759));
								v83 = v71[v75];
								v81[v83[4 - (6 - 4)]] = v81[v83[3]][v83[1193 - (442 + 747)]];
							else
								local v367;
								local v368;
								v368 = v83[2];
								v367 = v81[v83[1138 - (832 + 303)]];
								v81[v368 + (947 - (88 + 858))] = v367;
								v81[v368] = v367[v83[2 + 2]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v83[1 + 2];
								v75 = v75 + (790 - (766 + 23));
								v83 = v71[v75];
								v368 = v83[2];
								v81[v368] = v81[v368](v13(v81, v368 + 1, v83[14 - (3 + 8)]));
								v75 = v75 + 1;
								v83 = v71[v75];
								v368 = v83[2 - 0];
								v367 = v81[v83[7 - (14 - 10)]];
								v81[v368 + 1] = v367;
								v81[v368] = v367[v83[13 - 9]];
								v75 = v75 + (1074 - (1036 + 37));
								v83 = v71[v75];
								v81[v83[2 + (176 - (127 + 49))]] = {};
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[2]][v83[3]] = v83[4 + 0];
							end
						elseif (v84 <= (1507 - (641 + 839))) then
							if ((3091 == 3091) and (v84 <= (938 - ((2590 - (281 + 1399)) + 3)))) then
								if (v84 > 24) then
									local v384;
									local v385;
									v385 = v83[4 - (1661 - (184 + 1475))];
									v81[v385] = v81[v385]();
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]][v83[1687 - (1466 + 218)]] = v83[2 + (2 - 0)];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1150 - (556 + 592)]] = v61[v83[3]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v385 = v83[2];
									v81[v385] = v81[v385]();
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[810 - (329 + 479)]][v83[857 - (174 + 680)]] = v83[13 - 9];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[2 + (0 - 0)]] = v61[v83[742 - (396 + 343)]];
									v75 = v75 + 1 + 0 + 0;
									v83 = v71[v75];
									v385 = v83[2];
									v81[v385] = v81[v385]();
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]][v83[1480 - (29 + 1202 + 246)]] = v83[1393 - (135 + 1254)];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[9 - 7]] = v61[v83[3]];
									v75 = v75 + (1292 - (260 + 1031)) + 0;
									v83 = v71[v75];
									v385 = v83[1529 - ((1566 - (313 + 864)) + 1138)];
									v384 = v81[v83[577 - (102 + 472)]];
									v81[v385 + 1 + 0] = v384;
									v81[v385] = v384[v83[3 + 1]];
								else
									local v405;
									local v406;
									v81[v83[2]][v83[3 + 0]] = v81[v83[4]];
									v75 = v75 + (1546 - ((1012 - (655 + 37)) + 1225));
									v83 = v71[v75];
									v81[v83[2 - 0]][v83[3]] = v83[3 + 1];
									v75 = v75 + (1465 - (157 + 1307));
									v83 = v71[v75];
									v81[v83[1861 - (821 + 1038)]][v83[7 - 4]] = v83[4];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v406 = v83[3 - 1];
									v81[v406] = v81[v406](v13(v81, v406 + 1 + 0, v83[3]));
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v406 = v83[(875 + 153) - ((1408 - 574) + (430 - 238))];
									v405 = v81[v83[1 + 0 + 2]];
									v81[v406 + 1 + 0] = v405;
									v81[v406] = v405[v83[4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[(2 + 0) - 0]] = {};
									v75 = v75 + (305 - (300 + 4));
									v83 = v71[v75];
									v81[v83[1 + 1]][v83[3]] = v83[10 - 6];
								end
							elseif (v84 == (388 - (112 + 250))) then
								v81[v83[1 + 1]] = {};
							else
								local v424;
								local v425;
								v425 = v83[4 - 2];
								v424 = v81[v83[3]];
								v81[v425 + 1 + 0] = v424;
								v81[v425] = v424[v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v83[2 + 1];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v425 = v83[1416 - (1001 + 413)];
								v81[v425](v13(v81, v425 + (2 - 1), v83[885 - (244 + (1206 - 568))]));
								v75 = v75 + (694 - (627 + 66));
								v83 = v71[v75];
								v425 = v83[2];
								v424 = v81[v83[8 - 5]];
								v81[v425 + 1] = v424;
								v81[v425] = v424[v83[606 - (512 + 90)]];
								v75 = v75 + (1907 - (1665 + (1011 - (383 + 387))));
								v83 = v71[v75];
								v81[v83[719 - (373 + 344)]] = v83[2 + 1];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v425 = v83[5 - 3];
								v81[v425](v13(v81, v425 + (1 - 0), v83[1102 - (35 + 1064)]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v425 = v83[2 + 0];
								v424 = v81[v83[6 - 3]];
								v81[v425 + 1 + 0] = v424;
								v81[v425] = v424[v83[4]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1238 - (298 + 938)]] = v81[v83[1262 - (233 + 1026)]][v83[1670 - (636 + 1030)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v425 = v83[2 + 0];
								v81[v425](v13(v81, v425 + 1, v83[1 + 2]));
								v75 = v75 + 1 + 0 + 0;
								v83 = v71[v75];
								v425 = v83[2];
								v424 = v81[v83[224 - (55 + (513 - 347))]];
								v81[v425 + 1 + 0] = v424;
								v81[v425] = v424[v83[4]];
							end
						elseif (v84 <= 29) then
							if ((v84 > 28) or (2207 < 870)) then
								local v446 = 0 + 0;
								local v447;
								local v448;
								while true do
									if ((v446 == (0 - 0)) or (836 > 987)) then
										v447 = nil;
										v448 = nil;
										v81[v83[2]][v83[300 - (36 + 261)]] = v81[v83[6 - 2]];
										v75 = v75 + (1369 - (34 + 1334));
										v446 = 1;
									end
									if (((1 + 0) == v446) or (2706 >= 3190)) then
										v83 = v71[v75];
										v81[v83[2 + 0]][v83[3]] = v83[4];
										v75 = v75 + (1284 - (302 + 733 + 248));
										v83 = v71[v75];
										v446 = 23 - (5 + 15 + 1);
									end
									if (v446 == (3 + 1)) then
										v447 = v81[v83[322 - ((644 - (304 + 206)) + 185)]];
										v81[v448 + (1134 - (549 + 584))] = v447;
										v81[v448] = v447[v83[4]];
										v75 = v75 + 1;
										v446 = 690 - (314 + 371);
									end
									if (v446 == 3) then
										v81[v448] = v81[v448](v13(v81, v448 + (3 - 2), v83[971 - (478 + 490)]));
										v75 = v75 + (226 - (182 + 43)) + 0;
										v83 = v71[v75];
										v448 = v83[2];
										v446 = 1176 - (786 + 386);
									end
									if (v446 == (781 - (264 + 511))) then
										v81[v83[6 - 4]][v83[1382 - (1055 + 324)]] = v83[1344 - (1093 + 247)];
										break;
									end
									if (v446 == 2) then
										v81[v83[2 + 0]][v83[1 + 2]] = v83[15 - 11];
										v75 = v75 + (3 - 2);
										v83 = v71[v75];
										v448 = v83[2];
										v446 = 8 - 5;
									end
									if (v446 == 5) then
										v83 = v71[v75];
										v81[v83[4 - (1 + 1)]] = {};
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v446 = 6;
									end
								end
							else
								local v449;
								v449 = v83[(16 - 9) - 5];
								v81[v449] = v81[v449]();
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[2]] = {};
								v75 = v75 + (982 - (128 + 853));
								v83 = v71[v75];
								v81[v83[2]] = {};
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 + 0]][v83[7 - (1706 - (1635 + 67))]] = v83[692 - (364 + 324)];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[4 - 2]][v83[1 + 2]] = v81[v83[1 + 3]];
							end
						elseif (v84 <= (125 - 95)) then
							local v458;
							local v459;
							v81[v83[2 - 0]] = v61[v83[8 - 5]];
							v75 = v75 + (1269 - (1249 + 19));
							v83 = v71[v75];
							v459 = v83[1 + 1 + 0];
							v458 = v81[v83[3]];
							v81[v459 + (3 - 2)] = v458;
							v81[v459] = v458[v83[(1287 - (131 + 66)) - (686 + 400)]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[231 - (73 + 156)]] = v83[1 + 2];
							v75 = v75 + (812 - (721 + 90));
							v83 = v71[v75];
							v459 = v83[2];
							v81[v459] = v81[v459](v13(v81, v459 + 1 + 0, v83[9 - 6]));
							v75 = v75 + (471 - (224 + 246));
							v83 = v71[v75];
							v459 = v83[2];
							v458 = v81[v83[3]];
							v81[v459 + 1] = v458;
							v81[v459] = v458[v83[5 - 1]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[3 - 1]] = v83[1 + 2] ~= (0 + (0 - 0));
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2]] = v61[v83[5 - 2]];
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v459 = v83[515 - (203 + 310)];
							v81[v459] = v81[v459]();
							v75 = v75 + (1994 - (1238 + 755));
							v83 = v71[v75];
							v81[v83[2]] = v81[v83[(4 - 3) + 1 + 1]][v83[1538 - (709 + 825)]];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v81[v83[2]] = v83[3 - 0] ~= (864 - (196 + 668));
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[7 - 5]] = v61[v83[5 - 2]];
							v75 = v75 + ((493 + 341) - (171 + (1013 - 351)));
							v83 = v71[v75];
							v459 = v83[95 - ((6 - 2) + 89)];
							v81[v459](v13(v81, v459 + ((1608 - (306 + 1299)) - 2), v83[1 + 1 + 1]));
							v75 = v75 + 1;
							v83 = v71[v75];
							do
								return;
							end
						elseif (v84 > (136 - 105)) then
							do
								return v81[v83[1 + 1]];
							end
						else
							local v1532 = v83[1488 - ((89 - 54) + 1451)];
							v81[v1532](v13(v81, v1532 + (1454 - ((817 - (671 + 118)) + 1425)), v83[1996 - (941 + 1052)]));
						end
					elseif (v84 <= (47 + 2)) then
						if (v84 <= (1554 - (822 + 692))) then
							if (v84 <= 36) then
								if (v84 <= ((189 - 141) - 14)) then
									if (v84 > (16 + 17)) then
										local v480;
										local v481;
										v81[v83[299 - (45 + 252)]] = v81[v83[3 + 0]][v81[v83[4]]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v481 = v83[2];
										v480 = v81[v83[7 - (80 - (73 + 3))]];
										v81[v481 + ((1226 - 792) - (114 + 319))] = v480;
										v81[v481] = v480[v83[5 - 1]];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v481 = v83[2 + 0];
										v81[v481](v81[v481 + 1]);
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v81[v83[3 - 1]] = v60[v83[1966 - (556 + 1407)]];
										v75 = v75 + (1207 - (741 + 465));
										v83 = v71[v75];
										v81[v83[467 - (170 + 295)]][v81[v83[2 + 1]]] = v83[4 + 0];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v75 = v83[3 + 0];
									else
										local v496;
										local v497;
										local v496, v498;
										local v499;
										local v500;
										v81[v83[2 + 0]] = v61[v83[2 + 1]];
										v75 = v75 + (1231 - (957 + 273));
										v83 = v71[v75];
										v500 = v83[1 + 1];
										v499 = v81[v83[2 + 1]];
										v81[v500 + (3 - 2)] = v499;
										v81[v500] = v499[v83[10 - 6]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[2]] = v83[14 - 11];
										v75 = v75 + (1781 - (389 + 1391));
										v83 = v71[v75];
										v500 = v83[2 + 0];
										v81[v500] = v81[v500](v13(v81, v500 + 1, v83[1 + 2]));
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v500 = v83[953 - (783 + 168)];
										v499 = v81[v83[9 - 6]];
										v81[v500 + 1 + 0] = v499;
										v81[v500] = v499[v83[315 - (309 + 2)]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[2]] = v83[9 - 6];
										v75 = v75 + (1213 - (1090 + 122));
										v83 = v71[v75];
										v500 = v83[1 + 1];
										v81[v500] = v81[v500](v13(v81, v500 + (3 - 2), v83[3 + 0]));
										v75 = v75 + (1119 - (628 + 490));
										v83 = v71[v75];
										v500 = v83[1 + 1];
										v499 = v81[v83[3]];
										v81[v500 + (2 - 1)] = v499;
										v81[v500] = v499[v83[18 - 14]];
										v75 = v75 + (775 - (431 + 343));
										v83 = v71[v75];
										v500 = v83[3 - 1];
										v496, v498 = v74(v81[v500](v81[v500 + 1]));
										v76 = (v498 + v500) - (2 - 1);
										v497 = 0 + 0;
										for v1463 = v500, v76 do
											v497 = v497 + 1 + 0;
											v81[v1463] = v496[v497];
										end
										v75 = v75 + (1696 - (556 + 1139));
										v83 = v71[v75];
										v500 = v83[17 - (6 + 9)];
										v496 = {v81[v500](v13(v81, v500 + 1 + 0, v76))};
										v497 = 169 - (28 + 141);
										for v1466 = v500, v83[2 + 2] do
											v497 = v497 + 1;
											v81[v1466] = v496[v497];
										end
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v75 = v83[3 + 0];
									end
								elseif ((v84 == 35) or (4441 <= 777)) then
									if not v81[v83[1319 - (486 + 831)]] then
										v75 = v75 + (2 - 1);
									else
										v75 = v83[10 - 7];
									end
								else
									local v523 = 0 + 0;
									local v524;
									local v525;
									local v526;
									while true do
										if ((v523 == (0 - 0)) or (4682 < 1467)) then
											v524 = nil;
											v525 = nil;
											v526 = nil;
											v81[v83[2]] = not v81[v83[1266 - (668 + 595)]];
											v523 = 1;
										end
										if ((v523 == (1 + 0)) or (4195 < 740)) then
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v60[v83[3]] = v81[v83[5 - 3]];
											v75 = v75 + 1;
											v523 = 292 - (23 + 267);
										end
										if ((245 < 2584) and (v523 == 3)) then
											v81[v83[1946 - (1129 + 815)]] = v60[v83[390 - (371 + 16)]];
											v75 = v75 + (1751 - (1326 + 424));
											v83 = v71[v75];
											v526 = v83[3 - 1];
											v523 = 14 - 10;
										end
										if (v523 == 4) then
											v525 = {v81[v526](v81[v526 + (772 - (720 + 51))])};
											v524 = 0 - 0;
											for v2222 = v526, v83[4] do
												v524 = v524 + 1;
												v81[v2222] = v525[v524];
											end
											v75 = v75 + 1;
											v523 = 1781 - (421 + 1355);
										end
										if ((2 - 0) == v523) then
											v83 = v71[v75];
											v81[v83[1 + 1]] = v61[v83[1086 - (286 + 797)]];
											v75 = v75 + (3 - 2);
											v83 = v71[v75];
											v523 = 4 - 1;
										end
										if (v523 == 5) then
											v83 = v71[v75];
											v75 = v83[442 - (397 + 42)];
											break;
										end
									end
								end
							elseif (v84 <= (12 + 26)) then
								if (v84 > (837 - (24 + 776))) then
									local v527;
									local v528;
									local v529;
									v81[v83[2]] = v61[v83[3]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[787 - (222 + 563)]] = v81[v83[6 - 3]][v83[4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v529 = v83[193 - (23 + 167)];
									v528 = v81[v529];
									for v1469 = v529 + 1, v83[1802 - (690 + 1108)] do
										v528 = v528 .. v81[v1469];
									end
									v81[v83[1 + 1]] = v528;
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v527 = v83[850 - (40 + 808)];
									v81[v527](v13(v81, v527 + 1 + 0, v83[11 - 8]));
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[3]][v83[3 + 1]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v527 = v83[2];
									v529 = v81[v83[3]];
									v81[v527 + (572 - (47 + 524))] = v529;
									v81[v527] = v529[v83[4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v527 = v83[5 - 3];
									v81[v527] = v81[v527](v81[v527 + (1 - 0)]);
									v75 = v75 + 1;
									v83 = v71[v75];
									v527 = v83[4 - 2];
									v529 = v81[v83[1729 - (1165 + 561)]];
									v81[v527 + 1] = v529;
									v81[v527] = v529[v83[4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[6 - 4]] = v83[2 + 1];
									v75 = v75 + (480 - (341 + 138));
									v83 = v71[v75];
									v527 = v83[2];
									v81[v527] = v81[v527](v13(v81, v527 + 1 + 0, v83[3]));
								else
									v81[v83[3 - 1]] = not v81[v83[329 - (89 + 237)]];
								end
							elseif (v84 == (125 - 86)) then
								local v552;
								v552 = v83[2];
								v81[v552] = v81[v552]();
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[883 - (581 + 300)]][v83[3]] = v83[1224 - (855 + 365)];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[1 + 1]] = v61[v83[1238 - (1030 + 205)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v552 = v83[2 + 0];
								v81[v552] = v81[v552]();
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[288 - (156 + 130)]] = v61[v83[6 - 3]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[3]][v83[7 - 3]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v83[72 - (10 + 59)];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[9 - 7]] = v83[1166 - (671 + 492)];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v83[1218 - (369 + 846)];
								v75 = v75 + 1;
								v83 = v71[v75];
								v552 = v83[1 + 1];
								v81[v552] = v81[v552](v13(v81, v552 + 1 + 0, v83[1948 - (1036 + 909)]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 - 0]][v83[206 - (11 + 192)]] = v81[v83[3 + 1]];
								v75 = v75 + (176 - (135 + 40));
								v83 = v71[v75];
								v81[v83[4 - 2]] = v83[2 + 1];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v75 = v83[4 - 1];
							else
								local v576;
								local v577;
								local v578;
								v578 = v83[2];
								v81[v578](v13(v81, v578 + (177 - (50 + 126)), v83[3]));
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v578 = v83[2];
								v577 = v81[v83[1 + 2]];
								v81[v578 + (1414 - (1233 + 180))] = v577;
								v81[v578] = v577[v83[973 - (522 + 447)]];
								v75 = v75 + (1422 - (107 + 1314));
								v83 = v71[v75];
								v578 = v83[1 + 1];
								v81[v578](v81[v578 + (2 - 1)]);
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v578 = v83[3 - 1];
								v577 = v81[v83[11 - 8]];
								v81[v578 + 1] = v577;
								v81[v578] = v577[v83[1914 - (716 + 1194)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[506 - (74 + 429)];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[1 + 1]] = v61[v83[6 - 3]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[8 - 5]][v83[9 - 5]];
								v75 = v75 + (434 - (279 + 154));
								v83 = v71[v75];
								v577 = v83[3];
								v576 = v81[v577];
								for v1470 = v577 + (779 - (454 + 324)), v83[4 + 0] do
									v576 = v576 .. v81[v1470];
								end
								v81[v83[2]] = v576;
								v75 = v75 + (18 - (12 + 5));
								v83 = v71[v75];
								v578 = v83[2];
								v81[v578](v13(v81, v578 + 1 + 0, v83[7 - 4]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v578 = v83[2];
								v577 = v81[v83[1096 - (277 + 816)]];
								v81[v578 + 1] = v577;
								v81[v578] = v577[v83[4]];
							end
						elseif ((2921 > 1269) and (v84 <= (187 - 143))) then
							if ((3378 > 820) and (v84 <= (1225 - (1058 + 125)))) then
								if (v84 > (8 + 33)) then
									if ((891 <= 4818) and (v81[v83[977 - (815 + 160)]] ~= v81[v83[17 - 13]])) then
										v75 = v75 + (2 - 1);
									else
										v75 = v83[1 + 2];
									end
								else
									for v1471 = v83[2], v83[8 - 5] do
										v81[v1471] = nil;
									end
								end
							elseif (v84 == (1941 - (41 + 1857))) then
								local v600 = 1893 - (1222 + 671);
								local v601;
								local v602;
								local v603;
								local v604;
								while true do
									if ((v600 == (5 - 3)) or (3918 == 3322)) then
										for v2225 = v601, v76 do
											local v2226 = 0 - 0;
											while true do
												if (v2226 == 0) then
													v604 = v604 + (1183 - (229 + 953));
													v81[v2225] = v602[v604];
													break;
												end
											end
										end
										break;
									end
									if ((1774 - (1111 + 663)) == v600) then
										v601 = v83[1581 - (874 + 705)];
										v602, v603 = v74(v81[v601](v13(v81, v601 + 1, v76)));
										v600 = 1 + 0;
									end
									if (v600 == (1 + 0)) then
										v76 = (v603 + v601) - (1 - 0);
										v604 = 0 + 0;
										v600 = 2;
									end
								end
							else
								local v605;
								v605 = v83[2];
								v81[v605] = v81[v605]();
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[681 - (642 + 37)]] = v61[v83[1 + 2]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[4 - 2]] = v81[v83[457 - (233 + 221)]][v83[8 - 4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1543 - (718 + 823)]] = v83[3];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[807 - (266 + 539)]] = v83[8 - 5];
								v75 = v75 + (1226 - (636 + 589));
								v83 = v71[v75];
								v81[v83[4 - 2]] = v83[5 - 2];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v605 = v83[1 + 1];
								v81[v605] = v81[v605](v13(v81, v605 + (1016 - (657 + 358)), v83[7 - 4]));
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[4 - 2]][v83[1190 - (1151 + 36)]] = v81[v83[4 + 0]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[5 - 3]] = v61[v83[3]];
								v75 = v75 + (1833 - (1552 + 280));
								v83 = v71[v75];
								v605 = v83[2];
								v81[v605] = v81[v605]();
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]][v83[837 - (64 + 770)]] = v81[v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[4 - 2]] = v83[1 + 2];
							end
						elseif ((1582 == 1582) and (v84 <= (1289 - (157 + 1086)))) then
							if ((v84 > (90 - 45)) or (3639 <= 413)) then
								local v626;
								v626 = v83[2];
								v81[v626] = v81[v626]();
								v75 = v75 + (4 - 3);
								v83 = v71[v75];
								v81[v83[2 - 0]][v83[3 - 0]] = v81[v83[4]];
								v75 = v75 + (820 - (599 + 220));
								v83 = v71[v75];
								v81[v83[3 - 1]] = v61[v83[1934 - (1813 + 118)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v626 = v83[2 + 0];
								v81[v626] = v81[v626]();
								v75 = v75 + (1218 - (841 + 376));
								v83 = v71[v75];
								v81[v83[2 - 0]][v83[1 + 2]] = v83[10 - 6];
								v75 = v75 + (860 - (464 + 395));
								v83 = v71[v75];
								v81[v83[5 - 3]] = v83[2 + 1];
							else
								local v639;
								local v640;
								local v641;
								local v642;
								local v643;
								local v644;
								v81[v83[839 - (467 + 370)]][v83[5 - 2]] = v81[v83[3 + 1]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[1 + 1]][v83[6 - 3]] = v83[4];
								v75 = v75 + (521 - (150 + 370));
								v83 = v71[v75];
								v81[v83[1284 - (74 + 1208)]][v83[7 - 4]] = v83[18 - 14];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v644 = v83[392 - (14 + 376)];
								v81[v644] = v81[v644](v13(v81, v644 + (1 - 0), v83[2 + 1]));
								v75 = v75 + 1;
								v83 = v71[v75];
								do
									return v81[v83[2 + 0]];
								end
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v644 = v83[5 - 3];
								v643 = {};
								for v1473 = 1 + 0, #v80 do
									v642 = v80[v1473];
									for v1535 = 78 - (23 + 55), #v642 do
										v641 = v642[v1535];
										v640 = v641[2 - 1];
										v639 = v641[2];
										if ((v640 == v81) and (v639 >= v644)) then
											local v2227 = 0 + 0;
											while true do
												if (v2227 == 0) then
													v643[v639] = v640[v639];
													v641[1 + 0] = v643;
													break;
												end
											end
										end
									end
								end
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v75 = v83[1 + 2];
							end
						elseif (v84 <= (948 - (652 + 249))) then
							local v656;
							local v657;
							v81[v83[2]] = v60[v83[7 - 4]];
							v75 = v75 + (1869 - (708 + 1160));
							v83 = v71[v75];
							v81[v83[5 - 3]] = v81[v83[3]][v83[6 - 2]];
							v75 = v75 + (28 - (10 + 17));
							v83 = v71[v75];
							v81[v83[1 + 1]] = v81[v83[1735 - (1400 + 332)]][v81[v83[4]]];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v81[v83[1910 - (242 + 1666)]] = v83[2 + 1];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v657 = v83[3 + 0];
							v656 = v81[v657];
							for v1475 = v657 + 1, v83[4] do
								v656 = v656 .. v81[v1475];
							end
							v81[v83[942 - (850 + 90)]] = v656;
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v81[v83[2]] = v83[1393 - (360 + 1030)];
						elseif (v84 > (43 + 5)) then
							local v1539 = 0 - 0;
							local v1540;
							while true do
								if (v1539 == (7 - 1)) then
									v1540 = v83[1663 - (909 + 752)];
									v81[v1540] = v81[v1540]();
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1225 - (109 + 1114)]][v83[5 - 2]] = v81[v83[2 + 2]];
									v1539 = 7;
								end
								if ((v1539 == (245 - (6 + 236))) or (3691 <= 2818)) then
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]] = v83[3];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v1539 = 4 + 0;
								end
								if ((v1539 == (2 - 1)) or (3673 < 3557)) then
									v81[v83[3 - 1]] = v61[v83[1136 - (1076 + 57)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[691 - (579 + 110)]] = v81[v83[1 + 2]][v83[4 + 0]];
									v75 = v75 + 1 + 0;
									v1539 = 409 - (174 + 233);
								end
								if (v1539 == (5 - 3)) then
									v83 = v71[v75];
									v81[v83[3 - 1]] = v83[2 + 1];
									v75 = v75 + (1175 - (663 + 511));
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[1 + 2];
									v1539 = 9 - 6;
								end
								if ((3 + 1) == v1539) then
									v1540 = v83[4 - 2];
									v81[v1540] = v81[v1540](v13(v81, v1540 + (2 - 1), v83[2 + 1]));
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[2 + 0]][v83[1 + 2]] = v81[v83[726 - (478 + 244)]];
									v1539 = 5;
								end
								if (v1539 == (517 - (440 + 77))) then
									v1540 = nil;
									v1540 = v83[2];
									v81[v1540] = v81[v1540]();
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v1539 = 3 - 2;
								end
								if ((v1539 == (1563 - (655 + 901))) or (3910 == 4030)) then
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v83[3 + 0];
									break;
								end
								if (v1539 == (20 - 15)) then
									v75 = v75 + (1446 - (695 + 750));
									v83 = v71[v75];
									v81[v83[6 - 4]] = v61[v83[3 - 0]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v1539 = 6;
								end
							end
						else
							local v1541;
							local v1542;
							v81[v83[353 - (285 + 66)]][v83[3]] = v81[v83[8 - 4]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v1542 = v83[1312 - (682 + 628)];
							v81[v1542](v13(v81, v1542 + 1 + 0, v83[302 - (176 + 123)]));
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v1542 = v83[2 + 0];
							v1541 = v81[v83[272 - (239 + 30)]];
							v81[v1542 + 1 + 0] = v1541;
							v81[v1542] = v1541[v83[4 + 0]];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v1542 = v83[5 - 3];
							v81[v1542](v81[v1542 + (316 - (306 + 9))]);
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v1542 = v83[1 + 1];
							v1541 = v81[v83[2 + 1]];
							v81[v1542 + 1] = v1541;
							v81[v1542] = v1541[v83[2 + 2]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[5 - 3]] = v83[1378 - (1140 + 235)];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2 + 0]] = {};
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[1 + 1]][v83[55 - (33 + 19)]] = v83[2 + 2];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v81[v83[1 + 1]][v83[3]] = v83[4];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v81[v83[2 + 0]][v83[3]] = v83[693 - (586 + 103)];
						end
					elseif (v84 <= (6 + 51)) then
						if (v84 <= (163 - 110)) then
							if ((v84 <= (1539 - (1309 + 179))) or (1905 >= 2144)) then
								if (v84 == 50) then
									local v671 = 0 - 0;
									local v672;
									local v673;
									while true do
										if (v671 == (4 + 3)) then
											v83 = v71[v75];
											v673 = v83[5 - 3];
											v81[v673](v13(v81, v673 + 1 + 0, v83[3]));
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											do
												return;
											end
											break;
										end
										if ((765 < 2000) and (v671 == (0 - 0))) then
											v672 = nil;
											v673 = nil;
											v81[v83[611 - (295 + 314)]] = v61[v83[6 - 3]];
											v75 = v75 + (1963 - (1300 + 662));
											v83 = v71[v75];
											v673 = v83[6 - 4];
											v671 = 1756 - (1178 + 577);
										end
										if ((v671 == (3 + 2)) or (3747 <= 1945)) then
											v673 = v83[5 - 3];
											v81[v673] = v81[v673]();
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[2]] = v81[v83[1408 - (851 + 554)]][v83[4 + 0]];
											v75 = v75 + 1;
											v671 = 16 - 10;
										end
										if (v671 == (6 - 3)) then
											v673 = v83[304 - (115 + 187)];
											v672 = v81[v83[3 + 0]];
											v81[v673 + 1 + 0] = v672;
											v81[v673] = v672[v83[15 - 11]];
											v75 = v75 + (1162 - (160 + 1001));
											v83 = v71[v75];
											v671 = 4 + 0;
										end
										if (v671 == 2) then
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v673 = v83[3 - 1];
											v81[v673] = v81[v673](v13(v81, v673 + 1, v83[361 - (237 + 121)]));
											v75 = v75 + 1;
											v83 = v71[v75];
											v671 = 900 - (525 + 372);
										end
										if (v671 == (10 - 4)) then
											v83 = v71[v75];
											v81[v83[6 - 4]] = v83[145 - (96 + 46)] ~= (777 - (643 + 134));
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[4 - 2]] = v61[v83[3]];
											v75 = v75 + (3 - 2);
											v671 = 7 + 0;
										end
										if ((v671 == (1 - 0)) or (754 > 1641)) then
											v672 = v81[v83[5 - 2]];
											v81[v673 + 1] = v672;
											v81[v673] = v672[v83[723 - (316 + 403)]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[2 + 0]] = v83[3];
											v671 = 2;
										end
										if (((10 - 6) == v671) or (3911 >= 4281)) then
											v81[v83[1 + 1]] = v83[7 - 4] ~= 0;
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v81[v83[2]] = v61[v83[1 + 2]];
											v75 = v75 + (3 - 2);
											v83 = v71[v75];
											v671 = 23 - 18;
										end
									end
								else
									local v674 = 0 - 0;
									local v675;
									while true do
										if ((4 == v674) or (1002 >= 3878)) then
											v83 = v71[v75];
											v81[v83[1 + 1]] = v83[5 - 2];
											v75 = v75 + 1 + 0;
											v83 = v71[v75];
											v674 = 5;
										end
										if (v674 == (14 - 9)) then
											v75 = v83[20 - (12 + 5)];
											break;
										end
										if (v674 == (7 - 5)) then
											v81[v675] = v81[v675](v81[v675 + (1 - 0)]);
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v81[v83[4 - 2]] = v81[v83[1 + 2]];
											v674 = 3;
										end
										if ((4482 >= 3533) and (v674 == 3)) then
											v75 = v75 + (1974 - (1656 + 317));
											v83 = v71[v75];
											v81[v83[2 + 0]][v83[3 + 0]] = v83[10 - 6];
											v75 = v75 + 1;
											v674 = 19 - 15;
										end
										if (v674 == 1) then
											v81[v83[356 - (5 + 349)]] = v83[14 - 11];
											v75 = v75 + 1;
											v83 = v71[v75];
											v675 = v83[1273 - (266 + 1005)];
											v674 = 2 + 0;
										end
										if (v674 == (0 - 0)) then
											v675 = nil;
											v81[v83[2 - 0]] = v81[v83[1699 - (561 + 1135)]][v83[4]];
											v75 = v75 + (1 - 0);
											v83 = v71[v75];
											v674 = 1;
										end
									end
								end
							elseif (v84 > (170 - 118)) then
								local v676;
								local v677;
								v81[v83[2]][v83[1069 - (507 + 559)]] = v81[v83[9 - 5]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v677 = v83[2];
								v81[v677](v13(v81, v677 + (389 - (212 + 176)), v83[908 - (250 + 655)]));
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v677 = v83[2];
								v676 = v81[v83[3]];
								v81[v677 + (1 - 0)] = v676;
								v81[v677] = v676[v83[5 - 1]];
								v75 = v75 + (1957 - (1869 + 87));
								v83 = v71[v75];
								v81[v83[6 - 4]] = v83[1904 - (484 + 1417)];
								v75 = v75 + 1;
								v83 = v71[v75];
								v677 = v83[2];
								v81[v677] = v81[v677](v13(v81, v677 + (2 - 1), v83[4 - 1]));
								v75 = v75 + 1;
								v83 = v71[v75];
								v677 = v83[775 - (48 + 725)];
								v676 = v81[v83[4 - 1]];
								v81[v677 + (2 - 1)] = v676;
								v81[v677] = v676[v83[3 + 1]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[1 + 2];
								v75 = v75 + (854 - (152 + 701));
								v83 = v71[v75];
								v81[v83[2]] = {};
								v75 = v75 + (1312 - (430 + 881));
								v83 = v71[v75];
								v81[v83[1 + 1]][v83[898 - (557 + 338)]] = v83[2 + 2];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[5 - 3]][v83[3]] = v83[13 - 9];
							else
								local v699;
								v81[v83[4 - 2]] = v81[v83[6 - 3]][v83[4]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v83[804 - (499 + 302)] ~= (866 - (39 + 827));
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[5 - 3]] = v61[v83[3]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[7 - 5]] = v81[v83[3 - 0]][v83[4]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[8 - 5];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v83[4 - 1];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[106 - (103 + 1)]] = v83[557 - (475 + 79)];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v699 = v83[6 - 4];
								v81[v699] = v81[v699](v13(v81, v699 + 1 + 0, v83[3 + 0]));
								v75 = v75 + (1504 - (1395 + 108));
								v83 = v71[v75];
								v81[v83[5 - 3]] = {};
								v75 = v75 + (1205 - (7 + 1197));
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[2 + 1]][v83[323 - (27 + 292)]];
							end
						elseif (v84 <= (160 - 105)) then
							if ((1178 <= 2271) and (v84 > (68 - 14))) then
								local v716;
								local v717;
								v717 = v83[2];
								v81[v717](v13(v81, v717 + (4 - 3), v83[5 - 2]));
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[5 - 2]][v83[143 - (43 + 96)]];
								v75 = v75 + (4 - 3);
								v83 = v71[v75];
								v717 = v83[3 - 1];
								v716 = v81[v83[3 + 0]];
								v81[v717 + 1 + 0] = v716;
								v81[v717] = v716[v83[7 - 3]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[3]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v717 = v83[3 - 1];
								v81[v717](v13(v81, v717 + 1 + 0, v83[3]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[1754 - (1414 + 337)]][v83[1944 - (1642 + 298)]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v717 = v83[5 - 3];
								v716 = v81[v83[3]];
								v81[v717 + (2 - 1)] = v716;
								v81[v717] = v716[v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[3]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v717 = v83[974 - (357 + 615)];
								v81[v717](v13(v81, v717 + 1 + 0, v83[6 - 3]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[4 - 2]] = v61[v83[3 + 0]];
							else
								v81[v83[1 + 1]][v81[v83[2 + 1]]] = v81[v83[4]];
							end
						elseif (v84 > 56) then
							local v739 = 0;
							local v740;
							local v741;
							while true do
								if ((v739 == 6) or (800 > 2085)) then
									v81[v83[1303 - (384 + 917)]][v83[3]] = v83[701 - (128 + 569)];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[2]][v83[1546 - (1407 + 136)]] = v83[4];
									break;
								end
								if ((v739 == (1891 - (687 + 1200))) or (4615 < 3036)) then
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1712 - (556 + 1154)]] = {};
									v75 = v75 + (3 - 2);
									v739 = 100 - (9 + 86);
								end
								if ((v739 == 5) or (558 == 3148)) then
									v83 = v71[v75];
									v81[v83[423 - (275 + 146)]][v83[1 + 2]] = v83[68 - (29 + 35)];
									v75 = v75 + 1;
									v83 = v71[v75];
									v739 = 26 - 20;
								end
								if (v739 == 2) then
									v83 = v71[v75];
									v741 = v83[5 - 3];
									v740 = v81[v83[13 - 10]];
									v81[v741 + 1 + 0] = v740;
									v739 = 1015 - (53 + 959);
								end
								if ((409 - (312 + 96)) == v739) then
									v83 = v71[v75];
									v741 = v83[3 - 1];
									v81[v741](v13(v81, v741 + (286 - (147 + 138)), v83[902 - (813 + 86)]));
									v75 = v75 + 1 + 0;
									v739 = 2;
								end
								if (v739 == (0 - 0)) then
									v740 = nil;
									v741 = nil;
									v81[v83[494 - (18 + 474)]][v83[3]] = v81[v83[2 + 2]];
									v75 = v75 + 1;
									v739 = 3 - 2;
								end
								if (v739 == 3) then
									v81[v741] = v740[v83[1090 - (860 + 226)]];
									v75 = v75 + (304 - (121 + 182));
									v83 = v71[v75];
									v81[v83[1 + 1]] = v83[1243 - (988 + 252)];
									v739 = 1 + 3;
								end
							end
						else
							local v742;
							local v743, v744;
							local v745;
							local v746;
							v81[v83[1 + 1]] = v61[v83[1973 - (49 + 1921)]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2]] = v61[v83[893 - (223 + 667)]];
							v75 = v75 + (53 - (51 + 1));
							v83 = v71[v75];
							v746 = v83[2 - 0];
							v745 = v81[v83[6 - 3]];
							v81[v746 + (1126 - (146 + 979))] = v745;
							v81[v746] = v745[v83[2 + 2]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[607 - (311 + 294)]] = v83[3];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v746 = v83[2];
							v743, v744 = v74(v81[v746](v13(v81, v746 + 1, v83[2 + 1])));
							v76 = (v744 + v746) - (1444 - (496 + 947));
							v742 = 1358 - (1233 + 125);
							for v1476 = v746, v76 do
								v742 = v742 + 1;
								v81[v1476] = v743[v742];
							end
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v746 = v83[2 + 0];
							v81[v746] = v81[v746](v13(v81, v746 + 1, v76));
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[1647 - (963 + 682)]]();
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							do
								return;
							end
						end
					elseif ((3199 == 3199) and (v84 <= (1565 - (504 + 1000)))) then
						if (v84 <= (40 + 19)) then
							if (v84 > 58) then
								local v761;
								local v762;
								v81[v83[2 + 0]] = v83[1 + 2];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v762 = v83[2];
								v81[v762](v13(v81, v762 + 1 + 0, v83[3]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v762 = v83[2];
								v761 = v81[v83[3]];
								v81[v762 + (183 - (156 + 26))] = v761;
								v81[v762] = v761[v83[3 + 1]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v83[3 - 0];
								v75 = v75 + 1;
								v83 = v71[v75];
								v762 = v83[166 - (149 + 15)];
								v81[v762](v13(v81, v762 + 1, v83[963 - (890 + 70)]));
								v75 = v75 + (118 - (39 + 78));
								v83 = v71[v75];
								v762 = v83[484 - (14 + 468)];
								v761 = v81[v83[6 - 3]];
								v81[v762 + (2 - 1)] = v761;
								v81[v762] = v761[v83[3 + 1]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[3];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v762 = v83[1 + 1];
								v81[v762](v13(v81, v762 + (1 - 0), v83[3 + 0]));
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[1 + 2]][v83[4]];
								v75 = v75 + (52 - (12 + 39));
								v83 = v71[v75];
								v762 = v83[2 + 0];
								v761 = v81[v83[3]];
								v81[v762 + 1] = v761;
								v81[v762] = v761[v83[12 - 8]];
							else
								local v784 = 0 - 0;
								local v785;
								local v786;
								while true do
									if ((0 + 0) == v784) then
										v785 = nil;
										v786 = nil;
										v786 = v83[2 + 0];
										v784 = 2 - 1;
									end
									if ((3401 > 303) and (v784 == (1 + 0))) then
										v785 = v81[v83[14 - 11]];
										v81[v786 + (1711 - (1596 + 114))] = v785;
										v81[v786] = v785[v83[4]];
										v784 = 4 - 2;
									end
									if (v784 == (716 - (164 + 549))) then
										v81[v786](v81[v786 + (1439 - (1059 + 379))]);
										v75 = v75 + 1;
										v83 = v71[v75];
										v784 = 4 - 0;
									end
									if ((v784 == (4 + 2)) or (4179 < 1748)) then
										v786 = v83[1 + 1];
										v81[v786](v81[v786 + 1]);
										v75 = v75 + (393 - (145 + 247));
										v784 = 6 + 1;
									end
									if (v784 == 2) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v786 = v83[5 - 3];
										v784 = 3;
									end
									if (v784 == (2 + 6)) then
										v83 = v71[v75];
										v75 = v83[3 + 0];
										break;
									end
									if (v784 == (7 - 2)) then
										v81[v83[2]] = v83[723 - (254 + 466)];
										v75 = v75 + (561 - (544 + 16));
										v83 = v71[v75];
										v784 = 18 - 12;
									end
									if (v784 == (632 - (294 + 334))) then
										v81[v83[255 - (236 + 17)]] = v61[v83[2 + 1]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v784 = 4 + 1;
									end
									if ((4369 == 4369) and (v784 == (26 - 19))) then
										v83 = v71[v75];
										v81[v83[2]] = v83[3];
										v75 = v75 + (4 - 3);
										v784 = 5 + 3;
									end
								end
							end
						elseif ((v84 == (50 + 10)) or (3135 <= 2542)) then
							v81[v83[796 - (413 + 381)]] = v81[v83[1 + 2]][v83[8 - 4]];
						else
							local v789 = 0 - 0;
							local v790;
							while true do
								if ((v789 == (1973 - (582 + 1388))) or (4262 < 403)) then
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[2]] = v60[v83[3 + 0]];
									v75 = v75 + 1;
									v789 = 368 - (326 + 38);
								end
								if (v789 == (11 - 7)) then
									v83 = v71[v75];
									v81[v83[2 - 0]] = v81[v83[623 - (47 + 573)]] - v81[v83[4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v789 = 21 - 16;
								end
								if (v789 == (1 - 0)) then
									v60[v83[3]] = v81[v83[1666 - (1269 + 395)]];
									v75 = v75 + (493 - (76 + 416));
									v83 = v71[v75];
									v81[v83[2]] = v61[v83[3]];
									v789 = 445 - (319 + 124);
								end
								if (v789 == (0 - 0)) then
									v790 = nil;
									v81[v83[1009 - (564 + 443)]] = v81[v83[3]] + v83[10 - 6];
									v75 = v75 + 1;
									v83 = v71[v75];
									v789 = 1;
								end
								if ((463 - (337 + 121)) == v789) then
									if (v83[5 - 3] <= v81[v83[13 - 9]]) then
										v75 = v75 + (1912 - (1261 + 650));
									else
										v75 = v83[2 + 1];
									end
									break;
								end
								if ((2535 > 1335) and (v789 == (2 - 0))) then
									v75 = v75 + 1;
									v83 = v71[v75];
									v790 = v83[1819 - (772 + 1045)];
									v81[v790] = v81[v790]();
									v789 = 1 + 2;
								end
							end
						end
					elseif (v84 <= (207 - (102 + 42))) then
						if (v84 == 62) then
							v81[v83[2]] = v81[v83[1847 - (1524 + 320)]];
						elseif (v81[v83[1272 - (1049 + 221)]] == v83[160 - (18 + 138)]) then
							v75 = v75 + (2 - 1);
						else
							v75 = v83[3];
						end
					elseif (v84 <= (1166 - (67 + 1035))) then
						local v793 = 348 - (136 + 212);
						local v794;
						while true do
							if ((v793 == 2) or (2978 > 3020)) then
								v83 = v71[v75];
								v794 = v83[2];
								v81[v794] = v81[v794](v81[v794 + (4 - 3)]);
								v793 = 3 + 0;
							end
							if (v793 == (4 + 0)) then
								v75 = v75 + (1605 - (240 + 1364));
								v83 = v71[v75];
								v81[v83[1084 - (1050 + 32)]][v83[3]] = v83[4];
								v793 = 5;
							end
							if ((0 - 0) == v793) then
								v794 = nil;
								v81[v83[2 + 0]] = v81[v83[3]][v83[4]];
								v75 = v75 + (1056 - (331 + 724));
								v793 = 1;
							end
							if ((3334 > 466) and (v793 == (1 + 5))) then
								v75 = v75 + (645 - (269 + 375));
								v83 = v71[v75];
								v75 = v83[728 - (267 + 458)];
								break;
							end
							if (v793 == (1 + 0)) then
								v83 = v71[v75];
								v81[v83[3 - 1]] = v83[821 - (667 + 151)];
								v75 = v75 + (1498 - (1410 + 87));
								v793 = 2;
							end
							if ((v793 == (1902 - (1504 + 393))) or (14 > 4165)) then
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v83[3];
								v793 = 6;
							end
							if (v793 == (8 - 5)) then
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[798 - (461 + 335)]] = v81[v83[1 + 2]];
								v793 = 4;
							end
						end
					elseif (v84 > (1826 - (1730 + 31))) then
						local v1567 = 1667 - (728 + 939);
						local v1568;
						while true do
							if (v1567 == (17 - 12)) then
								v81[v83[3 - 1]] = v83[6 - 3];
								break;
							end
							if (v1567 == 0) then
								v1568 = nil;
								v81[v83[2]] = v81[v83[1071 - (138 + 930)]][v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v1567 = 1 + 0;
							end
							if (v1567 == (2 + 0)) then
								v81[v1568] = v81[v1568](v81[v1568 + 1]);
								v75 = v75 + 1;
								v83 = v71[v75];
								v60[v83[12 - 9]] = v81[v83[1768 - (459 + 1307)]];
								v1567 = 1873 - (474 + 1396);
							end
							if ((3706 >= 3636) and (3 == v1567)) then
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v60[v83[5 - 2]];
								v75 = v75 + 1 + 0;
								v1567 = 1 + 3;
							end
							if ((11 - 7) == v1567) then
								v83 = v71[v75];
								v81[v83[1 + 1]][v83[9 - 6]] = v83[4];
								v75 = v75 + (4 - 3);
								v83 = v71[v75];
								v1567 = 5;
							end
							if ((4899 >= 4124) and (v1567 == (592 - (562 + 29)))) then
								v81[v83[2]] = v83[3 + 0];
								v75 = v75 + (1420 - (374 + 1045));
								v83 = v71[v75];
								v1568 = v83[2 + 0];
								v1567 = 5 - 3;
							end
						end
					else
						local v1569;
						local v1570;
						v81[v83[2]] = v61[v83[641 - (448 + 190)]];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v81[v83[1 + 1]] = v81[v83[3]][v83[3 + 1]];
						v75 = v75 + (3 - 2);
						v83 = v71[v75];
						v81[v83[5 - 3]] = v81[v83[1497 - (1307 + 187)]][v83[4]];
						v75 = v75 + 1;
						v83 = v71[v75];
						v81[v83[7 - 5]][v83[6 - 3]] = v81[v83[4]];
						v75 = v75 + (2 - 1);
						v83 = v71[v75];
						v81[v83[685 - (232 + 451)]] = {};
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v1570 = v83[2 + 0];
						v1569 = v81[v83[567 - (510 + 54)]];
						v81[v1570 + (1 - 0)] = v1569;
						v81[v1570] = v1569[v83[40 - (13 + 23)]];
						v75 = v75 + (1 - 0);
						v83 = v71[v75];
						v81[v83[2 - 0]] = {};
						v75 = v75 + (1 - 0);
						v83 = v71[v75];
						v81[v83[1090 - (830 + 258)]][v83[3]] = v83[14 - 10];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v81[v83[2 + 0]][v83[3]] = v83[1445 - (860 + 581)];
						v75 = v75 + (3 - 2);
						v83 = v71[v75];
						v81[v83[2 + 0]][v83[244 - (237 + 4)]] = v83[4];
					end
				elseif (v84 <= 100) then
					if (v84 <= (194 - 111)) then
						if (v84 <= (187 - 113)) then
							if ((v84 <= (132 - 62)) or (4705 <= 4203)) then
								if ((v84 <= (56 + 12)) or (4781 <= 4245)) then
									if (v84 > 67) then
										v81[v83[2 + 0]] = v81[v83[11 - 8]] / v83[2 + 2];
									else
										local v796;
										local v797, v798;
										local v799;
										local v800;
										v81[v83[2 + 0]] = v61[v83[3]];
										v75 = v75 + (1427 - (85 + 1341));
										v83 = v71[v75];
										v800 = v83[3 - 1];
										v81[v800] = v81[v800]();
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v81[v83[374 - (45 + 327)]][v83[5 - 2]] = v83[506 - (444 + 58)];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2]] = v61[v83[1 + 2]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[1 + 1]] = v61[v83[8 - 5]];
										v75 = v75 + (1733 - (64 + 1668));
										v83 = v71[v75];
										v800 = v83[1975 - (1227 + 746)];
										v799 = v81[v83[3]];
										v81[v800 + (2 - 1)] = v799;
										v81[v800] = v799[v83[4]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[3 - 1]] = v83[497 - (415 + 79)];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v800 = v83[493 - (142 + 349)];
										v797, v798 = v74(v81[v800](v13(v81, v800 + 1 + 0, v83[3 - 0])));
										v76 = (v798 + v800) - 1;
										v796 = 0 + 0;
										for v1479 = v800, v76 do
											v796 = v796 + 1 + 0;
											v81[v1479] = v797[v796];
										end
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v800 = v83[1866 - (1710 + 154)];
										v81[v800] = v81[v800](v13(v81, v800 + (319 - (200 + 118)), v76));
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2 - 0]]();
										v75 = v75 + 1;
										v83 = v71[v75];
										do
											return;
										end
									end
								elseif (v84 == (101 - 32)) then
									v81[v83[2 + 0]] = v60[v83[3 + 0]];
								else
									local v822;
									local v823;
									v81[v83[2]] = v61[v83[2 + 1]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v823 = v83[4 - 2];
									v822 = v81[v83[1253 - (363 + 887)]];
									v81[v823 + (1 - 0)] = v822;
									v81[v823] = v822[v83[18 - 14]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[4 - 2]] = v83[3 + 0];
									v75 = v75 + 1;
									v83 = v71[v75];
									v823 = v83[2];
									v81[v823] = v81[v823](v13(v81, v823 + 1, v83[1667 - (674 + 990)]));
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v823 = v83[2];
									v822 = v81[v83[3]];
									v81[v823 + 1 + 0] = v822;
									v81[v823] = v822[v83[6 - 2]];
									v75 = v75 + (1056 - (507 + 548));
									v83 = v71[v75];
									v81[v83[2]] = v83[840 - (289 + 548)];
									v75 = v75 + (1819 - (821 + 997));
									v83 = v71[v75];
									v823 = v83[257 - (195 + 60)];
									v81[v823] = v81[v823](v13(v81, v823 + 1 + 0, v83[1504 - (251 + 1250)]));
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									if v81[v83[2 + 0]] then
										v75 = v75 + (1033 - (809 + 223));
									else
										v75 = v83[3 - 0];
									end
								end
							elseif (v84 <= 72) then
								if (v84 == (213 - 142)) then
									local v840;
									local v841, v842;
									local v843;
									local v844;
									v844 = v83[6 - 4];
									v81[v844] = v81[v844]();
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 + 0]][v83[620 - (14 + 603)]] = v81[v83[133 - (118 + 11)]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v61[v83[3]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[951 - (551 + 398)]] = v61[v83[2 + 1]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v844 = v83[2 + 0];
									v843 = v81[v83[11 - 8]];
									v81[v844 + 1] = v843;
									v81[v844] = v843[v83[9 - 5]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[7 - 5]] = v83[1 + 2];
									v75 = v75 + (90 - (40 + 49));
									v83 = v71[v75];
									v844 = v83[7 - 5];
									v841, v842 = v74(v81[v844](v13(v81, v844 + (491 - (99 + 391)), v83[3 + 0])));
									v76 = (v842 + v844) - 1;
									v840 = 0 - 0;
									for v1482 = v844, v76 do
										v840 = v840 + (2 - 1);
										v81[v1482] = v841[v840];
									end
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v844 = v83[5 - 3];
									v81[v844] = v81[v844](v13(v81, v844 + 1, v76));
									v75 = v75 + (1605 - (1032 + 572));
									v83 = v71[v75];
									v81[v83[2]]();
									v75 = v75 + (418 - (203 + 214));
									v83 = v71[v75];
									v75 = v83[1820 - (568 + 1249)];
								else
									local v863;
									local v864;
									local v865;
									v81[v83[2 + 0]] = v83[6 - 3];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[1308 - (913 + 393)]] = v61[v83[3]];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v81[v83[2 - 0]] = v81[v83[3]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v865 = v83[2];
									v81[v865] = v81[v865](v81[v865 + 1]);
									v75 = v75 + (411 - (269 + 141));
									v83 = v71[v75];
									v81[v83[2]] = v83[3];
									v75 = v75 + (2 - 1);
									v83 = v71[v75];
									v864 = v83[1984 - (362 + 1619)];
									v863 = v81[v864];
									for v1485 = v864 + (1626 - (950 + 675)), v83[4] do
										v863 = v863 .. v81[v1485];
									end
									v81[v83[1 + 1]] = v863;
								end
							elseif (v84 > 73) then
								local v880 = 1179 - (216 + 963);
								local v881;
								local v882;
								local v883;
								while true do
									if ((1287 - (485 + 802)) == v880) then
										v881 = v83[561 - (432 + 127)];
										v882 = v81[v881];
										v880 = 1074 - (1065 + 8);
									end
									if (v880 == (1 + 0)) then
										v883 = v83[1604 - (635 + 966)];
										for v2228 = 1, v883 do
											v882[v2228] = v81[v881 + v2228];
										end
										break;
									end
								end
							else
								local v884 = 0;
								local v885;
								local v886;
								local v887;
								local v888;
								local v889;
								while true do
									if ((3921 < 4484) and ((3 + 0) == v884)) then
										v75 = v75 + (43 - (5 + 37));
										v83 = v71[v75];
										v81[v83[4 - 2]] = v61[v83[2 + 1]];
										v75 = v75 + (1 - 0);
										v884 = 4;
									end
									if (v884 == (1 + 0)) then
										v889 = v83[3 - 1];
										v81[v889] = v81[v889](v13(v81, v889 + (3 - 2), v76));
										v75 = v75 + 1;
										v83 = v71[v75];
										v884 = 3 - 1;
									end
									if ((700 == 700) and ((4 - 2) == v884)) then
										v81[v83[2 + 0]]();
										v75 = v75 + (530 - (318 + 211));
										v83 = v71[v75];
										v81[v83[9 - 7]] = v61[v83[1590 - (963 + 624)]];
										v884 = 2 + 1;
									end
									if ((853 - (518 + 328)) == v884) then
										v76 = (v887 + v889) - 1;
										v885 = 0;
										for v2231 = v889, v76 do
											v885 = v885 + (2 - 1);
											v81[v2231] = v886[v885];
										end
										v75 = v75 + 1;
										v884 = 12 - 4;
									end
									if (v884 == 5) then
										v81[v889] = v888[v83[4]];
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[319 - (301 + 16)]] = v83[8 - 5];
										v884 = 16 - 10;
									end
									if ((v884 == (0 - 0)) or (818 >= 3919)) then
										v885 = nil;
										v886, v887 = nil;
										v888 = nil;
										v889 = nil;
										v884 = 1 + 0;
									end
									if (v884 == (4 + 2)) then
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v889 = v83[2 + 0];
										v886, v887 = v74(v81[v889](v13(v81, v889 + 1 + 0, v83[9 - 6])));
										v884 = 3 + 4;
									end
									if (v884 == (1023 - (829 + 190))) then
										v83 = v71[v75];
										v889 = v83[7 - 5];
										v888 = v81[v83[3 - 0]];
										v81[v889 + (1 - 0)] = v888;
										v884 = 5;
									end
									if ((3285 < 3528) and (v884 == (24 - 14))) then
										v83 = v71[v75];
										v81[v83[1 + 1]] = v61[v83[1 + 2]];
										break;
									end
									if (v884 == 8) then
										v83 = v71[v75];
										v889 = v83[5 - 3];
										v81[v889] = v81[v889](v13(v81, v889 + 1 + 0, v76));
										v75 = v75 + 1;
										v884 = 622 - (520 + 93);
									end
									if (v884 == (285 - (259 + 17))) then
										v83 = v71[v75];
										v889 = v83[2];
										v81[v889] = v81[v889]();
										v75 = v75 + 1 + 0;
										v884 = 4 + 6;
									end
								end
							end
						elseif ((1121 < 2815) and (v84 <= (263 - 185))) then
							if (v84 <= (667 - (396 + 195))) then
								if (v84 == (217 - 142)) then
									local v890 = 0;
									local v891;
									local v892;
									while true do
										if ((1761 - (440 + 1321)) == v890) then
											v891 = v83[1831 - (1059 + 770)];
											v892 = v81[v891];
											v890 = 4 - 3;
										end
										if (v890 == 1) then
											for v2234 = v891 + 1, v83[548 - (424 + 121)] do
												v7(v892, v81[v2234]);
											end
											break;
										end
									end
								else
									local v893;
									local v894;
									v81[v83[1 + 1]][v83[1350 - (641 + 706)]] = v81[v83[4]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v894 = v83[442 - (249 + 191)];
									v81[v894](v13(v81, v894 + (4 - 3), v83[2 + 1]));
									v75 = v75 + 1;
									v83 = v71[v75];
									v894 = v83[7 - 5];
									v893 = v81[v83[430 - (183 + 244)]];
									v81[v894 + 1 + 0] = v893;
									v81[v894] = v893[v83[4]];
									v75 = v75 + (731 - (434 + 296));
									v83 = v71[v75];
									v81[v83[5 - 3]] = v83[515 - (169 + 343)];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2]] = {};
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v81[v83[5 - 3]][v83[3 + 0]] = v83[11 - 7];
									v75 = v75 + (1124 - (651 + 472));
									v83 = v71[v75];
									v81[v83[2 + 0]][v83[2 + 1]] = v83[4 - 0];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[485 - (397 + 86)]][v83[879 - (423 + 453)]] = v83[1 + 3];
								end
							elseif (v84 == 77) then
								local v913 = v83[2];
								do
									return v13(v81, v913, v913 + v83[1 + 2]);
								end
							else
								local v914;
								local v915;
								v81[v83[2 + 0]] = v81[v83[3 + 0]][v81[v83[4 + 0]]];
								v75 = v75 + (1191 - (50 + 1140));
								v83 = v71[v75];
								v915 = v83[2 + 0];
								v914 = v81[v83[2 + 1]];
								v81[v915 + 1 + 0] = v914;
								v81[v915] = v914[v83[5 - 1]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v915 = v83[2];
								v81[v915](v81[v915 + 1 + 0]);
								v75 = v75 + (597 - (157 + 439));
								v83 = v71[v75];
								v81[v83[2]] = v60[v83[4 - 1]];
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[5 - 3]][v81[v83[921 - (782 + 136)]]] = v83[4];
								v75 = v75 + (856 - (112 + 743));
								v83 = v71[v75];
								v75 = v83[1174 - (1026 + 145)];
							end
						elseif (v84 <= (14 + 66)) then
							if (v84 > (797 - (493 + 225))) then
								local v930 = 0;
								local v931;
								while true do
									if (v930 == (0 - 0)) then
										v931 = v83[2 + 0];
										v81[v931](v81[v931 + (2 - 1)]);
										break;
									end
								end
							else
								local v932 = 0 + 0;
								local v933;
								local v934;
								local v935;
								while true do
									if ((4684 > 322) and (v932 == 1)) then
										v935 = 0 - 0;
										for v2235 = v933, v83[2 + 2] do
											local v2236 = 0 - 0;
											while true do
												if ((1595 - (210 + 1385)) == v2236) then
													v935 = v935 + 1;
													v81[v2235] = v934[v935];
													break;
												end
											end
										end
										break;
									end
									if ((1511 >= 743) and (v932 == (1689 - (1201 + 488)))) then
										v933 = v83[2 + 0];
										v934 = {v81[v933](v13(v81, v933 + (1 - 0), v76))};
										v932 = 586 - (352 + 233);
									end
								end
							end
						elseif (v84 <= (195 - 114)) then
							local v936;
							local v937;
							v81[v83[2 + 0]][v83[3]] = v81[v83[4]];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v937 = v83[2];
							v81[v937](v13(v81, v937 + (575 - (489 + 85)), v83[1504 - (277 + 1224)]));
							v75 = v75 + (1494 - (663 + 830));
							v83 = v71[v75];
							v937 = v83[2 + 0];
							v936 = v81[v83[3]];
							v81[v937 + 1] = v936;
							v81[v937] = v936[v83[9 - 5]];
							v75 = v75 + (876 - (461 + 414));
							v83 = v71[v75];
							v937 = v83[2];
							v81[v937](v81[v937 + 1 + 0]);
							v75 = v75 + 1;
							v83 = v71[v75];
							v937 = v83[1 + 1];
							v936 = v81[v83[1 + 2]];
							v81[v937 + 1] = v936;
							v81[v937] = v936[v83[4 + 0]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[252 - (172 + 78)]] = v83[4 - 1];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2 - 0]] = {};
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[1 + 1]][v83[3]] = v83[6 - 2];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v81[v83[1 + 1]][v83[2 + 1]] = v83[2 + 2];
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v81[v83[4 - 2]][v83[3]] = v83[2 + 2];
						elseif (v84 == (47 + 35)) then
							local v1594;
							local v1595;
							v1595 = v83[2];
							v81[v1595] = v81[v1595](v13(v81, v1595 + (448 - (133 + 314)), v83[1 + 2]));
							v75 = v75 + (214 - (199 + 14));
							v83 = v71[v75];
							v81[v83[7 - 5]] = {};
							v75 = v75 + 1;
							v83 = v71[v75];
							v1595 = v83[2];
							v1594 = v81[v83[1552 - (647 + 902)]];
							v81[v1595 + (2 - 1)] = v1594;
							v81[v1595] = v1594[v83[237 - (85 + 148)]];
							v75 = v75 + (1290 - (426 + 863));
							v83 = v71[v75];
							v81[v83[2]] = v83[13 - 10];
							v75 = v75 + (1655 - (873 + 781));
							v83 = v71[v75];
							v1595 = v83[2 - 0];
							v81[v1595] = v81[v1595](v13(v81, v1595 + (2 - 1), v83[2 + 1]));
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v81[v83[2 - 0]][v83[8 - 5]] = v81[v83[1951 - (414 + 1533)]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v1595 = v83[2 + 0];
							v1594 = v81[v83[558 - (443 + 112)]];
							v81[v1595 + (1480 - (888 + 591))] = v1594;
							v81[v1595] = v1594[v83[4]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[5 - 3]] = v83[1 + 2];
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v1595 = v83[2];
							v81[v1595] = v81[v1595](v13(v81, v1595 + 1 + 0, v83[2 + 1]));
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2]][v83[5 - 2]] = v81[v83[6 - 2]];
						else
							local v1616 = 1678 - (136 + 1542);
							local v1617;
							while true do
								if (v1616 == (0 - 0)) then
									v1617 = v83[2];
									v81[v1617] = v81[v1617](v13(v81, v1617 + 1 + 0, v83[4 - 1]));
									break;
								end
							end
						end
					elseif (v84 <= (66 + 25)) then
						if (v84 <= (573 - (68 + 418))) then
							if ((v84 <= (230 - 145)) or (451 > 3015)) then
								if ((2197 > 1492) and (v84 == (151 - 67))) then
									local v958;
									local v959;
									v81[v83[2]] = v61[v83[3 + 0]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v81[v83[1094 - (770 + 322)]] = v81[v83[1 + 2]][v83[2 + 2]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 - 0]][v83[5 - 2]] = v81[v83[10 - 6]];
									v75 = v75 + 1;
									v83 = v71[v75];
									v959 = v83[7 - 5];
									v958 = v81[v83[2 + 1]];
									v81[v959 + (1 - 0)] = v958;
									v81[v959] = v958[v83[2 + 2]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v81[v83[2 + 0]] = v81[v83[11 - 8]];
									v75 = v75 + (1 - 0);
									v83 = v71[v75];
									v959 = v83[2];
									v81[v959](v13(v81, v959 + 1 + 0, v83[13 - 10]));
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v959 = v83[1 + 1];
									v958 = v81[v83[3]];
									v81[v959 + (4 - 3)] = v958;
									v81[v959] = v958[v83[835 - (762 + 69)]];
									v75 = v75 + (3 - 2);
									v83 = v71[v75];
									v81[v83[2]] = v81[v83[3 + 0]];
									v75 = v75 + 1 + 0;
									v83 = v71[v75];
									v959 = v83[4 - 2];
									v81[v959](v13(v81, v959 + 1, v83[1 + 2]));
									v75 = v75 + 1;
									v83 = v71[v75];
									v959 = v83[2];
									v958 = v81[v83[1 + 2]];
									v81[v959 + (3 - 2)] = v958;
									v81[v959] = v958[v83[161 - (8 + 149)]];
								else
									local v984 = 1320 - (1199 + 121);
									local v985;
									local v986;
									while true do
										if (v984 == (4 - 1)) then
											v81[v986] = v985[v83[8 - 4]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[1 + 1]] = v83[10 - 7];
											v75 = v75 + (2 - 1);
											v83 = v71[v75];
											v984 = 4 + 0;
										end
										if (v984 == 4) then
											v986 = v83[2];
											v81[v986](v13(v81, v986 + 1, v83[3]));
											v75 = v75 + (1808 - (518 + 1289));
											v83 = v71[v75];
											v986 = v83[2 - 0];
											v985 = v81[v83[3]];
											v984 = 1 + 4;
										end
										if ((v984 == (6 - 1)) or (4490 <= 2915)) then
											v81[v986 + 1 + 0] = v985;
											v81[v986] = v985[v83[4]];
											v75 = v75 + (470 - (304 + 165));
											v83 = v71[v75];
											v986 = v83[2 + 0];
											v81[v986](v81[v986 + 1]);
											v984 = 6;
										end
										if (v984 == 2) then
											v81[v986] = v81[v986](v13(v81, v986 + 1, v83[3]));
											v75 = v75 + (161 - (54 + 106));
											v83 = v71[v75];
											v986 = v83[2];
											v985 = v81[v83[1972 - (1618 + 351)]];
											v81[v986 + 1 + 0] = v985;
											v984 = 1019 - (10 + 1006);
										end
										if (v984 == (0 + 0)) then
											v985 = nil;
											v986 = nil;
											v81[v83[2]][v83[3]] = v81[v83[1 + 3]];
											v75 = v75 + 1;
											v83 = v71[v75];
											v81[v83[2]][v83[3]] = v83[12 - 8];
											v984 = 1034 - (912 + 121);
										end
										if (v984 == (1 + 0)) then
											v75 = v75 + (1290 - (1140 + 149));
											v83 = v71[v75];
											v81[v83[2]][v83[3]] = v83[3 + 1];
											v75 = v75 + 1;
											v83 = v71[v75];
											v986 = v83[2 - 0];
											v984 = 1 + 1;
										end
										if (v984 == 6) then
											v75 = v75 + 1;
											v83 = v71[v75];
											v986 = v83[6 - 4];
											v985 = v81[v83[5 - 2]];
											v81[v986 + 1 + 0] = v985;
											v81[v986] = v985[v83[13 - 9]];
											break;
										end
									end
								end
							elseif (v84 == (272 - (165 + 21))) then
								v81[v83[113 - (61 + 50)]] = v81[v83[2 + 1]][v81[v83[19 - 15]]];
							else
								local v989;
								local v990, v991;
								local v992;
								local v993;
								v993 = v83[3 - 1];
								v992 = v81[v83[3]];
								v81[v993 + 1 + 0] = v992;
								v81[v993] = v992[v83[1464 - (1295 + 165)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v83[2 + 1];
								v75 = v75 + (1398 - (819 + 578));
								v83 = v71[v75];
								v993 = v83[1404 - (331 + 1071)];
								v992 = v81[v83[746 - (588 + 155)]];
								v81[v993 + (1283 - (546 + 736))] = v992;
								v81[v993] = v992[v83[1941 - (1834 + 103)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[5 - 3]] = v61[v83[1769 - (1536 + 230)]];
								v75 = v75 + (492 - (128 + 363));
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[3]][v83[9 - 5]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v60[v83[4 - 1]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v993 = v83[4 - 2];
								v81[v993] = v81[v993](v81[v993 + 1]);
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1011 - (615 + 394)]] = v61[v83[3]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[9 - 6]][v83[4]];
								v75 = v75 + (4 - 3);
								v83 = v71[v75];
								v81[v83[653 - (59 + 592)]] = v61[v83[3]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v993 = v83[3 - 1];
								v992 = v81[v83[3 + 0]];
								v81[v993 + 1] = v992;
								v81[v993] = v992[v83[175 - (70 + 101)]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[2 + 0]] = v83[3];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v993 = v83[2];
								v81[v993] = v81[v993](v13(v81, v993 + (242 - (123 + 118)), v83[1 + 2]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[1402 - (653 + 746)]][v83[7 - 3]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[5 - 3]] = v81[v83[2 + 1]][v83[3 + 1]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[3]][v83[1 + 3]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v993 = v83[4 - 2];
								v992 = v81[v83[3 + 0]];
								v81[v993 + (1 - 0)] = v992;
								v81[v993] = v992[v83[1238 - (885 + 349)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v993 = v83[4 - 2];
								v990, v991 = v74(v81[v993](v81[v993 + (2 - 1)]));
								v76 = (v991 + v993) - 1;
								v989 = 0;
								for v1486 = v993, v76 do
									v989 = v989 + (969 - (915 + 53));
									v81[v1486] = v990[v989];
								end
								v75 = v75 + (802 - (768 + 33));
								v83 = v71[v75];
								v993 = v83[7 - 5];
								v990, v991 = v74(v81[v993](v13(v81, v993 + (1 - 0), v76)));
								v76 = (v991 + v993) - (329 - (287 + 41));
								v989 = 847 - (638 + 209);
								for v1489 = v993, v76 do
									v989 = v989 + 1 + 0;
									v81[v1489] = v990[v989];
								end
								v75 = v75 + (1687 - (96 + 1590));
								v83 = v71[v75];
								v993 = v83[2];
								v990, v991 = v74(v81[v993](v13(v81, v993 + (1673 - (741 + 931)), v76)));
								v76 = (v991 + v993) - (1 + 0);
								v989 = 0 - 0;
								for v1492 = v993, v76 do
									local v1493 = 0 - 0;
									while true do
										if (v1493 == 0) then
											v989 = v989 + 1 + 0;
											v81[v1492] = v990[v989];
											break;
										end
									end
								end
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v993 = v83[2];
								v81[v993](v13(v81, v993 + 1 + 0, v76));
								v75 = v75 + 1;
								v83 = v71[v75];
								v75 = v83[11 - 8];
							end
						elseif (v84 <= 89) then
							if (v84 > (29 + 59)) then
								local v1029 = 0 + 0;
								local v1030;
								local v1031;
								while true do
									if ((v1029 == (40 - 30)) or (3249 >= 4026)) then
										v83 = v71[v75];
										v81[v83[2 + 0]] = v83[497 - (64 + 430)];
										break;
									end
									if (v1029 == 4) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v1031 = v83[365 - (106 + 257)];
										v81[v1031](v13(v81, v1031 + 1 + 0, v83[724 - (496 + 225)]));
										v1029 = 10 - 5;
									end
									if ((14 - 11) == v1029) then
										v81[v1031] = v1030[v83[1662 - (256 + 1402)]];
										v75 = v75 + (1900 - (30 + 1869));
										v83 = v71[v75];
										v81[v83[1371 - (213 + 1156)]] = v83[191 - (96 + 92)];
										v1029 = 1 + 3;
									end
									if (v1029 == (905 - (142 + 757))) then
										v81[v1031 + 1 + 0] = v1030;
										v81[v1031] = v1030[v83[4]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v1029 = 7;
									end
									if (2 == v1029) then
										v83 = v71[v75];
										v1031 = v83[81 - (32 + 47)];
										v1030 = v81[v83[1980 - (1053 + 924)]];
										v81[v1031 + 1 + 0] = v1030;
										v1029 = 3;
									end
									if (v1029 == (1 - 0)) then
										v83 = v71[v75];
										v1031 = v83[1650 - (685 + 963)];
										v81[v1031](v13(v81, v1031 + (1 - 0), v83[3 - 0]));
										v75 = v75 + 1;
										v1029 = 1711 - (541 + 1168);
									end
									if (v1029 == (1606 - (645 + 952))) then
										v1030 = v81[v83[3]];
										v81[v1031 + (839 - (669 + 169))] = v1030;
										v81[v1031] = v1030[v83[13 - 9]];
										v75 = v75 + (1 - 0);
										v1029 = 10;
									end
									if (v1029 == 5) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v1031 = v83[2];
										v1030 = v81[v83[3]];
										v1029 = 6;
									end
									if (8 == v1029) then
										v81[v1031](v13(v81, v1031 + 1 + 0, v83[3]));
										v75 = v75 + (766 - (181 + 584));
										v83 = v71[v75];
										v1031 = v83[1397 - (665 + 730)];
										v1029 = 9;
									end
									if (v1029 == (0 - 0)) then
										v1030 = nil;
										v1031 = nil;
										v81[v83[3 - 1]][v83[1353 - (540 + 810)]] = v81[v83[4]];
										v75 = v75 + (3 - 2);
										v1029 = 1;
									end
									if ((v1029 == 7) or (1694 >= 2017)) then
										v81[v83[2]] = v83[8 - 5];
										v75 = v75 + 1;
										v83 = v71[v75];
										v1031 = v83[2 + 0];
										v1029 = 211 - (166 + 37);
									end
								end
							else
								local v1032 = v83[2];
								v81[v1032](v13(v81, v1032 + 1, v76));
							end
						elseif ((3948 < 3982) and (v84 == 90)) then
							local v1033;
							local v1034;
							v1034 = v83[1883 - (22 + 1859)];
							v81[v1034](v13(v81, v1034 + (1773 - (843 + 929)), v83[265 - (30 + 232)]));
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v81[v83[779 - (55 + 722)]] = v81[v83[6 - 3]][v83[1679 - (78 + 1597)]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v1034 = v83[1 + 1];
							v1033 = v81[v83[3 + 0]];
							v81[v1034 + 1 + 0] = v1033;
							v81[v1034] = v1033[v83[4]];
							v75 = v75 + (550 - (305 + 244));
							v83 = v71[v75];
							v81[v83[2 + 0]] = v83[3];
							v75 = v75 + (106 - (95 + 10));
							v83 = v71[v75];
							v1034 = v83[2 + 0];
							v81[v1034] = v81[v1034](v13(v81, v1034 + (3 - 2), v83[3 - 0]));
							v75 = v75 + 1;
							v83 = v71[v75];
							v1034 = v83[764 - (592 + 170)];
							v1033 = v81[v83[10 - 7]];
							v81[v1034 + (2 - 1)] = v1033;
							v81[v1034] = v1033[v83[2 + 2]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[4 - 2]] = v83[1 + 2];
						else
							local v1053 = 0 - 0;
							local v1054;
							while true do
								if (v1053 == (507 - (353 + 154))) then
									v1054 = v83[2 - 0];
									v81[v1054] = v81[v1054](v13(v81, v1054 + (1 - 0), v76));
									break;
								end
							end
						end
					elseif (v84 <= (66 + 29)) then
						if (v84 <= (73 + 20)) then
							if (v84 == (61 + 31)) then
								local v1055;
								v81[v83[2 - 0]][v83[5 - 2]] = v81[v83[9 - 5]];
								v75 = v75 + (87 - (7 + 79));
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[3]][v83[185 - (24 + 157)]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[2]]();
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[7 - 4]][v83[384 - (262 + 118)]];
								v75 = v75 + (1084 - (1038 + 45));
								v83 = v71[v75];
								v81[v83[3 - 1]] = v83[233 - (19 + 211)];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[115 - (88 + 25)]] = v83[3];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v1055 = v83[1 + 1];
								v81[v1055](v13(v81, v1055 + 1 + 0, v83[1039 - (1007 + 29)]));
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[4 - 2]] = v61[v83[14 - 11]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v1055 = v83[2];
								v81[v1055] = v81[v1055]();
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[813 - (340 + 471)]][v83[7 - 4]] = v83[593 - (276 + 313)];
							else
								local v1073 = 0 - 0;
								local v1074;
								while true do
									if ((3521 == 3521) and (v1073 == (1 + 0))) then
										v81[v83[1 + 1]] = v61[v83[1 + 2]];
										v75 = v75 + (1973 - (495 + 1477));
										v83 = v71[v75];
										v1074 = v83[2];
										v1073 = 5 - 3;
									end
									if (v1073 == 4) then
										v83 = v71[v75];
										v75 = v83[2 + 1];
										break;
									end
									if ((2742 >= 2484) and (v1073 == (406 - (342 + 61)))) then
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[167 - (4 + 161)]] = v83[3];
										v75 = v75 + 1 + 0;
										v1073 = 12 - 8;
									end
									if (v1073 == (5 - 3)) then
										v81[v1074] = v81[v1074]();
										v75 = v75 + 1;
										v83 = v71[v75];
										v60[v83[500 - (322 + 175)]] = v81[v83[2]];
										v1073 = 566 - (173 + 390);
									end
									if (v1073 == (0 + 0)) then
										v1074 = nil;
										v60[v83[3]] = v81[v83[316 - (203 + 111)]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v1073 = 1 + 0;
									end
								end
							end
						elseif (v84 > (274 - 180)) then
							local v1075 = v83[2];
							v81[v1075] = v81[v1075]();
						elseif v81[v83[2]] then
							v75 = v75 + 1 + 0;
						else
							v75 = v83[709 - (57 + 649)];
						end
					elseif (v84 <= (481 - (328 + 56))) then
						if (v84 > (31 + 65)) then
							local v1077;
							v1077 = v83[514 - (433 + 79)];
							v81[v1077] = v81[v1077]();
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2 + 0]][v83[9 - 6]] = v81[v83[4]];
							v75 = v75 + (4 - 3);
							v83 = v71[v75];
							v81[v83[2 + 0]] = v61[v83[3 + 0]];
							v75 = v75 + (1037 - (562 + 474));
							v83 = v71[v75];
							v1077 = v83[2];
							v81[v1077] = v81[v1077]();
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v81[v83[3 - 1]][v83[908 - (76 + 829)]] = v83[4];
							v75 = v75 + (1674 - (1506 + 167));
							v83 = v71[v75];
							v81[v83[3 - 1]] = v83[269 - (58 + 208)];
						else
							local v1090 = v83[2 + 0];
							local v1091, v1092 = v74(v81[v1090](v81[v1090 + 1 + 0]));
							v76 = (v1092 + v1090) - (1 + 0);
							local v1093 = 0 - 0;
							for v1494 = v1090, v76 do
								v1093 = v1093 + (338 - (258 + 79));
								v81[v1494] = v1091[v1093];
							end
						end
					elseif (v84 <= (13 + 85)) then
						local v1094 = 0;
						local v1095;
						local v1096;
						local v1097;
						while true do
							if (v1094 == (0 - 0)) then
								v1095 = v83[1472 - (1219 + 251)];
								v1096 = {v81[v1095](v13(v81, v1095 + (59 - (34 + 24)), v83[3]))};
								v1094 = 1;
							end
							if (v1094 == 1) then
								v1097 = 0;
								for v2239 = v1095, v83[3 + 1] do
									v1097 = v1097 + (1 - 0);
									v81[v2239] = v1096[v1097];
								end
								break;
							end
						end
					elseif (v84 == (44 + 55)) then
						local v1619;
						v81[v83[5 - 3]] = v81[v83[3]][v83[12 - 8]];
						v75 = v75 + 1;
						v83 = v71[v75];
						v81[v83[5 - 3]] = v81[v83[9 - 6]][v83[4]];
						v75 = v75 + (2 - 1);
						v83 = v71[v75];
						v81[v83[1591 - (877 + 712)]] = v81[v83[2 + 1]][v83[758 - (242 + 512)]];
						v75 = v75 + (1 - 0);
						v83 = v71[v75];
						v1619 = v83[629 - (92 + 535)];
						v81[v1619] = v81[v1619](v13(v81, v1619 + 1, v83[3 + 0]));
						v75 = v75 + (1 - 0);
						v83 = v71[v75];
						v81[v83[1 + 1]][v83[10 - 7]] = v81[v83[4]];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v75 = v83[3];
					elseif (v83[2 + 0] == v81[v83[1 + 3]]) then
						v75 = v75 + 1;
					else
						v75 = v83[5 - 2];
					end
				elseif (v84 <= (177 - 60)) then
					if (v84 <= (1893 - (1476 + 309))) then
						if (v84 <= 104) then
							if (v84 <= (1386 - (299 + 985))) then
								if ((3782 >= 3524) and (v84 > (24 + 77))) then
									v75 = v83[3];
								elseif (v81[v83[6 - 4]] == v81[v83[97 - (86 + 7)]]) then
									v75 = v75 + (4 - 3);
								else
									v75 = v83[1 + 2];
								end
							elseif ((3064 <= 3579) and (v84 == (983 - (672 + 208)))) then
								local v1099;
								v81[v83[1 + 1]] = v81[v83[3]][v83[136 - (14 + 118)]];
								v75 = v75 + (446 - (339 + 106));
								v83 = v71[v75];
								v81[v83[2]] = v83[3 + 0] ~= (0 + 0);
								v75 = v75 + (1396 - (440 + 955));
								v83 = v71[v75];
								v81[v83[2 + 0]] = v61[v83[3]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[1 + 1]] = v81[v83[7 - 4]][v83[3 + 1]];
								v75 = v75 + (354 - (260 + 93));
								v83 = v71[v75];
								v81[v83[2]] = v83[3 + 0];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[2]] = v83[4 - 1];
								v75 = v75 + (1975 - (1181 + 793));
								v83 = v71[v75];
								v81[v83[1 + 1]] = v83[3];
								v75 = v75 + 1;
								v83 = v71[v75];
								v1099 = v83[309 - (105 + 202)];
								v81[v1099] = v81[v1099](v13(v81, v1099 + 1, v83[3 + 0]));
								v75 = v75 + (811 - (352 + 458));
								v83 = v71[v75];
								v81[v83[7 - 5]] = {};
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[3]][v83[4 + 0]];
							else
								local v1114;
								local v1115;
								v1115 = v83[5 - 3];
								v81[v1115](v13(v81, v1115 + 1, v83[952 - (438 + 511)]));
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[1385 - (1262 + 121)]] = v81[v83[1071 - (728 + 340)]];
								v75 = v75 + (1791 - (816 + 974));
								v83 = v71[v75];
								v81[v83[5 - 3]]();
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v81[v83[341 - (163 + 176)]] = v61[v83[8 - 5]];
								v75 = v75 + (4 - 3);
								v83 = v71[v75];
								v81[v83[1 + 1]] = v61[v83[1813 - (1564 + 246)]];
								v75 = v75 + (346 - (124 + 221));
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[3]][v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[453 - (115 + 336)]] = v81[v83[3]][v83[4]];
								v75 = v75 + (1 - 0);
								v83 = v71[v75];
								v81[v83[1 + 1]][v83[49 - (45 + 1)]] = v81[v83[1 + 3]];
								v75 = v75 + (1991 - (1282 + 708));
								v83 = v71[v75];
								v81[v83[1214 - (583 + 629)]] = v61[v83[1 + 2]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v1115 = v83[2 + 0];
								v1114 = v81[v83[1173 - (943 + 227)]];
								v81[v1115 + 1 + 0] = v1114;
								v81[v1115] = v1114[v83[1635 - (1539 + 92)]];
							end
						elseif ((2733 >= 427) and (v84 <= (2052 - (706 + 1240)))) then
							if ((v84 > (363 - (81 + 177))) or (4155 >= 4848)) then
								local v1136;
								local v1137;
								v1137 = v83[5 - 3];
								v81[v1137](v13(v81, v1137 + (258 - (212 + 45)), v83[9 - 6]));
								v75 = v75 + (1947 - (708 + 1238));
								v83 = v71[v75];
								v1137 = v83[1 + 1];
								v1136 = v81[v83[1 + 2]];
								v81[v1137 + (1668 - (586 + 1081))] = v1136;
								v81[v1137] = v1136[v83[515 - (348 + 163)]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v1137 = v83[2];
								v81[v1137](v81[v1137 + (281 - (215 + 65))]);
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[4 - 2]] = v61[v83[1862 - (1541 + 318)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[3 + 0]][v83[3 + 1]];
							else
								do
									return;
								end
							end
						elseif (v84 > (81 + 26)) then
							local v1150;
							local v1151;
							local v1152;
							v81[v83[1752 - (1036 + 714)]] = not v81[v83[2 + 1]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v60[v83[1283 - (883 + 397)]] = v81[v83[2]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[592 - (563 + 27)]] = v61[v83[11 - 8]];
							v75 = v75 + (1987 - (1369 + 617));
							v83 = v71[v75];
							v81[v83[1489 - (85 + 1402)]] = v60[v83[2 + 1]];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v1152 = v83[405 - (274 + 129)];
							v1151 = {v81[v1152](v81[v1152 + 1 + 0])};
							v1150 = 0 - 0;
							for v1497 = v1152, v83[4 + 0] do
								local v1498 = 384 - (27 + 357);
								while true do
									if (v1498 == (480 - (91 + 389))) then
										v1150 = v1150 + (298 - (90 + 207));
										v81[v1497] = v1151[v1150];
										break;
									end
								end
							end
							v75 = v75 + 1;
							v83 = v71[v75];
							v75 = v83[1 + 2];
						else
							v81[v83[863 - (706 + 155)]][v81[v83[1798 - (730 + 1065)]]] = v83[1567 - (1339 + 224)];
						end
					elseif (v84 <= 112) then
						if (v84 <= (56 + 54)) then
							if (v84 == 109) then
								local v1165 = v83[2];
								local v1166 = {};
								for v1499 = 1 + 0, #v80 do
									local v1500 = 0 - 0;
									local v1501;
									while true do
										if (v1500 == (843 - (268 + 575))) then
											v1501 = v80[v1499];
											for v2311 = 1294 - (919 + 375), #v1501 do
												local v2312 = v1501[v2311];
												local v2313 = v2312[1];
												local v2314 = v2312[5 - 3];
												if ((v2313 == v81) and (v2314 >= v1165)) then
													v1166[v2314] = v2313[v2314];
													v2312[972 - (180 + 791)] = v1166;
												end
											end
											break;
										end
									end
								end
							else
								v81[v83[1807 - (323 + 1482)]] = v29(v72[v83[3]], nil, v61);
							end
						elseif (v84 > (2029 - (1177 + 741))) then
							local v1168;
							local v1169;
							v81[v83[1 + 1]][v83[11 - 8]] = v81[v83[4]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v1169 = v83[3 - 1];
							v81[v1169](v13(v81, v1169 + 1 + 0, v83[3]));
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[111 - (96 + 13)]] = v81[v83[1924 - (962 + 959)]][v83[9 - 5]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v1169 = v83[1 + 1];
							v1168 = v81[v83[1354 - (461 + 890)]];
							v81[v1169 + 1 + 0] = v1168;
							v81[v1169] = v1168[v83[15 - 11]];
							v75 = v75 + (244 - (19 + 224));
							v83 = v71[v75];
							v1169 = v83[2 + 0];
							v81[v1169] = v81[v1169](v81[v1169 + (199 - (37 + 161))]);
							v75 = v75 + 1;
							v83 = v71[v75];
							v1169 = v83[2];
							v1168 = v81[v83[2 + 1]];
							v81[v1169 + 1 + 0] = v1168;
							v81[v1169] = v1168[v83[4]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[63 - (60 + 1)]] = v83[926 - (826 + 97)];
							v75 = v75 + 1;
							v83 = v71[v75];
							v1169 = v83[2];
							v81[v1169] = v81[v1169](v13(v81, v1169 + 1 + 0, v83[3]));
							v75 = v75 + 1;
							v83 = v71[v75];
							v1169 = v83[6 - 4];
							v1168 = v81[v83[5 - 2]];
							v81[v1169 + (686 - (375 + 310))] = v1168;
							v81[v1169] = v1168[v83[2003 - (1864 + 135)]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[4 - 2]] = {};
						else
							local v1192;
							local v1193, v1194;
							local v1195;
							local v1196;
							v81[v83[1 + 1]] = v61[v83[2 + 1]];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v81[v83[2]] = v61[v83[1134 - (314 + 817)]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v1196 = v83[2 + 0];
							v1195 = v81[v83[3]];
							v81[v1196 + (215 - (32 + 182))] = v1195;
							v81[v1196] = v1195[v83[4]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2]] = v83[3 + 0];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2]] = v83[10 - 7] ~= (65 - (39 + 26));
							v75 = v75 + (145 - (54 + 90));
							v83 = v71[v75];
							v1196 = v83[200 - (45 + 153)];
							v1193, v1194 = v74(v81[v1196](v13(v81, v1196 + 1 + 0, v83[555 - (457 + 95)])));
							v76 = (v1194 + v1196) - (1 + 0);
							v1192 = 0 - 0;
							for v1502 = v1196, v76 do
								v1192 = v1192 + (2 - 1);
								v81[v1502] = v1193[v1192];
							end
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v1196 = v83[1 + 1];
							v81[v1196] = v81[v1196](v13(v81, v1196 + (3 - 2), v76));
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v81[v83[750 - (485 + 263)]]();
							v75 = v75 + (708 - (575 + 132));
							v83 = v71[v75];
							do
								return;
							end
						end
					elseif (v84 <= (975 - (750 + 111))) then
						if ((4370 == 4370) and (v84 == 113)) then
							v60[v83[1013 - (445 + 565)]] = v81[v83[2]];
						else
							local v1212;
							local v1213;
							local v1214;
							v81[v83[2 + 0]] = v83[1 + 2];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v81[v83[2]] = v61[v83[2 + 1]];
							v75 = v75 + (311 - (189 + 121));
							v83 = v71[v75];
							v81[v83[1 + 1]] = v81[v83[1350 - (634 + 713)]];
							v75 = v75 + (539 - (493 + 45));
							v83 = v71[v75];
							v1214 = v83[2];
							v81[v1214] = v81[v1214](v81[v1214 + (969 - (493 + 475))]);
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[1 + 1]] = v83[787 - (158 + 626)];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v1213 = v83[4 - 1];
							v1212 = v81[v1213];
							for v1505 = v1213 + 1 + 0, v83[1 + 3] do
								v1212 = v1212 .. v81[v1505];
							end
							v81[v83[1093 - (1035 + 56)]] = v1212;
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2]] = v83[962 - (114 + 845)];
						end
					elseif (v84 <= (45 + 70)) then
						local v1229;
						local v1230;
						v81[v83[5 - 3]][v83[3 + 0]] = v81[v83[1053 - (179 + 870)]];
						v75 = v75 + (1 - 0);
						v83 = v71[v75];
						v1230 = v83[880 - (827 + 51)];
						v81[v1230](v13(v81, v1230 + (2 - 1), v83[2 + 1]));
						v75 = v75 + (474 - (95 + 378));
						v83 = v71[v75];
						v1230 = v83[2];
						v1229 = v81[v83[1 + 2]];
						v81[v1230 + (1 - 0)] = v1229;
						v81[v1230] = v1229[v83[4 + 0]];
						v75 = v75 + 1;
						v83 = v71[v75];
						v81[v83[1013 - (334 + 677)]] = v83[11 - 8];
						v75 = v75 + (1057 - (1049 + 7));
						v83 = v71[v75];
						v81[v83[8 - 6]] = {};
						v75 = v75 + (1 - 0);
						v83 = v71[v75];
						v81[v83[1 + 1]][v83[7 - 4]] = v83[7 - 3];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v81[v83[2]][v83[1423 - (1004 + 416)]] = v83[1961 - (1621 + 336)];
						v75 = v75 + (1940 - (337 + 1602));
						v83 = v71[v75];
						v81[v83[2]][v83[3]] = v83[1521 - (1014 + 503)];
						v75 = v75 + (1016 - (446 + 569));
						v83 = v71[v75];
						v81[v83[1 + 1]][v83[8 - 5]] = v83[4];
						v75 = v75 + 1 + 0;
						v83 = v71[v75];
						v81[v83[3 - 1]][v83[1 + 2]] = v83[509 - (223 + 282)];
					elseif (v84 > (4 + 112)) then
						v81[v83[2]]();
					else
						local v1632 = 0 - 0;
						local v1633;
						local v1634;
						local v1635;
						local v1636;
						while true do
							if ((1613 > 999) and (v1632 == (0 - 0))) then
								v1633 = v83[672 - (623 + 47)];
								v1634, v1635 = v74(v81[v1633](v13(v81, v1633 + (46 - (32 + 13)), v83[2 + 1])));
								v1632 = 1 + 0;
							end
							if ((1679 < 3257) and (v1632 == (1803 - (1070 + 731)))) then
								for v2316 = v1633, v76 do
									v1636 = v1636 + 1 + 0;
									v81[v2316] = v1634[v1636];
								end
								break;
							end
							if (v1632 == (1405 - (1257 + 147))) then
								v76 = (v1635 + v1633) - (1 + 0);
								v1636 = 0 - 0;
								v1632 = 135 - (98 + 35);
							end
						end
					end
				elseif ((v84 <= 125) or (4455 <= 2599)) then
					if (v84 <= (51 + 70)) then
						if (v84 <= (421 - 302)) then
							if ((458 < 1461) and (v84 > (396 - 278))) then
								local v1253 = 0 + 0;
								local v1254;
								local v1255;
								while true do
									if ((343 == 343) and (v1253 == (4 + 0))) then
										v1254 = v81[v83[2 + 1]];
										v81[v1255 + 1] = v1254;
										v81[v1255] = v1254[v83[561 - (395 + 162)]];
										v75 = v75 + 1;
										v1253 = 5 + 0;
									end
									if (v1253 == (1941 - (816 + 1125))) then
										v1254 = nil;
										v1255 = nil;
										v1255 = v83[2];
										v1254 = v81[v83[3]];
										v1253 = 1 - 0;
									end
									if ((3361 > 2998) and (v1253 == (1158 - (701 + 447)))) then
										v81[v83[2 - 0]][v83[3]] = v83[6 - 2];
										break;
									end
									if ((1343 - (391 + 950)) == v1253) then
										v81[v83[5 - 3]] = v83[3];
										v75 = v75 + 1;
										v83 = v71[v75];
										v1255 = v83[4 - 2];
										v1253 = 3;
									end
									if (v1253 == (14 - 8)) then
										v83 = v71[v75];
										v1255 = v83[2 + 0];
										v1254 = v81[v83[2 + 1]];
										v81[v1255 + (3 - 2)] = v1254;
										v1253 = 1529 - (251 + 1271);
									end
									if ((v1253 == 1) or (1777 == 4800)) then
										v81[v1255 + 1 + 0] = v1254;
										v81[v1255] = v1254[v83[10 - 6]];
										v75 = v75 + (2 - 1);
										v83 = v71[v75];
										v1253 = 2 - 0;
									end
									if ((2558 > 700) and (v1253 == (1267 - (1147 + 112)))) then
										v75 = v75 + 1;
										v83 = v71[v75];
										v81[v83[1 + 1]] = {};
										v75 = v75 + (1 - 0);
										v1253 = 3 + 6;
									end
									if (v1253 == (706 - (335 + 362))) then
										v83 = v71[v75];
										v81[v83[2]][v83[3 + 0]] = v83[4];
										v75 = v75 + (1 - 0);
										v83 = v71[v75];
										v1253 = 27 - 17;
									end
									if (v1253 == 5) then
										v83 = v71[v75];
										v1255 = v83[2];
										v81[v1255](v81[v1255 + (3 - 2)]);
										v75 = v75 + 1;
										v1253 = 29 - 23;
									end
									if ((v1253 == (8 - 5)) or (3985 <= 705)) then
										v81[v1255](v13(v81, v1255 + (567 - (237 + 329)), v83[10 - 7]));
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v1255 = v83[2 + 0];
										v1253 = 1128 - (408 + 716);
									end
									if ((v1253 == (26 - 19)) or (4435 < 3880)) then
										v81[v1255] = v1254[v83[825 - (344 + 477)]];
										v75 = v75 + 1 + 0;
										v83 = v71[v75];
										v81[v83[2]] = v83[1764 - (1188 + 573)];
										v1253 = 20 - 12;
									end
								end
							else
								local v1256 = 0 + 0;
								local v1257;
								local v1258;
								local v1259;
								while true do
									if (v1256 == (0 - 0)) then
										v1257 = v83[2 - 0];
										v1258 = {v81[v1257](v81[v1257 + (1530 - (508 + 1021))])};
										v1256 = 1 + 0;
									end
									if (v1256 == (1167 - (228 + 938))) then
										v1259 = 685 - (332 + 353);
										for v2246 = v1257, v83[4 - 0] do
											local v2247 = 0 - 0;
											while true do
												if (v2247 == 0) then
													v1259 = v1259 + 1;
													v81[v2246] = v1258[v1259];
													break;
												end
											end
										end
										break;
									end
								end
							end
						elseif ((v84 == (114 + 6)) or (4594 <= 2785)) then
							local v1260 = 0 + 0;
							local v1261;
							local v1262;
							while true do
								if (v1260 == (3 - 2)) then
									v81[v1261 + (424 - (18 + 405))] = v1262;
									v81[v1261] = v1262[v83[2 + 2]];
									break;
								end
								if ((v1260 == 0) or (4699 <= 3844)) then
									v1261 = v83[2 + 0];
									v1262 = v81[v83[3 - 0]];
									v1260 = 979 - (194 + 784);
								end
							end
						else
							local v1263;
							local v1264, v1265;
							local v1266;
							local v1267;
							v1267 = v83[1772 - (694 + 1076)];
							v1266 = v81[v83[1907 - (122 + 1782)]];
							v81[v1267 + 1 + 0] = v1266;
							v81[v1267] = v1266[v83[4 + 0]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2 + 0]] = v83[3];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v1267 = v83[2 + 0];
							v1264, v1265 = v74(v81[v1267](v13(v81, v1267 + (1971 - (214 + 1756)), v83[14 - 11])));
							v76 = (v1265 + v1267) - (1 + 0);
							v1263 = 0 + 0;
							for v1506 = v1267, v76 do
								v1263 = v1263 + 1;
								v81[v1506] = v1264[v1263];
							end
							v75 = v75 + (586 - (217 + 368));
							v83 = v71[v75];
							v1267 = v83[5 - 3];
							v81[v1267] = v81[v1267](v13(v81, v1267 + 1 + 0, v76));
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v1267 = v83[1 + 1];
							v81[v1267] = v81[v1267]();
							v75 = v75 + (890 - (844 + 45));
							v83 = v71[v75];
							v81[v83[2]] = v61[v83[287 - (242 + 42)]];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v81[v83[4 - 2]] = v61[v83[3]];
							v75 = v75 + (1201 - (132 + 1068));
							v83 = v71[v75];
							v1267 = v83[2 - 0];
							v1266 = v81[v83[3]];
							v81[v1267 + (1624 - (214 + 1409))] = v1266;
							v81[v1267] = v1266[v83[4 + 0]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2]] = v83[3];
							v75 = v75 + 1;
							v83 = v71[v75];
							v1267 = v83[1636 - (497 + 1137)];
							v1264, v1265 = v74(v81[v1267](v13(v81, v1267 + 1, v83[943 - (9 + 931)])));
							v76 = (v1265 + v1267) - 1;
							v1263 = 289 - (181 + 108);
							for v1509 = v1267, v76 do
								v1263 = v1263 + 1 + 0;
								v81[v1509] = v1264[v1263];
							end
						end
					elseif (v84 <= (303 - 180)) then
						if (v84 > (361 - 239)) then
							local v1287;
							local v1288;
							v1288 = v83[1 + 1];
							v1287 = v81[v83[2 + 1]];
							v81[v1288 + (477 - (296 + 180))] = v1287;
							v81[v1288] = v1287[v83[4]];
							v75 = v75 + (1404 - (1183 + 220));
							v83 = v71[v75];
							v81[v83[1267 - (1037 + 228)]] = v83[4 - 1];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v1288 = v83[6 - 4];
							v81[v1288] = v81[v1288](v13(v81, v1288 + (735 - (527 + 207)), v83[530 - (187 + 340)]));
							v75 = v75 + (1871 - (1298 + 572));
							v83 = v71[v75];
							v81[v83[4 - 2]] = v61[v83[173 - (144 + 26)]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v1288 = v83[4 - 2];
							v1287 = v81[v83[6 - 3]];
							v81[v1288 + 1 + 0] = v1287;
							v81[v1288] = v1287[v83[4]];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v81[v83[4 - 2]] = v83[3];
							v75 = v75 + (4 - 3);
							v83 = v71[v75];
							v1288 = v83[2 + 0];
							v81[v1288] = v81[v1288](v13(v81, v1288 + (1 - 0), v83[3 + 0]));
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2]] = v83[2 + 1] ~= (202 - (5 + 197));
							v75 = v75 + (687 - (339 + 347));
							v83 = v71[v75];
							for v1512 = v83[4 - 2], v83[10 - 7] do
								v81[v1512] = nil;
							end
						else
							local v1306;
							local v1307;
							v81[v83[378 - (365 + 11)]][v83[3 + 0]] = v81[v83[4]];
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v1307 = v83[2];
							v81[v1307](v13(v81, v1307 + 1, v83[3]));
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v1307 = v83[926 - (837 + 87)];
							v1306 = v81[v83[4 - 1]];
							v81[v1307 + (1671 - (837 + 833))] = v1306;
							v81[v1307] = v1306[v83[1 + 3]];
							v75 = v75 + (1388 - (356 + 1031));
							v83 = v71[v75];
							v81[v83[1 + 1]] = v83[1649 - (73 + 1573)];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2]] = {};
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[1390 - (1307 + 81)]][v83[237 - (7 + 227)]] = v83[6 - 2];
							v75 = v75 + (167 - (90 + 76));
							v83 = v71[v75];
							v81[v83[6 - 4]][v83[2 + 1]] = v83[4 + 0];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2]][v83[3]] = v83[15 - 11];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[262 - (197 + 63)]][v83[1 + 2]] = v83[1 + 3];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[1 + 1]][v83[3 - 0]] = v83[1373 - (618 + 751)];
						end
					elseif ((4306 == 4306) and (v84 > (93 + 31))) then
						local v1330 = 1910 - (206 + 1704);
						local v1331;
						local v1332;
						local v1333;
						local v1334;
						while true do
							if ((2618 <= 4974) and (v1330 == 4)) then
								v81[v83[2 - 0]] = v81[v83[3]][v83[7 - 3]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v1334 = v83[1277 - (155 + 1120)];
								v1330 = 5;
							end
							if ((1513 <= 3398) and (v1330 == (1507 - (396 + 1110)))) then
								v81[v83[4 - 2]] = v81[v83[3]][v83[2 + 2]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[2 + 0]] = v60[v83[3]];
								v1330 = 2;
							end
							if ((3205 > 2827) and (v1330 == (979 - (230 + 746)))) then
								v81[v1334 + (602 - (473 + 128))] = v1333;
								v81[v1334] = v1333[v83[52 - (39 + 9)]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v1330 = 270 - (38 + 228);
							end
							if ((3 - 1) == v1330) then
								v75 = v75 + (474 - (106 + 367));
								v83 = v71[v75];
								v1334 = v83[1 + 1];
								v1333 = v81[v83[1865 - (354 + 1508)]];
								v1330 = 9 - 6;
							end
							if ((4 + 1) == v1330) then
								v1332 = {v81[v1334](v13(v81, v1334 + (1 - 0), v83[3]))};
								v1331 = 1244 - (334 + 910);
								for v2248 = v1334, v83[899 - (92 + 803)] do
									v1331 = v1331 + 1 + 0;
									v81[v2248] = v1332[v1331];
								end
								v75 = v75 + (1182 - (1035 + 146));
								v1330 = 622 - (230 + 386);
							end
							if (v1330 == (0 + 0)) then
								v1331 = nil;
								v1332 = nil;
								v1333 = nil;
								v1334 = nil;
								v1330 = 1511 - (353 + 1157);
							end
							if ((v1330 == (1120 - (53 + 1061))) or (1111 >= 3484)) then
								v83 = v71[v75];
								v81[v83[1637 - (1568 + 67)]] = v81[v83[3]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v1330 = 1 + 6;
							end
							if ((2242 <= 3716) and (7 == v1330)) then
								v81[v83[4 - 2]] = v81[v83[8 - 5]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[4 - 2]] = v83[3];
								break;
							end
						end
					else
						local v1335 = 0 + 0;
						local v1336;
						local v1337;
						local v1338;
						local v1339;
						while true do
							if (v1335 == (1213 - (615 + 597))) then
								v83 = v71[v75];
								v81[v83[2 + 0]] = v60[v83[3 - 0]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v1339 = v83[1 + 1];
								v1338 = v81[v83[2 + 1]];
								v1335 = 2;
							end
							if ((1902 - (1056 + 843)) == v1335) then
								v83 = v71[v75];
								v1339 = v83[3 - 1];
								v1337 = {v81[v1339](v13(v81, v1339 + (2 - 1), v83[2 + 1]))};
								v1336 = 1976 - (286 + 1690);
								for v2251 = v1339, v83[915 - (98 + 813)] do
									local v2252 = 0 + 0;
									while true do
										if (v2252 == (0 - 0)) then
											v1336 = v1336 + 1 + 0;
											v81[v2251] = v1337[v1336];
											break;
										end
									end
								end
								v75 = v75 + 1;
								v1335 = 511 - (263 + 244);
							end
							if (v1335 == (4 + 1)) then
								v83 = v71[v75];
								v81[v83[2]] = v83[1690 - (1502 + 185)];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v75 = v83[3];
								break;
							end
							if ((4573 == 4573) and (v1335 == (19 - 15))) then
								v83 = v71[v75];
								v81[v83[5 - 3]] = v81[v83[1530 - (629 + 898)]];
								v75 = v75 + (2 - 1);
								v83 = v71[v75];
								v81[v83[5 - 3]] = v81[v83[368 - (12 + 353)]];
								v75 = v75 + (1912 - (1680 + 231));
								v1335 = 1 + 4;
							end
							if (v1335 == (2 + 0)) then
								v81[v1339 + (1150 - (212 + 937))] = v1338;
								v81[v1339] = v1338[v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[1064 - (111 + 951)]] = v81[v83[3]][v83[1 + 3]];
								v75 = v75 + (28 - (18 + 9));
								v1335 = 3;
							end
							if ((0 + 0) == v1335) then
								v1336 = nil;
								v1337 = nil;
								v1338 = nil;
								v1339 = nil;
								v81[v83[536 - (31 + 503)]] = v81[v83[3]][v83[1636 - (595 + 1037)]];
								v75 = v75 + (1445 - (189 + 1255));
								v1335 = 1 + 0;
							end
						end
					end
				elseif (v84 <= 129) then
					if (v84 <= (196 - 69)) then
						if (v84 > (1405 - (1170 + 109))) then
							local v1340;
							v1340 = v83[1819 - (348 + 1469)];
							v81[v1340] = v81[v1340]();
							v75 = v75 + (1290 - (1115 + 174));
							v83 = v71[v75];
							v81[v83[4 - 2]][v83[1017 - (85 + 929)]] = v83[4];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2]] = v61[v83[3]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v1340 = v83[1869 - (1151 + 716)];
							v81[v1340] = v81[v1340]();
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[1 + 1]] = v61[v83[3 + 0]];
							v75 = v75 + (1705 - (95 + 1609));
							v83 = v71[v75];
							v81[v83[2]] = v81[v83[3]][v83[4]];
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v81[v83[760 - (364 + 394)]] = v83[3 + 0];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[1 + 1]] = v83[3 + 0];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2 + 0]] = v83[3];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v1340 = v83[1 + 1];
							v81[v1340] = v81[v1340](v13(v81, v1340 + 1, v83[3 + 0]));
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2]][v83[959 - (719 + 237)]] = v81[v83[11 - 7]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2 + 0]] = v83[7 - 4];
						else
							local v1360;
							local v1361, v1362;
							local v1363;
							local v1364;
							v81[v83[2]] = v61[v83[8 - 5]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v1364 = v83[4 - 2];
							v81[v1364] = v81[v1364]();
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[1993 - (761 + 1230)]][v83[196 - (80 + 113)]] = v81[v83[3 + 1]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2 + 0]] = v61[v83[1 + 2]];
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v1364 = v83[1 + 1];
							v81[v1364] = v81[v1364]();
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[1245 - (965 + 278)]][v83[1732 - (1391 + 338)]] = v83[10 - 6];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2 + 0]] = v61[v83[6 - 3]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v1364 = v83[1410 - (496 + 912)];
							v81[v1364] = v81[v1364]();
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2]][v83[9 - 6]] = v83[1 + 3];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[3 - 1]] = v61[v83[3]];
							v75 = v75 + (1331 - (1190 + 140));
							v83 = v71[v75];
							v1364 = v83[2];
							v81[v1364] = v81[v1364]();
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2]] = v61[v83[2 + 1]];
							v75 = v75 + (719 - (317 + 401));
							v83 = v71[v75];
							v81[v83[2]] = v81[v83[952 - (303 + 646)]][v83[13 - 9]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[1734 - (1675 + 57)]] = v83[2 + 1];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v81[v83[1 + 1]] = v83[3];
							v75 = v75 + (978 - (338 + 639));
							v83 = v71[v75];
							v81[v83[381 - (320 + 59)]] = v83[2 + 1];
							v75 = v75 + (733 - (628 + 104));
							v83 = v71[v75];
							v1364 = v83[2 - 0];
							v81[v1364] = v81[v1364](v13(v81, v1364 + (1892 - (439 + 1452)), v83[3]));
							v75 = v75 + (1948 - (105 + 1842));
							v83 = v71[v75];
							v81[v83[9 - 7]][v83[3]] = v81[v83[9 - 5]];
							v75 = v75 + (4 - 3);
							v83 = v71[v75];
							v81[v83[1 + 1]] = v61[v83[4 - 1]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v1364 = v83[1166 - (274 + 890)];
							v81[v1364] = v81[v1364]();
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2 + 0]] = v61[v83[1 + 2]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2]] = v81[v83[2 + 1]][v83[5 - 1]];
							v75 = v75 + (820 - (731 + 88));
							v83 = v71[v75];
							v81[v83[2 + 0]] = v83[2 + 1];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2 - 0]] = v83[3];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v81[v83[2]] = v83[8 - 5];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v1364 = v83[2 + 0];
							v81[v1364] = v81[v1364](v13(v81, v1364 + 1 + 0, v83[1 + 2]));
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[160 - (139 + 19)]][v83[1 + 2]] = v81[v83[1997 - (1687 + 306)]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[7 - 5]] = v61[v83[1157 - (1018 + 136)]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v1364 = v83[2];
							v81[v1364] = v81[v1364]();
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v81[v83[2]][v83[13 - 10]] = v81[v83[4]];
							v75 = v75 + (816 - (117 + 698));
							v83 = v71[v75];
							v81[v83[483 - (305 + 176)]] = v61[v83[1 + 2]];
							v75 = v75 + 1 + 0;
							v83 = v71[v75];
							v1364 = v83[2 - 0];
							v81[v1364] = v81[v1364]();
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[2]][v83[3 + 0]] = v81[v83[6 - 2]];
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[4 - 2]] = v61[v83[5 - 2]];
							v75 = v75 + (261 - (159 + 101));
							v83 = v71[v75];
							v81[v83[2]] = v61[v83[14 - 11]];
							v75 = v75 + (3 - 2);
							v83 = v71[v75];
							v1364 = v83[1 + 1];
							v1363 = v81[v83[9 - 6]];
							v81[v1364 + 1] = v1363;
							v81[v1364] = v1363[v83[4]];
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v81[v83[1 + 1]] = v83[269 - (112 + 154)];
							v75 = v75 + (2 - 1);
							v83 = v71[v75];
							v1364 = v83[33 - (21 + 10)];
							v1361, v1362 = v74(v81[v1364](v13(v81, v1364 + (1720 - (531 + 1188)), v83[3 + 0])));
							v76 = (v1362 + v1364) - 1;
							v1360 = 0;
							for v1514 = v1364, v76 do
								v1360 = v1360 + (664 - (96 + 567));
								v81[v1514] = v1361[v1360];
							end
							v75 = v75 + (1 - 0);
							v83 = v71[v75];
							v1364 = v83[2];
							v81[v1364] = v81[v1364](v13(v81, v1364 + 1 + 0, v76));
							v75 = v75 + 1;
							v83 = v71[v75];
							v81[v83[7 - 5]]();
							v75 = v75 + 1;
							v83 = v71[v75];
							do
								return;
							end
						end
					elseif (v84 > 128) then
						local v1417;
						local v1418;
						v81[v83[1697 - (867 + 828)]] = v83[6 - 3];
						v75 = v75 + (3 - 2);
						v83 = v71[v75];
						v1418 = v83[2];
						v81[v1418](v81[v1418 + (2 - 1)]);
						v75 = v75 + (1 - 0);
						v83 = v71[v75];
						v81[v83[1 + 1]] = v61[v83[4 - 1]];
						v75 = v75 + (772 - (134 + 637));
						v83 = v71[v75];
						v1418 = v83[2];
						v1417 = v81[v83[1 + 2]];
						v81[v1418 + (1158 - (775 + 382))] = v1417;
						v81[v1418] = v1417[v83[4]];
						v75 = v75 + (1 - 0);
						v83 = v71[v75];
						v1418 = v83[2];
						v81[v1418] = v81[v1418](v81[v1418 + 1]);
						v75 = v75 + 1;
						v83 = v71[v75];
						if v81[v83[609 - (45 + 562)]] then
							v75 = v75 + (863 - (545 + 317));
						else
							v75 = v83[3 - 0];
						end
					else
						local v1429 = v72[v83[1029 - (763 + 263)]];
						local v1430;
						local v1431 = {};
						v1430 = v10({}, {__index=function(v1517, v1518)
							local v1519 = v1431[v1518];
							return v1519[1 + 0][v1519[1752 - (512 + 1238)]];
						end,__newindex=function(v1520, v1521, v1522)
							local v1523 = v1431[v1521];
							v1523[1][v1523[1596 - (272 + 1322)]] = v1522;
						end});
						for v1525 = 1 - 0, v83[1250 - (533 + 713)] do
							local v1526 = 28 - (14 + 14);
							local v1527;
							while true do
								if ((v1526 == (825 - (499 + 326))) or (725 > 2991)) then
									v75 = v75 + (1 - 0);
									v1527 = v71[v75];
									v1526 = 1;
								end
								if (v1526 == (425 - (104 + 320))) then
									if ((v1527[1998 - (1929 + 68)] == (1385 - (1206 + 117))) or (2112 > 2311)) then
										v1431[v1525 - (1 + 0)] = {v81,v1527[5 - 2]};
									else
										v1431[v1525 - (778 - (772 + 5))] = {v60,v1527[4 - 1]};
									end
									v80[#v80 + (3 - 2)] = v1431;
									break;
								end
							end
						end
						v81[v83[2]] = v29(v1429, v1430, v61);
					end
				elseif (v84 <= (45 + 86)) then
					if (v84 == (111 + 19)) then
						local v1433;
						v81[v83[204 - (10 + 192)]][v83[50 - (13 + 34)]] = v83[4];
						v75 = v75 + (1290 - (342 + 947));
						v83 = v71[v75];
						v81[v83[2]][v83[12 - 9]] = v83[1712 - (119 + 1589)];
						v75 = v75 + (2 - 1);
						v83 = v71[v75];
						v81[v83[2 - 0]][v83[555 - (545 + 7)]] = v83[10 - 6];
						v75 = v75 + 1;
						v83 = v71[v75];
						v1433 = v83[2];
						v81[v1433] = v81[v1433](v13(v81, v1433 + 1 + 0, v83[1706 - (494 + 1209)]));
						v75 = v75 + (2 - 1);
						v83 = v71[v75];
						v81[v83[1000 - (197 + 801)]] = v61[v83[5 - 2]];
						v75 = v75 + (4 - 3);
						v83 = v71[v75];
						v1433 = v83[956 - (919 + 35)];
						v81[v1433] = v81[v1433]();
						v75 = v75 + 1;
						v83 = v71[v75];
						v81[v83[2 + 0]] = v83[11 - 8];
						v75 = v75 + (468 - (369 + 98));
						v83 = v71[v75];
						v81[v83[1117 - (400 + 715)]] = v83[3];
					else
						local v1450 = 0 + 0;
						local v1451;
						local v1452;
						while true do
							if (v1450 == (3 + 2)) then
								v75 = v75 + (1326 - (744 + 581));
								v83 = v71[v75];
								v81[v83[2 + 0]] = v81[v83[3]][v83[4]];
								v75 = v75 + 1;
								v1450 = 6;
							end
							if ((1629 - (653 + 969)) == v1450) then
								v81[v1452] = v1451[v83[4]];
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[2]] = v81[v83[3]];
								v1450 = 15 - 7;
							end
							if (6 == v1450) then
								v83 = v71[v75];
								v1452 = v83[1633 - (12 + 1619)];
								v1451 = v81[v83[3]];
								v81[v1452 + (164 - (103 + 60))] = v1451;
								v1450 = 34 - 27;
							end
							if (((17 - 13) == v1450) or (1233 >= 4623)) then
								v75 = v75 + (4 - 3);
								v83 = v71[v75];
								v1452 = v83[1664 - (710 + 952)];
								v81[v1452](v13(v81, v1452 + (1869 - (555 + 1313)), v83[3 + 0]));
								v1450 = 5 + 0;
							end
							if ((1495 <= 3657) and (v1450 == (1 + 0))) then
								v75 = v75 + (1469 - (1261 + 207));
								v83 = v71[v75];
								v81[v83[254 - (245 + 7)]] = v81[v83[3]][v83[751 - (212 + 535)]];
								v75 = v75 + (4 - 3);
								v1450 = 2;
							end
							if (v1450 == 2) then
								v83 = v71[v75];
								v1452 = v83[1478 - (905 + 571)];
								v1451 = v81[v83[3]];
								v81[v1452 + (4 - 3)] = v1451;
								v1450 = 3;
							end
							if (v1450 == (10 - 2)) then
								v75 = v75 + (3 - 2);
								v83 = v71[v75];
								v1452 = v83[1 + 1];
								v81[v1452](v13(v81, v1452 + 1, v83[1466 - (522 + 941)]));
								v1450 = 1520 - (292 + 1219);
							end
							if ((822 > 72) and (v1450 == (1121 - (787 + 325)))) then
								v75 = v75 + 1;
								v83 = v71[v75];
								v81[v83[5 - 3]] = v61[v83[3 + 0]];
								break;
							end
							if ((646 < 4013) and (v1450 == (0 - 0))) then
								v1451 = nil;
								v1452 = nil;
								v1452 = v83[2];
								v81[v1452](v13(v81, v1452 + (535 - (424 + 110)), v83[3]));
								v1450 = 1 + 0;
							end
							if (v1450 == (2 + 1)) then
								v81[v1452] = v1451[v83[4]];
								v75 = v75 + 1 + 0;
								v83 = v71[v75];
								v81[v83[314 - (33 + 279)]] = v81[v83[1 + 2]];
								v1450 = 1357 - (1338 + 15);
							end
						end
					end
				elseif ((v84 <= 132) or (1939 < 537)) then
					local v1453 = v83[3];
					local v1454 = v81[v1453];
					for v1528 = v1453 + (1424 - (528 + 895)), v83[2 + 2] do
						v1454 = v1454 .. v81[v1528];
					end
					v81[v83[1926 - (1606 + 318)]] = v1454;
				elseif ((2467 == 2467) and (v84 > (1952 - (298 + 1521)))) then
					local v1638 = v83[8 - 6];
					v81[v1638] = v81[v1638](v81[v1638 + (311 - (154 + 156))]);
				else
					v81[v83[2]] = v81[v83[11 - 8]][v83[4]];
					v75 = v75 + (1 - 0);
					v83 = v71[v75];
					v81[v83[2]] = v61[v83[1118 - (712 + 403)]];
					v75 = v75 + 1;
					v83 = v71[v75];
					v81[v83[452 - (168 + 282)]] = v81[v83[5 - 2]][v83[4 + 0]];
					v75 = v75 + 1 + 0;
					v83 = v71[v75];
					v81[v83[5 - 3]] = v81[v83[1454 - (1242 + 209)]][v83[4]];
					v75 = v75 + (680 - (20 + 659));
					v83 = v71[v75];
					if (v81[v83[2 + 0]] == v81[v83[3 + 1]]) then
						v75 = v75 + (1 - 0);
					else
						v75 = v83[6 - 3];
					end
				end
				v75 = v75 + (620 - (427 + 192));
			end
		end;
	end
	return v29(v28(), {}, v17)(...);
end
return vv9(), ...);